---
title: "Data Table"
author: Philipp Burckhardt
date: Dec 27th, 2017
state:
server: https://isle.heinz.cmu.edu
removeStatusBar: true

---

 # Data Table

<br />

<Playground
    style={{
        marginLeft: 0,
        width: '1000px'
    }}
    code={`
 <DataTable
    showRemove
    onClickRemove={( data ) => { console.log( data ); }}
    data={{
        firstName: [ 'Hans', 'Lotti', 'Fritz' ],
        lastName: [ 'Bauer', 'Müller', 'Schultz' ],
        age: [ 37, 55, 62 ]
    }}
 />

`}
    scope={{
        DataTable
    }}
/>

## Representations of Data

One may represent data in two manners in this component.

First, one may supply an object with keys whose names correspond to the column names and whose values are arrays of values representing the columns.
```js
{
    firstName: [ 'Hans', 'Lotti', 'Fritz' ],
    lastName: [ 'Bauer', 'Müller', 'Schultz' ],
    age: [ 37, 55, 62 ]
 }
```

The data above could also be represented as:
```js
[
    {'firstName': 'Hans', 'lastName': 'Bauer', 'age': 37},
    {'firstName': 'Lotti', 'lastName': 'Müller', 'age': 55}
    {'firstName': 'Fritz', 'lastName': 'Schultz', 'age': 62}
]
```

In which we see an array of objects, each object with a field representing an individuals value for that column.


#### Options

* __data__ | `(array|object) (required)`: A data object or array to be viewed. If it is an object, the keys correspond to column values while an array will expect an array of objects with a named field corresponding to each column. Default: `none`.
* __dataInfo__ | `object`: object with `info` string array describing the data set, the `name` of the dataset, an `object` of `variables` with keys corresponding to variable names and values to variable descriptions, an a `showOnStartup` boolean controlling whether to display the info modal on startup. Default: `{
  'info': [],
  'name': '',
  'variables': null,
  'showOnStartup': false
}`.
* __deletable__ | `boolean`: controls whether columns for which no `info` exist have a button which when clicked calls the `onColumnDelete` callback function. Default: `false`.
* __filterable__ | `boolean`: controls whether columns are filterable. Default: `true`.
* __editable__ | `array`: array of names for columns that shall be editable. Default: `[]`.
* __onColumnDrag__ | `function`: undefined. Default: `onColumnDrag() {}`.
* __onColumnDelete__ | `function`: function invoked with the name of a column when the respective delete button for a column is clicked. Default: `onColumnDelete() {}`.
* __onColumnNameChange__ | `function`: undefined. Default: `onColumnNameChange() {}`.
* __onClickRemove__ | `function`: A function specifying an action to take for rows removed from the data (defaults to an empty function). Default: `onClickRemove() {}`.
* __onEdit__ | `function`: function invoked with the updated data set after the value of a cell was changed by the user (only applies when table is `editable`). Default: `onEdit() {}`.
* __filters__ | `array`: undefined. Default: `[]`.
* __onFilteredChange__ | `function`: undefined. Default: `onFilteredChange() {}`.
* __showRemove__ | `boolean`: indicates whether to display checkboxes for rows to be removed. Default: `false`.
* __showIdColumn__ | `boolean`: controls whether to show an ID column. Default: `true`.
* __style__ | `object`: An object allowing for custom css styling. Defaults to an empty object. Default: `{}`.
