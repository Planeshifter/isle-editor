(window.webpackJsonp=window.webpackJsonp||[]).push([[106],{197:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return r})),n.d(t,"metadata",(function(){return o})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return p}));var a=n(3),l=n(7),i=(n(0),n(406)),r={id:"plotly",title:"Plotly",sidebar_label:"Plotly"},o={unversionedId:"plotly",id:"plotly",isDocsHomePage:!1,title:"Plotly",description:"Plotly visualization.",source:"@site/docs/plotly.md",slug:"/plotly",permalink:"/docs/plotly",editUrl:"https://github.com/isle-project/isle-editor/edit/master/docusaurus/website/docs/plotly.md",version:"current",lastUpdatedBy:"Planeshifter",lastUpdatedAt:1612731787,sidebar_label:"Plotly",sidebar:"docs",previous:{title:"Typewriter",permalink:"/docs/typewriter"},next:{title:"Bar Chart",permalink:"/docs/plots/barchart"}},c=[{value:"Options",id:"options",children:[]},{value:"Examples",id:"examples",children:[]}],b={toc:c};function p(e){var t=e.components,n=Object(l.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Plotly visualization."),Object(i.b)("h2",{id:"options"},"Options"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"data")," | ",Object(i.b)("inlineCode",{parentName:"li"},"array (required)"),": data array. Default: ",Object(i.b)("inlineCode",{parentName:"li"},"none"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"draggable")," | ",Object(i.b)("inlineCode",{parentName:"li"},"boolean"),": controls whether the plot should be draggable. Default: ",Object(i.b)("inlineCode",{parentName:"li"},"false"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"editable")," | ",Object(i.b)("inlineCode",{parentName:"li"},"boolean"),": controls whether labels of the created plot are editable. Default: ",Object(i.b)("inlineCode",{parentName:"li"},"false"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"id")," | ",Object(i.b)("inlineCode",{parentName:"li"},"string"),": component identifier. Default: ",Object(i.b)("inlineCode",{parentName:"li"},"none"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"layout")," | ",Object(i.b)("inlineCode",{parentName:"li"},"object"),": Plotly layout object. Default: ",Object(i.b)("inlineCode",{parentName:"li"},"{}"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"config")," | ",Object(i.b)("inlineCode",{parentName:"li"},"object"),": undefined. Default: ",Object(i.b)("inlineCode",{parentName:"li"},"{}"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"legendButtons")," | ",Object(i.b)("inlineCode",{parentName:"li"},"boolean"),": controls whether to display buttons for changing the legend. Default: ",Object(i.b)("inlineCode",{parentName:"li"},"true"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"meta")," | ",Object(i.b)("inlineCode",{parentName:"li"},"object"),": plot meta-information. Default: ",Object(i.b)("inlineCode",{parentName:"li"},"none"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"revision")," | ",Object(i.b)("inlineCode",{parentName:"li"},"number"),": when provided, causes the plot to update when the revision value is incremented. Default: ",Object(i.b)("inlineCode",{parentName:"li"},"none"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"style")," | ",Object(i.b)("inlineCode",{parentName:"li"},"object"),": CSS inline styles. Default: ",Object(i.b)("inlineCode",{parentName:"li"},"{}"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"onAfterPlot")," | ",Object(i.b)("inlineCode",{parentName:"li"},"function"),": callback function invoked each time a chart is plotted. Default: ",Object(i.b)("inlineCode",{parentName:"li"},"onAfterPlot() {}"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"onClick")," | ",Object(i.b)("inlineCode",{parentName:"li"},"function"),": callback function invoked when any element is clicked. Default: ",Object(i.b)("inlineCode",{parentName:"li"},"onClick() {}"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"onInitialized")," | ",Object(i.b)("inlineCode",{parentName:"li"},"function"),": callback invoked once plot is initialized; called with figure (object with three keys corresponding to input props: ",Object(i.b)("inlineCode",{parentName:"li"},"data"),", ",Object(i.b)("inlineCode",{parentName:"li"},"layout"),", and ",Object(i.b)("inlineCode",{parentName:"li"},"frames"),") and the DOM node ",Object(i.b)("inlineCode",{parentName:"li"},"graphDiv"),". Default: ",Object(i.b)("inlineCode",{parentName:"li"},"onInitialized() {}"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"onLegendClick")," | ",Object(i.b)("inlineCode",{parentName:"li"},"function"),": callback function invoked when legend item is clicked. Default: ",Object(i.b)("inlineCode",{parentName:"li"},"onLegendClick() {}"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"onLegendDoubleClick")," | ",Object(i.b)("inlineCode",{parentName:"li"},"function"),": callback function invoked when legend item is double-clicked. Default: ",Object(i.b)("inlineCode",{parentName:"li"},"onLegendDoubleClick() {}"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"onRelayout")," | ",Object(i.b)("inlineCode",{parentName:"li"},"function"),": callback function invoked when relayout is triggered. Default: ",Object(i.b)("inlineCode",{parentName:"li"},"onRelayout() {}"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"onSelected")," | ",Object(i.b)("inlineCode",{parentName:"li"},"function"),": callback function invoked when elements are selected. Default: ",Object(i.b)("inlineCode",{parentName:"li"},"onSelected() {}"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"onShare")," | ",Object(i.b)("inlineCode",{parentName:"li"},"function"),': callback function invoked when clicking on the "Share" button. Default: ',Object(i.b)("inlineCode",{parentName:"li"},"none"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"removeButtons")," | ",Object(i.b)("inlineCode",{parentName:"li"},"boolean"),": controls whether to remove all buttons (aside from fullscreen button if enabled). Default: ",Object(i.b)("inlineCode",{parentName:"li"},"false"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"toggleFullscreen")," | ",Object(i.b)("inlineCode",{parentName:"li"},"boolean"),": controls whether to allow displaying the plot in fullscreen mode. Default: ",Object(i.b)("inlineCode",{parentName:"li"},"true"),".")),Object(i.b)("h2",{id:"examples"},"Examples"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"<Plotly\n    data={[{\n        values: [ 24, 7, 0.5 ],\n        labels: [ 'English', 'Spanish', 'Other' ],\n        type: 'pie'\n            }]}\n    layout={{ width: 300 }}\n/>\n")))}p.isMDXComponent=!0},406:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return s}));var a=n(0),l=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var b=l.a.createContext({}),p=function(e){var t=l.a.useContext(b),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return l.a.createElement(b.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return l.a.createElement(l.a.Fragment,{},t)}},m=l.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,r=e.parentName,b=c(e,["components","mdxType","originalType","parentName"]),u=p(n),m=a,s=u["".concat(r,".").concat(m)]||u[m]||d[m]||i;return n?l.a.createElement(s,o(o({ref:t},b),{},{components:n})):l.a.createElement(s,o({ref:t},b))}));function s(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,r=new Array(i);r[0]=m;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:a,r[1]=o;for(var b=2;b<i;b++)r[b]=n[b];return l.a.createElement.apply(null,r)}return l.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);