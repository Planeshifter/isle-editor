[{"alias":"AFINN_96","path":"@stdlib/datasets/afinn-96","type":"Function","description":"A list of English words rated for valence."},{"alias":"AFINN_111","path":"@stdlib/datasets/afinn-111","type":"Function","description":"A list of English words rated for valence."},{"alias":"allocUnsafe","path":"@stdlib/buffer/alloc-unsafe","type":"Function","description":"Allocate a buffer having a specified number of bytes."},{"alias":"anova1","path":"@stdlib/stats/anova1","type":"Function","description":"Perform a one-way analysis of variance."},{"alias":"ANSCOMBES_QUARTET","path":"@stdlib/datasets/anscombes-quartet","type":"Function","description":"Anscombe's quartet."},{"alias":"any","path":"@stdlib/utils/any","type":"Function","description":"Test whether at least one element in a collection is truthy."},{"alias":"anyBy","path":"@stdlib/utils/any-by","type":"Function","description":"Test whether at least one element in a collection passes a test implemented by a predicate function."},{"alias":"anyByAsync","path":"@stdlib/utils/async/any-by","type":"Function","description":"Test whether at least one element in a collection passes a test implemented by a predicate function."},{"alias":"anyByRight","path":"@stdlib/utils/any-by-right","type":"Function","description":"Test whether at least one element in a collection passes a test implemented by a predicate function, iterating from right to left."},{"alias":"anyByRightAsync","path":"@stdlib/utils/async/any-by-right","type":"Function","description":"Test whether at least one element in a collection passes a test implemented by a predicate function, iterating from right to left."},{"alias":"APERY","path":"@stdlib/constants/float64/apery","type":"number","description":"Apéry's constant."},{"alias":"append","path":"@stdlib/utils/append","type":"Function","description":"Add elements from one collection to the end of another collection."},{"alias":"ARCH","path":"@stdlib/os/arch","type":"string","description":"Operating system CPU architecture."},{"alias":"argumentFunction","path":"@stdlib/utils/argument-function","type":"Function","description":"Argument function."},{"alias":"ARGV","path":"@stdlib/process/argv","type":"Array","description":"Array containing command-line arguments passed when launching the calling process."},{"alias":"array","path":"@stdlib/ndarray/array","type":"Function","description":"Multidimensional arrays."},{"alias":"array2buffer","path":"@stdlib/buffer/from-array","type":"Function","description":"Allocate a buffer using an octet array."},{"alias":"array2iterator","path":"@stdlib/array/to-iterator","type":"Function","description":"Create an iterator from an array-like object."},{"alias":"array2iteratorRight","path":"@stdlib/array/to-iterator-right","type":"Function","description":"Create an iterator from an array-like object, iterating from right to left."},{"alias":"ArrayBuffer","path":"@stdlib/array/buffer","type":"Function","description":"ArrayBuffer."},{"alias":"arraybuffer2buffer","path":"@stdlib/buffer/from-arraybuffer","type":"Function","description":"Allocate a buffer from an ArrayBuffer."},{"alias":"arrayCtors","path":"@stdlib/array/ctors","type":"Function","description":"Array constructors."},{"alias":"arrayDataType","path":"@stdlib/array/dtype","type":"Function","description":"Return the data type of an array."},{"alias":"arrayDataTypes","path":"@stdlib/array/dtypes","type":"Function","description":"List of array data types."},{"alias":"arrayMinDataType","path":"@stdlib/array/min-dtype","type":"Function","description":"Determine the minimum array data type of the closest kind necessary for storing a provided scalar value."},{"alias":"arrayNextDataType","path":"@stdlib/array/next-dtype","type":"Function","description":"Return the next larger array data type of the same kind."},{"alias":"arrayPromotionRules","path":"@stdlib/array/promotion-rules","type":"Function","description":"Return the array data type with the smallest size and closest kind to which array data types can be safely cast."},{"alias":"arraySafeCasts","path":"@stdlib/array/safe-casts","type":"Function","description":"Return a list of array data types to which a provided array data type can be safely cast."},{"alias":"arraySameKindCasts","path":"@stdlib/array/same-kind-casts","type":"Function","description":"Return a list of array data types to which a provided array data type can be safely cast or cast within the same kind."},{"alias":"arrayShape","path":"@stdlib/array/shape","type":"Function","description":"Determine (nested) array dimensions."},{"alias":"arrayStream","path":"@stdlib/streams/node/from-array","type":"Function","description":"Create a readable stream from an array-like object."},{"alias":"arrayview2iterator","path":"@stdlib/array/to-view-iterator","type":"Function","description":"Create an iterator from an array-like object view."},{"alias":"arrayview2iteratorRight","path":"@stdlib/array/to-view-iterator-right","type":"Function","description":"Create an iterator from an array-like object view, iterating from right to left."},{"alias":"AsyncIteratorSymbol","path":"@stdlib/symbol/async-iterator","type":"symbol","description":"Async iterator symbol."},{"alias":"bartlettTest","path":"@stdlib/stats/bartlett-test","type":"Function","description":"Bartlett’s test for equal variances."},{"alias":"abs","path":"@stdlib/math/base/special/abs","type":"Function","description":"Compute an absolute value."},{"alias":"abs2","path":"@stdlib/math/base/special/abs2","type":"Function","description":"Compute the squared absolute value."},{"alias":"absdiff","path":"@stdlib/math/base/utils/absolute-difference","type":"Function","description":"Compute the absolute difference of two real numbers."},{"alias":"absInt32","path":"@stdlib/math/base/special/int32-abs","type":"Function","description":"Compute an absolute value of a signed 32-bit integer."},{"alias":"acos","path":"@stdlib/math/base/special/acos","type":"Function","description":"Compute the arccosine of a number."},{"alias":"acosh","path":"@stdlib/math/base/special/acosh","type":"Function","description":"Compute the hyperbolic arccosine of a number."},{"alias":"acoth","path":"@stdlib/math/base/special/acoth","type":"Function","description":"Compute the inverse hyperbolic cotangent."},{"alias":"acovercos","path":"@stdlib/math/base/special/acovercos","type":"Function","description":"Compute the inverse coversed cosine."},{"alias":"acoversin","path":"@stdlib/math/base/special/acoversin","type":"Function","description":"Compute the inverse coversed sine."},{"alias":"ahavercos","path":"@stdlib/math/base/special/ahavercos","type":"Function","description":"Compute the inverse half-value versed cosine."},{"alias":"ahaversin","path":"@stdlib/math/base/special/ahaversin","type":"Function","description":"Compute the inverse half-value versed sine."},{"alias":"asin","path":"@stdlib/math/base/special/asin","type":"Function","description":"Compute the arcsine of a number."},{"alias":"asinh","path":"@stdlib/math/base/special/asinh","type":"Function","description":"Compute the hyperbolic arcsine of a number."},{"alias":"atan","path":"@stdlib/math/base/special/atan","type":"Function","description":"Compute the arctangent of a number."},{"alias":"atan2","path":"@stdlib/math/base/special/atan2","type":"Function","description":"Evaluate the arctangent of the quotient of two numbers."},{"alias":"atanh","path":"@stdlib/math/base/special/atanh","type":"Function","description":"Compute the hyperbolic arctangent of a number."},{"alias":"avercos","path":"@stdlib/math/base/special/avercos","type":"Function","description":"Compute the inverse versed cosine."},{"alias":"aversin","path":"@stdlib/math/base/special/aversin","type":"Function","description":"Compute the inverse versed sine."},{"alias":"bernoulli","path":"@stdlib/math/base/special/bernoulli","type":"Function","description":"Compute the nth Bernoulli number."},{"alias":"besselj0","path":"@stdlib/math/base/special/besselj0","type":"Function","description":"Compute the Bessel function of the first kind of order zero."},{"alias":"besselj1","path":"@stdlib/math/base/special/besselj1","type":"Function","description":"Compute the Bessel function of the first kind of order one."},{"alias":"bessely0","path":"@stdlib/math/base/special/bessely0","type":"Function","description":"Compute the Bessel function of the second kind of order zero."},{"alias":"bessely1","path":"@stdlib/math/base/special/bessely1","type":"Function","description":"Compute the Bessel function of the second kind of order zero."},{"alias":"beta","path":"@stdlib/math/base/special/beta","type":"Function","description":"Beta function."},{"alias":"betainc","path":"@stdlib/math/base/special/betainc","type":"Function","description":"Incomplete beta function."},{"alias":"betaincinv","path":"@stdlib/math/base/special/betaincinv","type":"Function","description":"Inverse incomplete beta function."},{"alias":"betaln","path":"@stdlib/math/base/special/betaln","type":"Function","description":"Natural logarithm of the beta function."},{"alias":"binet","path":"@stdlib/math/base/special/binet","type":"Function","description":"Evaluate Binet's formula extended to real numbers."},{"alias":"binomcoef","path":"@stdlib/math/base/special/binomcoef","type":"Function","description":"Compute the binomial coefficient."},{"alias":"binomcoefln","path":"@stdlib/math/base/special/binomcoefln","type":"Function","description":"Compute the natural logarithm of the binomial coefficient."},{"alias":"boxcox","path":"@stdlib/math/base/special/boxcox","type":"Function","description":"Compute a one-parameter Box-Cox transformation."},{"alias":"boxcox1p","path":"@stdlib/math/base/special/boxcox1p","type":"Function","description":"Compute a one-parameter Box-Cox transformation of 1+x."},{"alias":"boxcox1pinv","path":"@stdlib/math/base/special/boxcox1pinv","type":"Function","description":"Compute the inverse of a one-parameter Box-Cox transformation for 1+x."},{"alias":"boxcoxinv","path":"@stdlib/math/base/special/boxcoxinv","type":"Function","description":"Compute the inverse of a one-parameter Box-Cox transformation."},{"alias":"cabs","path":"@stdlib/math/base/complex/abs","type":"Function","description":"Compute an absolute value of a complex number."},{"alias":"cabs2","path":"@stdlib/math/base/complex/abs2","type":"Function","description":"Compute the squared absolute value of a complex number."},{"alias":"cadd","path":"@stdlib/math/base/complex/add","type":"Function","description":"Add two complex numbers."},{"alias":"cbrt","path":"@stdlib/math/base/special/cbrt","type":"Function","description":"Compute the cube root of a number."},{"alias":"cceil","path":"@stdlib/math/base/complex/ceil","type":"Function","description":"Round a complex number toward positive infinity."},{"alias":"cceiln","path":"@stdlib/math/base/complex/ceiln","type":"Function","description":"Round a complex number to the nearest multiple of 10^n toward positive infinity."},{"alias":"ccis","path":"@stdlib/math/base/complex/cis","type":"Function","description":"Compute the cis function of a complex number."},{"alias":"cdiv","path":"@stdlib/math/base/complex/divide","type":"Function","description":"Divide two complex numbers."},{"alias":"ceil","path":"@stdlib/math/base/special/ceil","type":"Function","description":"Round a numeric value toward positive infinity."},{"alias":"ceil2","path":"@stdlib/math/base/special/ceil2","type":"Function","description":"Round a numeric value to the nearest power of two toward positive infinity."},{"alias":"ceil10","path":"@stdlib/math/base/special/ceil10","type":"Function","description":"Round a numeric value to the nearest power of 10 toward positive infinity."},{"alias":"ceilb","path":"@stdlib/math/base/special/ceilb","type":"Function","description":"Round a numeric value to the nearest multiple of b^n toward positive infinity."},{"alias":"ceiln","path":"@stdlib/math/base/special/ceiln","type":"Function","description":"Round a numeric value to the nearest multiple of 10^n toward positive infinity."},{"alias":"ceilsd","path":"@stdlib/math/base/special/ceilsd","type":"Function","description":"Round a numeric value to the nearest number toward positive infinity with N significant figures."},{"alias":"cexp","path":"@stdlib/math/base/complex/exp","type":"Function","description":"Compute the exponential function of a complex number."},{"alias":"cflipsign","path":"@stdlib/math/base/complex/flipsign","type":"Function","description":"Return a complex number with the same magnitude as `z` and the sign of `y*z`."},{"alias":"cfloor","path":"@stdlib/math/base/complex/floor","type":"Function","description":"Round a complex number toward negative infinity."},{"alias":"cfloorn","path":"@stdlib/math/base/complex/floorn","type":"Function","description":"Round a complex number to the nearest multiple of 10^n toward negative infinity."},{"alias":"cinv","path":"@stdlib/math/base/complex/inv","type":"Function","description":"Compute the inverse of a complex number."},{"alias":"clamp","path":"@stdlib/math/base/special/clamp","type":"Function","description":"Restrict a value to a specified range."},{"alias":"cmul","path":"@stdlib/math/base/complex/multiply","type":"Function","description":"Multiply two complex numbers."},{"alias":"cneg","path":"@stdlib/math/base/complex/negate","type":"Function","description":"Negate a complex number."},{"alias":"continuedFraction","path":"@stdlib/math/base/tools/continued-fraction","type":"Function","description":"Continued fraction approximation."},{"alias":"copysign","path":"@stdlib/math/base/special/copysign","type":"Function","description":"Return a double-precision floating-point number with the magnitude of x and the sign of y."},{"alias":"cos","path":"@stdlib/math/base/special/cos","type":"Function","description":"Compute the cosine of a number."},{"alias":"cosh","path":"@stdlib/math/base/special/cosh","type":"Function","description":"Compute the hyperbolic cosine of a number."},{"alias":"cosm1","path":"@stdlib/math/base/special/cosm1","type":"Function","description":"Compute the cosine of a number minus one."},{"alias":"cospi","path":"@stdlib/math/base/special/cospi","type":"Function","description":"Compute cos(πx)."},{"alias":"covercos","path":"@stdlib/math/base/special/covercos","type":"Function","description":"Compute the coversed cosine."},{"alias":"coversin","path":"@stdlib/math/base/special/coversin","type":"Function","description":"Compute the coversed sine."},{"alias":"cphase","path":"@stdlib/math/base/complex/phase","type":"Function","description":"Compute the argument of a complex number in radians."},{"alias":"cpolar","path":"@stdlib/math/base/complex/polar","type":"Function","description":"Compute the absolute value and the phase of a complex number."},{"alias":"cround","path":"@stdlib/math/base/complex/round","type":"Function","description":"Round a complex number to the nearest integer."},{"alias":"croundn","path":"@stdlib/math/base/complex/roundn","type":"Function","description":"Round a complex number to the nearest multiple of 10^n."},{"alias":"csignum","path":"@stdlib/math/base/complex/signum","type":"Function","description":"Evaluate the signum function of a complex number."},{"alias":"csub","path":"@stdlib/math/base/complex/subtract","type":"Function","description":"Subtract two complex numbers."},{"alias":"dasum","path":"@stdlib/blas/base/dasum","type":"Function","description":"Compute the sum of absolute values (L1 norm)."},{"alias":"daxpy","path":"@stdlib/blas/base/daxpy","type":"Function","description":"Multiply x by a constant and add the result to y."},{"alias":"dcopy","path":"@stdlib/blas/base/dcopy","type":"Function","description":"Copy values from x into y."},{"alias":"deg2rad","path":"@stdlib/math/base/special/deg2rad","type":"Function","description":"Convert an angle from degrees to radians."},{"alias":"digamma","path":"@stdlib/math/base/special/digamma","type":"Function","description":"Digamma function."},{"alias":"diracDelta","path":"@stdlib/math/base/special/dirac-delta","type":"Function","description":"Evaluate the Dirac delta function."},{"alias":"Arcsine","path":"@stdlib/stats/base/dists/arcsine/ctor","type":"Function","description":"Arcsine distribution constructor."},{"alias":"arcsineCdf","path":"@stdlib/stats/base/dists/arcsine/cdf","type":"Function","description":"Arcsine distribution cumulative distribution function (CDF)."},{"alias":"arcsineEntropy","path":"@stdlib/stats/base/dists/arcsine/entropy","type":"Function","description":"Arcsine distribution differential entropy."},{"alias":"arcsineKurtosis","path":"@stdlib/stats/base/dists/arcsine/kurtosis","type":"Function","description":"Arcsine distribution excess kurtosis."},{"alias":"arcsineLogcdf","path":"@stdlib/stats/base/dists/arcsine/logcdf","type":"Function","description":"Arcsine distribution logarithm of cumulative distribution function (CDF)."},{"alias":"arcsineLogpdf","path":"@stdlib/stats/base/dists/arcsine/logpdf","type":"Function","description":"Arcsine distribution logarithm of probability density function (PDF)."},{"alias":"arcsineMean","path":"@stdlib/stats/base/dists/arcsine/mean","type":"Function","description":"Arcsine distribution expected value."},{"alias":"arcsineMedian","path":"@stdlib/stats/base/dists/arcsine/median","type":"Function","description":"Arcsine distribution median."},{"alias":"arcsineMode","path":"@stdlib/stats/base/dists/arcsine/mode","type":"Function","description":"Arcsine distribution mode."},{"alias":"arcsinePdf","path":"@stdlib/stats/base/dists/arcsine/pdf","type":"Function","description":"Arcsine distribution probability density function (PDF)."},{"alias":"arcsineQuantile","path":"@stdlib/stats/base/dists/arcsine/quantile","type":"Function","description":"Arcsine distribution quantile function."},{"alias":"arcsineSkewness","path":"@stdlib/stats/base/dists/arcsine/skewness","type":"Function","description":"Arcsine distribution skewness."},{"alias":"arcsineStdev","path":"@stdlib/stats/base/dists/arcsine/stdev","type":"Function","description":"Arcsine distribution standard deviation."},{"alias":"arcsineVariance","path":"@stdlib/stats/base/dists/arcsine/variance","type":"Function","description":"Arcsine distribution variance."},{"alias":"Bernoulli","path":"@stdlib/stats/base/dists/bernoulli/ctor","type":"Function","description":"Bernoulli distribution constructor."},{"alias":"bernoulliCdf","path":"@stdlib/stats/base/dists/bernoulli/cdf","type":"Function","description":"Bernoulli distribution cumulative distribution function (CDF)."},{"alias":"bernoulliEntropy","path":"@stdlib/stats/base/dists/bernoulli/entropy","type":"Function","description":"Bernoulli distribution entropy."},{"alias":"bernoulliKurtosis","path":"@stdlib/stats/base/dists/bernoulli/kurtosis","type":"Function","description":"Bernoulli distribution excess kurtosis."},{"alias":"bernoulliMean","path":"@stdlib/stats/base/dists/bernoulli/mean","type":"Function","description":"Bernoulli distribution expected value."},{"alias":"bernoulliMedian","path":"@stdlib/stats/base/dists/bernoulli/median","type":"Function","description":"Bernoulli distribution median."},{"alias":"bernoulliMgf","path":"@stdlib/stats/base/dists/bernoulli/mgf","type":"Function","description":"Bernoulli distribution moment-generating function (MGF)."},{"alias":"bernoulliMode","path":"@stdlib/stats/base/dists/bernoulli/mode","type":"Function","description":"Bernoulli distribution mode."},{"alias":"bernoulliPmf","path":"@stdlib/stats/base/dists/bernoulli/pmf","type":"Function","description":"Bernoulli distribution probability mass function (PMF)."},{"alias":"bernoulliQuantile","path":"@stdlib/stats/base/dists/bernoulli/quantile","type":"Function","description":"Bernoulli distribution quantile function."},{"alias":"bernoulliSkewness","path":"@stdlib/stats/base/dists/bernoulli/skewness","type":"Function","description":"Bernoulli distribution skewness."},{"alias":"bernoulliStdev","path":"@stdlib/stats/base/dists/bernoulli/stdev","type":"Function","description":"Bernoulli distribution standard deviation."},{"alias":"bernoulliVariance","path":"@stdlib/stats/base/dists/bernoulli/variance","type":"Function","description":"Bernoulli distribution variance."},{"alias":"Beta","path":"@stdlib/stats/base/dists/beta/ctor","type":"Function","description":"Beta distribution constructor."},{"alias":"betaCdf","path":"@stdlib/stats/base/dists/beta/cdf","type":"Function","description":"Beta distribution cumulative distribution function (CDF)."},{"alias":"betaEntropy","path":"@stdlib/stats/base/dists/beta/entropy","type":"Function","description":"Beta distribution differential entropy."},{"alias":"betaKurtosis","path":"@stdlib/stats/base/dists/beta/kurtosis","type":"Function","description":"Beta distribution excess kurtosis."},{"alias":"betaLogcdf","path":"@stdlib/stats/base/dists/beta/logcdf","type":"Function","description":"Beta distribution logarithm of cumulative distribution function (CDF)."},{"alias":"betaLogpdf","path":"@stdlib/stats/base/dists/beta/logpdf","type":"Function","description":"Beta distribution logarithm of probability density function (PDF)."},{"alias":"betaMean","path":"@stdlib/stats/base/dists/beta/mean","type":"Function","description":"Beta distribution expected value."},{"alias":"betaMedian","path":"@stdlib/stats/base/dists/beta/median","type":"Function","description":"Beta distribution median."},{"alias":"betaMgf","path":"@stdlib/stats/base/dists/beta/mgf","type":"Function","description":"Beta distribution moment-generating function (MGF)."},{"alias":"betaMode","path":"@stdlib/stats/base/dists/beta/mode","type":"Function","description":"Beta distribution mode."},{"alias":"betaPdf","path":"@stdlib/stats/base/dists/beta/pdf","type":"Function","description":"Beta distribution probability density function (PDF)."},{"alias":"betaQuantile","path":"@stdlib/stats/base/dists/beta/quantile","type":"Function","description":"Beta distribution quantile function."},{"alias":"betaSkewness","path":"@stdlib/stats/base/dists/beta/skewness","type":"Function","description":"Beta distribution skewness."},{"alias":"betaStdev","path":"@stdlib/stats/base/dists/beta/stdev","type":"Function","description":"Beta distribution standard deviation."},{"alias":"betaVariance","path":"@stdlib/stats/base/dists/beta/variance","type":"Function","description":"Beta distribution variance."},{"alias":"BetaPrime","path":"@stdlib/stats/base/dists/betaprime/ctor","type":"Function","description":"Beta prime distribution constructor."},{"alias":"betaprimeCdf","path":"@stdlib/stats/base/dists/betaprime/cdf","type":"Function","description":"Beta prime distribution cumulative distribution function (CDF)."},{"alias":"betaprimeKurtosis","path":"@stdlib/stats/base/dists/betaprime/kurtosis","type":"Function","description":"Beta prime distribution excess kurtosis."},{"alias":"betaprimeLogcdf","path":"@stdlib/stats/base/dists/betaprime/logcdf","type":"Function","description":"Evaluate the natural logarithm of the cumulative distribution function (CDF) for a beta prime distribution."},{"alias":"betaprimeLogpdf","path":"@stdlib/stats/base/dists/betaprime/logpdf","type":"Function","description":"Beta prime distribution logarithm of probability density function (PDF)."},{"alias":"betaprimeMean","path":"@stdlib/stats/base/dists/betaprime/mean","type":"Function","description":"Beta prime distribution expected value."},{"alias":"betaprimeMode","path":"@stdlib/stats/base/dists/betaprime/mode","type":"Function","description":"Beta prime distribution mode."},{"alias":"betaprimePdf","path":"@stdlib/stats/base/dists/betaprime/pdf","type":"Function","description":"Beta prime distribution probability density function (PDF)."},{"alias":"betaprimeQuantile","path":"@stdlib/stats/base/dists/betaprime/quantile","type":"Function","description":"Beta prime distribution quantile function."},{"alias":"betaprimeSkewness","path":"@stdlib/stats/base/dists/betaprime/skewness","type":"Function","description":"Beta prime distribution skewness."},{"alias":"betaprimeStdev","path":"@stdlib/stats/base/dists/betaprime/stdev","type":"Function","description":"Beta prime distribution standard deviation."},{"alias":"betaprimeVariance","path":"@stdlib/stats/base/dists/betaprime/variance","type":"Function","description":"Beta prime distribution variance."},{"alias":"Binomial","path":"@stdlib/stats/base/dists/binomial/ctor","type":"Function","description":"Binomial distribution constructor."},{"alias":"binomialCdf","path":"@stdlib/stats/base/dists/binomial/cdf","type":"Function","description":"Binomial distribution cumulative distribution function (CDF)."},{"alias":"binomialEntropy","path":"@stdlib/stats/base/dists/binomial/entropy","type":"Function","description":"Binomial distribution entropy."},{"alias":"binomialKurtosis","path":"@stdlib/stats/base/dists/binomial/kurtosis","type":"Function","description":"Binomial distribution excess kurtosis."},{"alias":"binomialLogpmf","path":"@stdlib/stats/base/dists/binomial/logpmf","type":"Function","description":"Natural logarithm of the probability mass function (PMF) for a binomial distribution."},{"alias":"binomialMean","path":"@stdlib/stats/base/dists/binomial/mean","type":"Function","description":"Binomial distribution expected value."},{"alias":"binomialMedian","path":"@stdlib/stats/base/dists/binomial/median","type":"Function","description":"Binomial distribution median."},{"alias":"binomialMgf","path":"@stdlib/stats/base/dists/binomial/mgf","type":"Function","description":"Binomial distribution moment-generating function (MGF)."},{"alias":"binomialMode","path":"@stdlib/stats/base/dists/binomial/mode","type":"Function","description":"Binomial distribution mode."},{"alias":"binomialPmf","path":"@stdlib/stats/base/dists/binomial/pmf","type":"Function","description":"Binomial distribution probability mass function (PMF)."},{"alias":"binomialQuantile","path":"@stdlib/stats/base/dists/binomial/quantile","type":"Function","description":"Binomial distribution quantile function."},{"alias":"binomialSkewness","path":"@stdlib/stats/base/dists/binomial/skewness","type":"Function","description":"Binomial distribution skewness."},{"alias":"binomialStdev","path":"@stdlib/stats/base/dists/binomial/stdev","type":"Function","description":"Binomial distribution standard deviation."},{"alias":"binomialVariance","path":"@stdlib/stats/base/dists/binomial/variance","type":"Function","description":"Binomial distribution variance."},{"alias":"Cauchy","path":"@stdlib/stats/base/dists/cauchy/ctor","type":"Function","description":"Cauchy distribution constructor."},{"alias":"cauchyCdf","path":"@stdlib/stats/base/dists/cauchy/cdf","type":"Function","description":"Cauchy distribution cumulative distribution function (CDF)."},{"alias":"cauchyEntropy","path":"@stdlib/stats/base/dists/cauchy/entropy","type":"Function","description":"Cauchy distribution differential entropy."},{"alias":"cauchyLogcdf","path":"@stdlib/stats/base/dists/cauchy/logcdf","type":"Function","description":"Cauchy distribution natural logarithm of cumulative distribution function (CDF)."},{"alias":"cauchyLogpdf","path":"@stdlib/stats/base/dists/cauchy/logpdf","type":"Function","description":"Cauchy distribution logarithm of probability density function (logPDF)."},{"alias":"cauchyMedian","path":"@stdlib/stats/base/dists/cauchy/median","type":"Function","description":"Cauchy distribution median."},{"alias":"cauchyMode","path":"@stdlib/stats/base/dists/cauchy/mode","type":"Function","description":"Cauchy distribution mode."},{"alias":"cauchyPdf","path":"@stdlib/stats/base/dists/cauchy/pdf","type":"Function","description":"Cauchy distribution probability density function (PDF)."},{"alias":"cauchyQuantile","path":"@stdlib/stats/base/dists/cauchy/quantile","type":"Function","description":"Cauchy distribution quantile function."},{"alias":"chiCdf","path":"@stdlib/stats/base/dists/chi/cdf","type":"Function","description":"Chi distribution cumulative distribution function (CDF)."},{"alias":"Chi","path":"@stdlib/stats/base/dists/chi/ctor","type":"Function","description":"Chi distribution constructor."},{"alias":"chiEntropy","path":"@stdlib/stats/base/dists/chi/entropy","type":"Function","description":"Chi distribution entropy."},{"alias":"chiKurtosis","path":"@stdlib/stats/base/dists/chi/kurtosis","type":"Function","description":"Chi distribution excess kurtosis."},{"alias":"chiLogpdf","path":"@stdlib/stats/base/dists/chi/logpdf","type":"Function","description":"Natural logarithm of the probability density function (PDF) for a chi distribution."},{"alias":"chiMean","path":"@stdlib/stats/base/dists/chi/mean","type":"Function","description":"Chi distribution expected value."},{"alias":"chiMode","path":"@stdlib/stats/base/dists/chi/mode","type":"Function","description":"Chi distribution mode."},{"alias":"chiPdf","path":"@stdlib/stats/base/dists/chi/pdf","type":"Function","description":"Chi distribution probability density function (PDF)."},{"alias":"chiQuantile","path":"@stdlib/stats/base/dists/chi/quantile","type":"Function","description":"Chi distribution quantile function."},{"alias":"chiSkewness","path":"@stdlib/stats/base/dists/chi/skewness","type":"Function","description":"Chi distribution skewness."},{"alias":"chiStdev","path":"@stdlib/stats/base/dists/chi/stdev","type":"Function","description":"Chi distribution standard deviation."},{"alias":"chiVariance","path":"@stdlib/stats/base/dists/chi/variance","type":"Function","description":"Chi distribution variance."},{"alias":"chisquareCdf","path":"@stdlib/stats/base/dists/chisquare/cdf","type":"Function","description":"Chi-squared distribution cumulative distribution function (CDF)."},{"alias":"ChiSquare","path":"@stdlib/stats/base/dists/chisquare/ctor","type":"Function","description":"Chi-squared distribution constructor."},{"alias":"chisquareEntropy","path":"@stdlib/stats/base/dists/chisquare/entropy","type":"Function","description":"Chi-squared distribution entropy."},{"alias":"chisquareKurtosis","path":"@stdlib/stats/base/dists/chisquare/kurtosis","type":"Function","description":"Chi-squared distribution kurtosis."},{"alias":"chisquareLogpdf","path":"@stdlib/stats/base/dists/chisquare/logpdf","type":"Function","description":"Natural logarithm of the probability density function (PDF) for a chi-squared distribution."},{"alias":"chisquareMean","path":"@stdlib/stats/base/dists/chisquare/mean","type":"Function","description":"Chi-squared distribution expected value."},{"alias":"chisquareMgf","path":"@stdlib/stats/base/dists/chisquare/mgf","type":"Function","description":"Chi-squared distribution moment-generating function (MGF)."},{"alias":"chisquareMode","path":"@stdlib/stats/base/dists/chisquare/mode","type":"Function","description":"Chi-squared distribution mode."},{"alias":"chisquarePdf","path":"@stdlib/stats/base/dists/chisquare/pdf","type":"Function","description":"Chi-squared distribution probability density function (PDF)."},{"alias":"chisquareQuantile","path":"@stdlib/stats/base/dists/chisquare/quantile","type":"Function","description":"Chi-squared distribution quantile function."},{"alias":"chisquareSkewness","path":"@stdlib/stats/base/dists/chisquare/skewness","type":"Function","description":"Chi-squared distribution skewness."},{"alias":"chisquareStdev","path":"@stdlib/stats/base/dists/chisquare/stdev","type":"Function","description":"Chi-squared distribution standard deviation."},{"alias":"chisquareVariance","path":"@stdlib/stats/base/dists/chisquare/variance","type":"Function","description":"Chi-squared distribution variance."},{"alias":"cosineCdf","path":"@stdlib/stats/base/dists/cosine/cdf","type":"Function","description":"Raised cosine distribution cumulative distribution function (CDF)."},{"alias":"Cosine","path":"@stdlib/stats/base/dists/cosine/ctor","type":"Function","description":"Raised cosine distribution constructor."},{"alias":"cosineKurtosis","path":"@stdlib/stats/base/dists/cosine/kurtosis","type":"Function","description":"Raised cosine distribution kurtosis."},{"alias":"cosineLogcdf","path":"@stdlib/stats/base/dists/cosine/logcdf","type":"Function","description":"Natural logarithm of cumulative distribution function (CDF) for a raised cosine distribution."},{"alias":"cosineLogpdf","path":"@stdlib/stats/base/dists/cosine/logpdf","type":"Function","description":"Raised cosine distribution logarithm of probability density function (PDF)."},{"alias":"cosineMean","path":"@stdlib/stats/base/dists/cosine/mean","type":"Function","description":"Raised cosine distribution expected value."},{"alias":"cosineMedian","path":"@stdlib/stats/base/dists/cosine/median","type":"Function","description":"Raised cosine distribution median."},{"alias":"cosineMgf","path":"@stdlib/stats/base/dists/cosine/mgf","type":"Function","description":"Raised cosine distribution moment-generating function (MGF)."},{"alias":"cosineMode","path":"@stdlib/stats/base/dists/cosine/mode","type":"Function","description":"Raised cosine distribution mode."},{"alias":"cosinePdf","path":"@stdlib/stats/base/dists/cosine/pdf","type":"Function","description":"Raised cosine distribution probability density function (PDF)."},{"alias":"cosineQuantile","path":"@stdlib/stats/base/dists/cosine/quantile","type":"Function","description":"Raised cosine distribution quantile function."},{"alias":"cosineSkewness","path":"@stdlib/stats/base/dists/cosine/skewness","type":"Function","description":"Raised cosine distribution skewness."},{"alias":"cosineStdev","path":"@stdlib/stats/base/dists/cosine/stdev","type":"Function","description":"Raised cosine distribution standard deviation."},{"alias":"cosineVariance","path":"@stdlib/stats/base/dists/cosine/variance","type":"Function","description":"Raised cosine distribution variance."},{"alias":"degenerateCdf","path":"@stdlib/stats/base/dists/degenerate/cdf","type":"Function","description":"Degenerate distribution cumulative distribution function (CDF)."},{"alias":"Degenerate","path":"@stdlib/stats/base/dists/degenerate/ctor","type":"Function","description":"Degenerate distribution constructor."},{"alias":"degenerateEntropy","path":"@stdlib/stats/base/dists/degenerate/entropy","type":"Function","description":"Degenerate distribution entropy."},{"alias":"degenerateLogcdf","path":"@stdlib/stats/base/dists/degenerate/logcdf","type":"Function","description":"Degenerate distribution logarithm of cumulative distribution function (logCDF)."},{"alias":"degenerateLogpdf","path":"@stdlib/stats/base/dists/degenerate/logpdf","type":"Function","description":"Degenerate distribution logarithm of probability density function (logPDF)."},{"alias":"degenerateLogpmf","path":"@stdlib/stats/base/dists/degenerate/logpmf","type":"Function","description":"Natural logarithm of the probability mass function (PMF) for a degenerate distribution."},{"alias":"degenerateMean","path":"@stdlib/stats/base/dists/degenerate/mean","type":"Function","description":"Degenerate distribution expected value."},{"alias":"degenerateMedian","path":"@stdlib/stats/base/dists/degenerate/median","type":"Function","description":"Degenerate distribution median."},{"alias":"degenerateMgf","path":"@stdlib/stats/base/dists/degenerate/mgf","type":"Function","description":"Degenerate distribution moment-generating function (MGF)."},{"alias":"degenerateMode","path":"@stdlib/stats/base/dists/degenerate/mode","type":"Function","description":"Degenerate distribution mode."},{"alias":"degeneratePdf","path":"@stdlib/stats/base/dists/degenerate/pdf","type":"Function","description":"Degenerate distribution probability density function (PDF)."},{"alias":"degeneratePmf","path":"@stdlib/stats/base/dists/degenerate/pmf","type":"Function","description":"Degenerate distribution probability mass function (PMF)."},{"alias":"degenerateQuantile","path":"@stdlib/stats/base/dists/degenerate/quantile","type":"Function","description":"Degenerate distribution quantile function."},{"alias":"degenerateStdev","path":"@stdlib/stats/base/dists/degenerate/stdev","type":"Function","description":"Degenerate distribution standard deviation."},{"alias":"degenerateVariance","path":"@stdlib/stats/base/dists/degenerate/variance","type":"Function","description":"Degenerate distribution variance."},{"alias":"discreteUniformCdf","path":"@stdlib/stats/base/dists/discrete-uniform/cdf","type":"Function","description":"Discrete uniform distribution cumulative distribution function (CDF)."},{"alias":"discreteUDiscreteUniform","path":"@stdlib/stats/base/dists/discrete-uniform/ctor","type":"Function","description":"Discrete uniform distribution constructor."},{"alias":"discreteUniformKurtosis","path":"@stdlib/stats/base/dists/discrete-uniform/kurtosis","type":"Function","description":"Discrete uniform distribution excess kurtosis."},{"alias":"discreteUniformLogcdf","path":"@stdlib/stats/base/dists/discrete-uniform/logcdf","type":"Function","description":"Natural logarithm of the cumulative distribution function (CDF)for a discrete uniform distribution."},{"alias":"discreteUniformLogpmf","path":"@stdlib/stats/base/dists/discrete-uniform/logpmf","type":"Function","description":"Natural logarithm of the probability mass function (PMF) for a discrete uniform distribution."},{"alias":"discreteUniformMean","path":"@stdlib/stats/base/dists/discrete-uniform/mean","type":"Function","description":"Discrete uniform distribution expected value."},{"alias":"discreteUniformMedian","path":"@stdlib/stats/base/dists/discrete-uniform/median","type":"Function","description":"Discrete uniform distribution median."},{"alias":"discreteUniformMgf","path":"@stdlib/stats/base/dists/discrete-uniform/mgf","type":"Function","description":"Discrete uniform distribution moment-generating function (MGF)."},{"alias":"discreteUniformPmf","path":"@stdlib/stats/base/dists/discrete-uniform/pmf","type":"Function","description":"Discrete uniform distribution probability mass function (PMF)."},{"alias":"discreteUniformQuantile","path":"@stdlib/stats/base/dists/discrete-uniform/quantile","type":"Function","description":"Discrete uniform distribution quantile function."},{"alias":"discreteUniformSkewness","path":"@stdlib/stats/base/dists/discrete-uniform/skewness","type":"Function","description":"Discrete uniform distribution skewness."},{"alias":"discreteUniformStdev","path":"@stdlib/stats/base/dists/discrete-uniform/stdev","type":"Function","description":"Discrete uniform distribution standard deviation."},{"alias":"discreteUniformVariance","path":"@stdlib/stats/base/dists/discrete-uniform/variance","type":"Function","description":"Discrete uniform distribution variance."},{"alias":"erlangCdf","path":"@stdlib/stats/base/dists/erlang/cdf","type":"Function","description":"Erlang distribution cumulative distribution function (CDF)."},{"alias":"erlangEntropy","path":"@stdlib/stats/base/dists/erlang/entropy","type":"Function","description":"Erlang distribution differential entropy."},{"alias":"Erlang","path":"@stdlib/stats/base/dists/erlang/ctor","type":"Function","description":"Erlang distribution constructor."},{"alias":"erlangKurtosis","path":"@stdlib/stats/base/dists/erlang/kurtosis","type":"Function","description":"Erlang distribution excess kurtosis."},{"alias":"erlangLogpdf","path":"@stdlib/stats/base/dists/erlang/logpdf","type":"Function","description":"Natural logarithm of the probability density function (PDF) for an Erlang distribution."},{"alias":"erlangMean","path":"@stdlib/stats/base/dists/erlang/mean","type":"Function","description":"Erlang distribution expected value."},{"alias":"erlangMgf","path":"@stdlib/stats/base/dists/erlang/mgf","type":"Function","description":"Erlang distribution moment-generating function (MGF)."},{"alias":"erlangMode","path":"@stdlib/stats/base/dists/erlang/mode","type":"Function","description":"Erlang distribution mode."},{"alias":"erlangPdf","path":"@stdlib/stats/base/dists/erlang/pdf","type":"Function","description":"Erlang distribution probability density function (PDF)."},{"alias":"erlangQuantile","path":"@stdlib/stats/base/dists/erlang/quantile","type":"Function","description":"Erlang distribution quantile function."},{"alias":"erlangSkewness","path":"@stdlib/stats/base/dists/erlang/skewness","type":"Function","description":"Erlang distribution skewness."},{"alias":"erlangStdev","path":"@stdlib/stats/base/dists/erlang/stdev","type":"Function","description":"Erlang distribution standard deviation."},{"alias":"erlangVariance","path":"@stdlib/stats/base/dists/erlang/variance","type":"Function","description":"Erlang distribution variance."},{"alias":"exponentialCdf","path":"@stdlib/stats/base/dists/exponential/cdf","type":"Function","description":"Exponential distribution cumulative distribution function (CDF)."},{"alias":"exponentialEntropy","path":"@stdlib/stats/base/dists/exponential/entropy","type":"Function","description":"Exponential distribution differential entropy."},{"alias":"Exponential","path":"@stdlib/stats/base/dists/exponential/ctor","type":"Function","description":"Exponential distribution constructor."},{"alias":"exponentialKurtosis","path":"@stdlib/stats/base/dists/exponential/kurtosis","type":"Function","description":"Exponential distribution excess kurtosis."},{"alias":"exponentialLogcdf","path":"@stdlib/stats/base/dists/exponential/logcdf","type":"Function","description":"Natural logarithm of the cumulative distribution function (CDF) for an exponential distribution."},{"alias":"exponentialLogpdf","path":"@stdlib/stats/base/dists/exponential/logpdf","type":"Function","description":"Natural logarithm of the probability density function (PDF) for an exponential distribution."},{"alias":"exponentialMean","path":"@stdlib/stats/base/dists/exponential/mean","type":"Function","description":"Exponential distribution expected value."},{"alias":"exponentialMedian","path":"@stdlib/stats/base/dists/exponential/median","type":"Function","description":"Exponential distribution median."},{"alias":"exponentialMgf","path":"@stdlib/stats/base/dists/exponential/mgf","type":"Function","description":"Exponential distribution moment-generating function (MGF)."},{"alias":"exponentialMode","path":"@stdlib/stats/base/dists/exponential/mode","type":"Function","description":"Exponential distribution mode."},{"alias":"exponentialPdf","path":"@stdlib/stats/base/dists/exponential/pdf","type":"Function","description":"Exponential distribution probability density function (PDF)."},{"alias":"exponentialQuantile","path":"@stdlib/stats/base/dists/exponential/quantile","type":"Function","description":"Exponential distribution quantile function."},{"alias":"exponentialSkewness","path":"@stdlib/stats/base/dists/exponential/skewness","type":"Function","description":"Exponential distribution skewness."},{"alias":"exponentialStdev","path":"@stdlib/stats/base/dists/exponential/stdev","type":"Function","description":"Exponential distribution standard deviation."},{"alias":"exponentialVariance","path":"@stdlib/stats/base/dists/exponential/variance","type":"Function","description":"Exponential distribution variance."},{"alias":"fCdf","path":"@stdlib/stats/base/dists/f/cdf","type":"Function","description":"F distribution cumulative distribution function (CDF)."},{"alias":"fEntropy","path":"@stdlib/stats/base/dists/f/entropy","type":"Function","description":"F distribution differential entropy."},{"alias":"F","path":"@stdlib/stats/base/dists/f/ctor","type":"Function","description":"F distribution constructor."},{"alias":"fKurtosis","path":"@stdlib/stats/base/dists/f/kurtosis","type":"Function","description":"F distribution excess kurtosis."},{"alias":"fMean","path":"@stdlib/stats/base/dists/f/mean","type":"Function","description":"F distribution expected value."},{"alias":"fMode","path":"@stdlib/stats/base/dists/f/mode","type":"Function","description":"F distribution mode."},{"alias":"fPdf","path":"@stdlib/stats/base/dists/f/pdf","type":"Function","description":"F distribution probability density function (PDF)."},{"alias":"fQuantile","path":"@stdlib/stats/base/dists/f/quantile","type":"Function","description":"F distribution quantile function."},{"alias":"fSkewness","path":"@stdlib/stats/base/dists/f/skewness","type":"Function","description":"F distribution skewness."},{"alias":"fStdev","path":"@stdlib/stats/base/dists/f/stdev","type":"Function","description":"F distribution standard deviation."},{"alias":"fVariance","path":"@stdlib/stats/base/dists/f/variance","type":"Function","description":"F distribution variance."},{"alias":"frechetCdf","path":"@stdlib/stats/base/dists/frechet/cdf","type":"Function","description":"Fréchet distribution cumulative distribution function (CDF)."},{"alias":"frechetEntropy","path":"@stdlib/stats/base/dists/frechet/entropy","type":"Function","description":"Fréchet distribution differential entropy."},{"alias":"Frechet","path":"@stdlib/stats/base/dists/frechet/ctor","type":"Function","description":"Fréchet distribution constructor."},{"alias":"frechetKurtosis","path":"@stdlib/stats/base/dists/frechet/kurtosis","type":"Function","description":"Fréchet distribution kurtosis."},{"alias":"frechetLogcdf","path":"@stdlib/stats/base/dists/frechet/logcdf","type":"Function","description":"Fréchet distribution logarithm of cumulative distribution function (CDF)."},{"alias":"frechetLogpdf","path":"@stdlib/stats/base/dists/frechet/logpdf","type":"Function","description":"Fréchet distribution logarithm of probability density function (PDF)."},{"alias":"frechetMean","path":"@stdlib/stats/base/dists/frechet/mean","type":"Function","description":"Fréchet distribution expected value."},{"alias":"frechetMedian","path":"@stdlib/stats/base/dists/frechet/median","type":"Function","description":"Fréchet distribution median."},{"alias":"frechetMode","path":"@stdlib/stats/base/dists/frechet/mode","type":"Function","description":"Fréchet distribution mode."},{"alias":"frechetPdf","path":"@stdlib/stats/base/dists/frechet/pdf","type":"Function","description":"Fréchet distribution probability density function (PDF)."},{"alias":"frechetQuantile","path":"@stdlib/stats/base/dists/frechet/quantile","type":"Function","description":"Fréchet distribution quantile function."},{"alias":"frechetSkewness","path":"@stdlib/stats/base/dists/frechet/skewness","type":"Function","description":"Fréchet distribution skewness."},{"alias":"frechetStdev","path":"@stdlib/stats/base/dists/frechet/stdev","type":"Function","description":"Fréchet distribution standard deviation."},{"alias":"frechetVariance","path":"@stdlib/stats/base/dists/frechet/variance","type":"Function","description":"Fréchet distribution variance."},{"alias":"gammaCdf","path":"@stdlib/stats/base/dists/gamma/cdf","type":"Function","description":"Gamma distribution cumulative distribution function (CDF)."},{"alias":"gammaEntropy","path":"@stdlib/stats/base/dists/gamma/entropy","type":"Function","description":"Gamma distribution differential entropy."},{"alias":"Gamma","path":"@stdlib/stats/base/dists/gamma/ctor","type":"Function","description":"Gamma distribution constructor."},{"alias":"gammaKurtosis","path":"@stdlib/stats/base/dists/gamma/kurtosis","type":"Function","description":"Gamma distribution excess kurtosis."},{"alias":"gammaLogpdf","path":"@stdlib/stats/base/dists/gamma/logpdf","type":"Function","description":"Gamma distribution logarithm of probability density function (PDF)."},{"alias":"gammaMean","path":"@stdlib/stats/base/dists/gamma/mean","type":"Function","description":"Gamma distribution expected value."},{"alias":"gammaMgf","path":"@stdlib/stats/base/dists/gamma/mgf","type":"Function","description":"Gamma distribution moment-generating function (MGF)."},{"alias":"gammaMode","path":"@stdlib/stats/base/dists/gamma/mode","type":"Function","description":"Gamma distribution mode."},{"alias":"gammaPdf","path":"@stdlib/stats/base/dists/gamma/pdf","type":"Function","description":"Gamma  distribution probability density function (PDF)."},{"alias":"gammaQuantile","path":"@stdlib/stats/base/dists/gamma/quantile","type":"Function","description":"Gamma distribution quantile function."},{"alias":"gammaSkewness","path":"@stdlib/stats/base/dists/gamma/skewness","type":"Function","description":"Gamma distribution skewness."},{"alias":"gammaStdev","path":"@stdlib/stats/base/dists/gamma/stdev","type":"Function","description":"Gamma distribution standard deviation."},{"alias":"gammaVariance","path":"@stdlib/stats/base/dists/gamma/variance","type":"Function","description":"Gamma distribution variance."},{"alias":"geometricCdf","path":"@stdlib/stats/base/dists/geometric/cdf","type":"Function","description":"Geometric distribution cumulative distribution function (CDF)."},{"alias":"geometricEntropy","path":"@stdlib/stats/base/dists/geometric/entropy","type":"Function","description":"Geometric distribution entropy."},{"alias":"Geometric","path":"@stdlib/stats/base/dists/geometric/ctor","type":"Function","description":"Geometric distribution constructor."},{"alias":"geometricKurtosis","path":"@stdlib/stats/base/dists/geometric/kurtosis","type":"Function","description":"Geometric distribution excess kurtosis."},{"alias":"geometricLogcdf","path":"@stdlib/stats/base/dists/geometric/logcdf","type":"Function","description":"Geometric distribution logarithm of cumulative distribution function (CDF)."},{"alias":"geometricLogpmf","path":"@stdlib/stats/base/dists/geometric/logpmf","type":"Function","description":"Geometric distribution logarithm of probability mass function (PMF)."},{"alias":"geometricMean","path":"@stdlib/stats/base/dists/geometric/mean","type":"Function","description":"Geometric distribution expected value."},{"alias":"geometricMedian","path":"@stdlib/stats/base/dists/geometric/median","type":"Function","description":"Geometric distribution median."},{"alias":"geometricMgf","path":"@stdlib/stats/base/dists/geometric/mgf","type":"Function","description":"Geometric distribution moment-generating function (MGF)."},{"alias":"geometricMode","path":"@stdlib/stats/base/dists/geometric/mode","type":"Function","description":"Geometric distribution mode."},{"alias":"geometricPmf","path":"@stdlib/stats/base/dists/geometric/pmf","type":"Function","description":"Geometric distribution probability mass function (PMF)."},{"alias":"geometricQuantile","path":"@stdlib/stats/base/dists/geometric/quantile","type":"Function","description":"Geometric distribution quantile function."},{"alias":"geometricSkewness","path":"@stdlib/stats/base/dists/geometric/skewness","type":"Function","description":"Geometric distribution skewness."},{"alias":"geometricStdev","path":"@stdlib/stats/base/dists/geometric/stdev","type":"Function","description":"Geometric distribution standard deviation."},{"alias":"geometricVariance","path":"@stdlib/stats/base/dists/geometric/variance","type":"Function","description":"Geometric distribution variance."},{"alias":"gumbelCdf","path":"@stdlib/stats/base/dists/gumbel/cdf","type":"Function","description":"Gumbel distribution cumulative distribution function (CDF)."},{"alias":"gumbelEntropy","path":"@stdlib/stats/base/dists/gumbel/entropy","type":"Function","description":"Gumbel distribution entropy."},{"alias":"Gumbel","path":"@stdlib/stats/base/dists/gumbel/ctor","type":"Function","description":"Gumbel distribution constructor."},{"alias":"gumbelKurtosis","path":"@stdlib/stats/base/dists/gumbel/kurtosis","type":"Function","description":"Gumbel distribution excess kurtosis."},{"alias":"gumbelLogcdf","path":"@stdlib/stats/base/dists/gumbel/logcdf","type":"Function","description":"Gumbel distribution logarithm of cumulative distribution function."},{"alias":"gumbelLogpdf","path":"@stdlib/stats/base/dists/gumbel/logpdf","type":"Function","description":"Gumbel distribution logarithm of probability density function (PDF)."},{"alias":"gumbelMean","path":"@stdlib/stats/base/dists/gumbel/mean","type":"Function","description":"Gumbel distribution mean."},{"alias":"gumbelMedian","path":"@stdlib/stats/base/dists/gumbel/median","type":"Function","description":"Gumbel distribution median."},{"alias":"gumbelMgf","path":"@stdlib/stats/base/dists/gumbel/mgf","type":"Function","description":"Gumbel distribution moment-generating function (MGF)."},{"alias":"gumbelMode","path":"@stdlib/stats/base/dists/gumbel/mode","type":"Function","description":"Gumbel distribution mode."},{"alias":"gumbelPdf","path":"@stdlib/stats/base/dists/gumbel/pdf","type":"Function","description":"Gumbel distribution probability density function (PDF)."},{"alias":"gumbelQuantile","path":"@stdlib/stats/base/dists/gumbel/quantile","type":"Function","description":"Gumbel distribution quantile function."},{"alias":"gumbelSkewness","path":"@stdlib/stats/base/dists/gumbel/skewness","type":"Function","description":"Gumbel distribution skewness."},{"alias":"gumbelStdev","path":"@stdlib/stats/base/dists/gumbel/stdev","type":"Function","description":"Gumbel distribution standard deviation."},{"alias":"gumbelVariance","path":"@stdlib/stats/base/dists/gumbel/variance","type":"Function","description":"Gumbel distribution variance."},{"alias":"hypergeometricCdf","path":"@stdlib/stats/base/dists/hypergeometric/cdf","type":"Function","description":"Hypergeometric distribution cumulative distribution function (CDF)."},{"alias":"Hypergeometric","path":"@stdlib/stats/base/dists/hypergeometric/ctor","type":"Function","description":"Hypergeometric distribution constructor."},{"alias":"hypergeometricKurtosis","path":"@stdlib/stats/base/dists/hypergeometric/kurtosis","type":"Function","description":"Hypergeometric distribution excess kurtosis."},{"alias":"hypergeometricLogpmf","path":"@stdlib/stats/base/dists/hypergeometric/logpmf","type":"Function","description":"Natural logarithm of the probability mass function (PMF) for a hypergeometric distribution."},{"alias":"hypergeometricMean","path":"@stdlib/stats/base/dists/hypergeometric/mean","type":"Function","description":"Hypergeometric distribution expected value."},{"alias":"hypergeometricMode","path":"@stdlib/stats/base/dists/hypergeometric/mode","type":"Function","description":"Hypergeometric distribution mode."},{"alias":"hypergeometricPmf","path":"@stdlib/stats/base/dists/hypergeometric/pmf","type":"Function","description":"Hypergeometric distribution probability mass function (PMF)."},{"alias":"hypergeometricQuantile","path":"@stdlib/stats/base/dists/hypergeometric/quantile","type":"Function","description":"Hypergeometric distribution quantile function."},{"alias":"hypergeometricSkewness","path":"@stdlib/stats/base/dists/hypergeometric/skewness","type":"Function","description":"Hypergeometric distribution skewness."},{"alias":"hypergeometricStdev","path":"@stdlib/stats/base/dists/hypergeometric/stdev","type":"Function","description":"Hypergeometric distribution standard deviation."},{"alias":"hypergeometricVariance","path":"@stdlib/stats/base/dists/hypergeometric/variance","type":"Function","description":"Hypergeometric distribution variance."},{"alias":"invgammaCdf","path":"@stdlib/stats/base/dists/invgamma/cdf","type":"Function","description":"Inverse gamma distribution cumulative distribution function (CDF)."},{"alias":"invgammaEntropy","path":"@stdlib/stats/base/dists/invgamma/entropy","type":"Function","description":"Inverse gamma distribution differential entropy."},{"alias":"InvGamma","path":"@stdlib/stats/base/dists/invgamma/ctor","type":"Function","description":"Inverse gamma distribution constructor."},{"alias":"invgammaKurtosis","path":"@stdlib/stats/base/dists/invgamma/kurtosis","type":"Function","description":"Inverse gamma distribution excess kurtosis."},{"alias":"invgammaLogpdf","path":"@stdlib/stats/base/dists/invgamma/logpdf","type":"Function","description":"Natural logarithm of the probability density function (PDF) for an inverse gamma distribution."},{"alias":"invgammaMean","path":"@stdlib/stats/base/dists/invgamma/mean","type":"Function","description":"Inverse gamma distribution expected value."},{"alias":"invgammaMode","path":"@stdlib/stats/base/dists/invgamma/mode","type":"Function","description":"Inverse gamma distribution mode."},{"alias":"invgammaPdf","path":"@stdlib/stats/base/dists/invgamma/pdf","type":"Function","description":"Inverse gamma distribution probability density function (PDF)."},{"alias":"invgammaQuantile","path":"@stdlib/stats/base/dists/invgamma/quantile","type":"Function","description":"Inverse gamma distribution quantile function."},{"alias":"invgammaSkewness","path":"@stdlib/stats/base/dists/invgamma/skewness","type":"Function","description":"Inverse gamma distribution skewness."},{"alias":"invgammaStdev","path":"@stdlib/stats/base/dists/invgamma/stdev","type":"Function","description":"Inverse gamma distribution standard deviation."},{"alias":"invgammaVariance","path":"@stdlib/stats/base/dists/invgamma/variance","type":"Function","description":"Inverse gamma distribution variance."},{"alias":"kumaraswamyCdf","path":"@stdlib/stats/base/dists/kumaraswamy/cdf","type":"Function","description":"Kumaraswamy's double bounded distribution cumulative distribution function (CDF)."},{"alias":"Kumaraswamy","path":"@stdlib/stats/base/dists/kumaraswamy/ctor","type":"Function","description":"Kumaraswamy's double bounded distribution constructor."},{"alias":"kumaraswamyKurtosis","path":"@stdlib/stats/base/dists/kumaraswamy/kurtosis","type":"Function","description":"Kumaraswamy's double bounded distribution excess kurtosis."},{"alias":"kumaraswamyLogcdf","path":"@stdlib/stats/base/dists/kumaraswamy/logcdf","type":"Function","description":"Natural logarithm of the cumulative distribution function (CDF)for a Kumaraswamy's double bounded distribution."},{"alias":"kumaraswamyLogpdf","path":"@stdlib/stats/base/dists/kumaraswamy/logpdf","type":"Function","description":"Natural logarithm of the probability density function (PDF) for a Kumaraswamy's double bounded distribution."},{"alias":"kumaraswamyMean","path":"@stdlib/stats/base/dists/kumaraswamy/mean","type":"Function","description":"Kumaraswamy's double bounded distribution expected value."},{"alias":"kumaraswamyMedian","path":"@stdlib/stats/base/dists/kumaraswamy/median","type":"Function","description":"Kumaraswamy's double bounded distribution median."},{"alias":"kumaraswamyMode","path":"@stdlib/stats/base/dists/kumaraswamy/mode","type":"Function","description":"Kumaraswamy's double bounded distribution mode."},{"alias":"kumaraswamyPdf","path":"@stdlib/stats/base/dists/kumaraswamy/pdf","type":"Function","description":"Kumaraswamy's double bounded distribution probability density function (PDF)."},{"alias":"kumaraswamyQuantile","path":"@stdlib/stats/base/dists/kumaraswamy/quantile","type":"Function","description":"Kumaraswamy's double bounded distribution quantile function."},{"alias":"kumaraswamySkewness","path":"@stdlib/stats/base/dists/kumaraswamy/skewness","type":"Function","description":"Kumaraswamy's double bounded distribution skewness."},{"alias":"kumaraswamyStdev","path":"@stdlib/stats/base/dists/kumaraswamy/stdev","type":"Function","description":"Kumaraswamy's double bounded distribution standard deviation."},{"alias":"kumaraswamyVariance","path":"@stdlib/stats/base/dists/kumaraswamy/variance","type":"Function","description":"Kumaraswamy's double bounded distribution variance."},{"alias":"laplaceCdf","path":"@stdlib/stats/base/dists/laplace/cdf","type":"Function","description":"Laplace distribution cumulative distribution function (CDF)."},{"alias":"laplaceEntropy","path":"@stdlib/stats/base/dists/laplace/entropy","type":"Function","description":"Laplace distribution differential entropy."},{"alias":"laplaceKurtosis","path":"@stdlib/stats/base/dists/laplace/kurtosis","type":"Function","description":"Laplace distribution excess kurtosis."},{"alias":"Laplace","path":"@stdlib/stats/base/dists/laplace/ctor","type":"Function","description":"Laplace distribution constructor."},{"alias":"laplaceLogcdf","path":"@stdlib/stats/base/dists/laplace/logcdf","type":"Function","description":"Laplace distribution logarithm of cumulative distribution function (CDF)."},{"alias":"laplaceLogpdf","path":"@stdlib/stats/base/dists/laplace/logpdf","type":"Function","description":"Laplace distribution logarithm of probability density function (PDF)."},{"alias":"laplaceMean","path":"@stdlib/stats/base/dists/laplace/mean","type":"Function","description":"Laplace distribution expected value."},{"alias":"laplaceMedian","path":"@stdlib/stats/base/dists/laplace/median","type":"Function","description":"Laplace distribution median."},{"alias":"laplaceMgf","path":"@stdlib/stats/base/dists/laplace/mgf","type":"Function","description":"Laplace (Double Exponential) distribution moment-generating function (MGF)."},{"alias":"laplaceMode","path":"@stdlib/stats/base/dists/laplace/mode","type":"Function","description":"Laplace distribution mode."},{"alias":"laplacePdf","path":"@stdlib/stats/base/dists/laplace/pdf","type":"Function","description":"Laplace distribution probability density function (PDF)."},{"alias":"laplaceQuantile","path":"@stdlib/stats/base/dists/laplace/quantile","type":"Function","description":"Laplace distribution quantile function."},{"alias":"laplaceSkewness","path":"@stdlib/stats/base/dists/laplace/skewness","type":"Function","description":"Laplace distribution skewness."},{"alias":"laplaceStdev","path":"@stdlib/stats/base/dists/laplace/stdev","type":"Function","description":"Laplace distribution standard deviation."},{"alias":"laplaceVariance","path":"@stdlib/stats/base/dists/laplace/variance","type":"Function","description":"Laplace distribution variance."},{"alias":"levyCdf","path":"@stdlib/stats/base/dists/levy/cdf","type":"Function","description":"Lévy distribution cumulative distribution function (CDF)."},{"alias":"levyEntropy","path":"@stdlib/stats/base/dists/levy/entropy","type":"Function","description":"Lévy distribution entropy."},{"alias":"Levy","path":"@stdlib/stats/base/dists/levy/ctor","type":"Function","description":"Lévy distribution constructor."},{"alias":"levyLogcdf","path":"@stdlib/stats/base/dists/levy/logcdf","type":"Function","description":"Lévy distribution logarithm of cumulative distribution function (CDF)."},{"alias":"levyLogpdf","path":"@stdlib/stats/base/dists/levy/logpdf","type":"Function","description":"Lévy distribution logarithm of probability density function (PDF)."},{"alias":"levyMean","path":"@stdlib/stats/base/dists/levy/mean","type":"Function","description":"Lévy distribution expected value."},{"alias":"levyMedian","path":"@stdlib/stats/base/dists/levy/median","type":"Function","description":"Lévy distribution median."},{"alias":"levyMode","path":"@stdlib/stats/base/dists/levy/mode","type":"Function","description":"Lévy distribution mode."},{"alias":"levyPdf","path":"@stdlib/stats/base/dists/levy/pdf","type":"Function","description":"Lévy distribution probability density function (PDF)."},{"alias":"levyQuantile","path":"@stdlib/stats/base/dists/levy/quantile","type":"Function","description":"Lévy distribution quantile function."},{"alias":"levyStdev","path":"@stdlib/stats/base/dists/levy/stdev","type":"Function","description":"Lévy distribution standard deviation."},{"alias":"levyVariance","path":"@stdlib/stats/base/dists/levy/variance","type":"Function","description":"Lévy distribution variance."},{"alias":"logisticCdf","path":"@stdlib/stats/base/dists/logistic/cdf","type":"Function","description":"Logistic distribution cumulative distribution function (CDF)."},{"alias":"logisticEntropy","path":"@stdlib/stats/base/dists/logistic/entropy","type":"Function","description":"Logistic distribution entropy."},{"alias":"logisticKurtosis","path":"@stdlib/stats/base/dists/logistic/kurtosis","type":"Function","description":"Logistic distribution kurtosis."},{"alias":"logisticLogcdf","path":"@stdlib/stats/base/dists/logistic/logcdf","type":"Function","description":"Logistic distribution logarithm of cumulative distribution function (CDF)."},{"alias":"Logistic","path":"@stdlib/stats/base/dists/logistic/ctor","type":"Function","description":"Logistic distribution constructor."},{"alias":"logisticLogpdf","path":"@stdlib/stats/base/dists/logistic/logpdf","type":"Function","description":"Logistic distribution logarithm of probability density function (PDF)."},{"alias":"logisticMean","path":"@stdlib/stats/base/dists/logistic/mean","type":"Function","description":"Logistic distribution expected value."},{"alias":"logisticMedian","path":"@stdlib/stats/base/dists/logistic/median","type":"Function","description":"Logistic distribution median."},{"alias":"logisticMgf","path":"@stdlib/stats/base/dists/logistic/mgf","type":"Function","description":"Logistic distribution moment-generating function (MGF)."},{"alias":"logisticMode","path":"@stdlib/stats/base/dists/logistic/mode","type":"Function","description":"Logistic distribution mode."},{"alias":"logisticPdf","path":"@stdlib/stats/base/dists/logistic/pdf","type":"Function","description":"Logistic distribution probability density function (PDF)."},{"alias":"logisticQuantile","path":"@stdlib/stats/base/dists/logistic/quantile","type":"Function","description":"Logistic distribution quantile function."},{"alias":"logisticSkewness","path":"@stdlib/stats/base/dists/logistic/skewness","type":"Function","description":"Logistic distribution skewness."},{"alias":"logisticStdev","path":"@stdlib/stats/base/dists/logistic/stdev","type":"Function","description":"Logistic distribution standard deviation."},{"alias":"logisticVariance","path":"@stdlib/stats/base/dists/logistic/variance","type":"Function","description":"Logistic distribution variance."},{"alias":"lognormalCdf","path":"@stdlib/stats/base/dists/lognormal/cdf","type":"Function","description":"Lognormal distribution cumulative distribution function (CDF)."},{"alias":"lognormalEntropy","path":"@stdlib/stats/base/dists/lognormal/entropy","type":"Function","description":"Lognormal distribution differential entropy."},{"alias":"lognormalKurtosis","path":"@stdlib/stats/base/dists/lognormal/kurtosis","type":"Function","description":"Lognormal distribution kurtosis."},{"alias":"LogNormal","path":"@stdlib/stats/base/dists/lognormal/ctor","type":"Function","description":"Lognormal distribution constructor."},{"alias":"lognormalLogpdf","path":"@stdlib/stats/base/dists/lognormal/logpdf","type":"Function","description":"Natural logarithm of the probability density function (PDF) for a lognormal distribution."},{"alias":"lognormalMean","path":"@stdlib/stats/base/dists/lognormal/mean","type":"Function","description":"Lognormal distribution expected value."},{"alias":"lognormalMedian","path":"@stdlib/stats/base/dists/lognormal/median","type":"Function","description":"Lognormal distribution median."},{"alias":"lognormalMode","path":"@stdlib/stats/base/dists/lognormal/mode","type":"Function","description":"Lognormal distribution mode."},{"alias":"lognormalPdf","path":"@stdlib/stats/base/dists/lognormal/pdf","type":"Function","description":"Lognormal distribution probability density function (PDF)."},{"alias":"lognormalQuantile","path":"@stdlib/stats/base/dists/lognormal/quantile","type":"Function","description":"Lognormal distribution quantile function."},{"alias":"lognormalSkewness","path":"@stdlib/stats/base/dists/lognormal/skewness","type":"Function","description":"Lognormal distribution skewness."},{"alias":"lognormalStdev","path":"@stdlib/stats/base/dists/lognormal/stdev","type":"Function","description":"Lognormal distribution standard deviation."},{"alias":"lognormalVariance","path":"@stdlib/stats/base/dists/lognormal/variance","type":"Function","description":"Lognormal distribution variance."},{"alias":"negativeBinomialCdf","path":"@stdlib/stats/base/dists/negative-binomial/cdf","type":"Function","description":"Negative binomial distribution cumulative distribution function (CDF)."},{"alias":"negativeBinomialKurtosis","path":"@stdlib/stats/base/dists/negative-binomial/kurtosis","type":"Function","description":"Negative binomial distribution excess kurtosis."},{"alias":"negativeBinomialLogpmf","path":"@stdlib/stats/base/dists/negative-binomial/logpmf","type":"Function","description":"Natural logarithm of the probability mass function (PMF) for a negative binomial distribution."},{"alias":"negativeBinomialMean","path":"@stdlib/stats/base/dists/negative-binomial/mean","type":"Function","description":"Negative binomial distribution expected value."},{"alias":"negativeBinomialMgf","path":"@stdlib/stats/base/dists/negative-binomial/mgf","type":"Function","description":"Negative binomial distribution moment-generating function (MGF)."},{"alias":"negativeBinomialMode","path":"@stdlib/stats/base/dists/negative-binomial/mode","type":"Function","description":"Negative binomial distribution mode."},{"alias":"negativeBNegativeBinomial","path":"@stdlib/stats/base/dists/negative-binomial/ctor","type":"Function","description":"Negative binomial distribution constructor."},{"alias":"negativeBinomialPmf","path":"@stdlib/stats/base/dists/negative-binomial/pmf","type":"Function","description":"Negative binomial distribution probability mass function (PMF)."},{"alias":"negativeBinomialQuantile","path":"@stdlib/stats/base/dists/negative-binomial/quantile","type":"Function","description":"Negative binomial distribution quantile function."},{"alias":"negativeBinomialSkewness","path":"@stdlib/stats/base/dists/negative-binomial/skewness","type":"Function","description":"Negative binomial distribution skewness."},{"alias":"negativeBinomialStdev","path":"@stdlib/stats/base/dists/negative-binomial/stdev","type":"Function","description":"Negative binomial distribution standard deviation."},{"alias":"negativeBinomialVariance","path":"@stdlib/stats/base/dists/negative-binomial/variance","type":"Function","description":"Negative binomial distribution variance."},{"alias":"normalCdf","path":"@stdlib/stats/base/dists/normal/cdf","type":"Function","description":"Normal distribution cumulative distribution function (CDF)."},{"alias":"normalEntropy","path":"@stdlib/stats/base/dists/normal/entropy","type":"Function","description":"Normal distribution differential entropy."},{"alias":"normalKurtosis","path":"@stdlib/stats/base/dists/normal/kurtosis","type":"Function","description":"Normal distribution excess kurtosis."},{"alias":"normalLogpdf","path":"@stdlib/stats/base/dists/normal/logpdf","type":"Function","description":"Natural logarithm of the probability density function (PDF) for a normal distribution."},{"alias":"normalMean","path":"@stdlib/stats/base/dists/normal/mean","type":"Function","description":"Normal distribution expected value."},{"alias":"normalMedian","path":"@stdlib/stats/base/dists/normal/median","type":"Function","description":"Normal distribution median."},{"alias":"normalMgf","path":"@stdlib/stats/base/dists/normal/mgf","type":"Function","description":"Normal distribution moment-generating function (MGF)."},{"alias":"normalMode","path":"@stdlib/stats/base/dists/normal/mode","type":"Function","description":"Normal distribution mode."},{"alias":"Normal","path":"@stdlib/stats/base/dists/normal/ctor","type":"Function","description":"Normal distribution constructor."},{"alias":"normalPdf","path":"@stdlib/stats/base/dists/normal/pdf","type":"Function","description":"Normal distribution probability density function (PDF)."},{"alias":"normalQuantile","path":"@stdlib/stats/base/dists/normal/quantile","type":"Function","description":"Normal distribution quantile function."},{"alias":"normalSkewness","path":"@stdlib/stats/base/dists/normal/skewness","type":"Function","description":"Normal distribution skewness."},{"alias":"normalStdev","path":"@stdlib/stats/base/dists/normal/stdev","type":"Function","description":"Normal distribution standard deviation."},{"alias":"normalVariance","path":"@stdlib/stats/base/dists/normal/variance","type":"Function","description":"Normal distribution variance."},{"alias":"pareto1Cdf","path":"@stdlib/stats/base/dists/pareto-type1/cdf","type":"Function","description":"Pareto distribution cumulative distribution function (CDF)."},{"alias":"pareto1Entropy","path":"@stdlib/stats/base/dists/pareto-type1/entropy","type":"Function","description":"Pareto (Type I) distribution differential entropy."},{"alias":"pareto1Kurtosis","path":"@stdlib/stats/base/dists/pareto-type1/kurtosis","type":"Function","description":"Pareto (Type I) distribution excess kurtosis."},{"alias":"pareto1Logcdf","path":"@stdlib/stats/base/dists/pareto-type1/logcdf","type":"Function","description":"Natural logarithm of the cumulative distribution function (CDF)for a Pareto (Type I) distribution."},{"alias":"pareto1Logpdf","path":"@stdlib/stats/base/dists/pareto-type1/logpdf","type":"Function","description":"Natural logarithm of the probability density function (PDF) for a Pareto (Type I) distribution."},{"alias":"pareto1Mean","path":"@stdlib/stats/base/dists/pareto-type1/mean","type":"Function","description":"Pareto (Type I) distribution expected value."},{"alias":"pareto1Median","path":"@stdlib/stats/base/dists/pareto-type1/median","type":"Function","description":"Pareto (Type I) distribution median."},{"alias":"pareto1Mode","path":"@stdlib/stats/base/dists/pareto-type1/mode","type":"Function","description":"Pareto (Type I) distribution mode."},{"alias":"pareto1.Pareto1","path":"@stdlib/stats/base/dists/pareto-type1/ctor","type":"Function","description":"Pareto (Type I) distribution constructor."},{"alias":"pareto1Pdf","path":"@stdlib/stats/base/dists/pareto-type1/pdf","type":"Function","description":"Pareto  distribution (Type I) probability density function (PDF)."},{"alias":"pareto1Quantile","path":"@stdlib/stats/base/dists/pareto-type1/quantile","type":"Function","description":"Pareto (Type I) distribution quantile function."},{"alias":"pareto1Skewness","path":"@stdlib/stats/base/dists/pareto-type1/skewness","type":"Function","description":"Pareto (Type I) distribution skewness."},{"alias":"pareto1Variance","path":"@stdlib/stats/base/dists/pareto-type1/variance","type":"Function","description":"Pareto (Type I) distribution variance."},{"alias":"poissonCdf","path":"@stdlib/stats/base/dists/poisson/cdf","type":"Function","description":"Poisson distribution cumulative distribution function (CDF)."},{"alias":"poissonEntropy","path":"@stdlib/stats/base/dists/poisson/entropy","type":"Function","description":"Poisson distribution entropy."},{"alias":"poissonKurtosis","path":"@stdlib/stats/base/dists/poisson/kurtosis","type":"Function","description":"Poisson distribution excess kurtosis."},{"alias":"poissonLogpmf","path":"@stdlib/stats/base/dists/poisson/logpmf","type":"Function","description":"Natural logarithm of the probability mass function (PMF) for a Poisson distribution."},{"alias":"poissonMean","path":"@stdlib/stats/base/dists/poisson/mean","type":"Function","description":"Poisson distribution expected value."},{"alias":"poissonMedian","path":"@stdlib/stats/base/dists/poisson/median","type":"Function","description":"Poisson distribution median."},{"alias":"poissonMgf","path":"@stdlib/stats/base/dists/poisson/mgf","type":"Function","description":"Poisson distribution moment-generating function (MGF)."},{"alias":"poissonMode","path":"@stdlib/stats/base/dists/poisson/mode","type":"Function","description":"Poisson distribution mode."},{"alias":"poissonPmf","path":"@stdlib/stats/base/dists/poisson/pmf","type":"Function","description":"Poisson distribution probability mass function (PMF)."},{"alias":"Poisson","path":"@stdlib/stats/base/dists/poisson/ctor","type":"Function","description":"Poisson distribution constructor."},{"alias":"poissonQuantile","path":"@stdlib/stats/base/dists/poisson/quantile","type":"Function","description":"Poisson distribution quantile function."},{"alias":"poissonSkewness","path":"@stdlib/stats/base/dists/poisson/skewness","type":"Function","description":"Poisson distribution skewness."},{"alias":"poissonStdev","path":"@stdlib/stats/base/dists/poisson/stdev","type":"Function","description":"Poisson distribution standard deviation."},{"alias":"poissonVariance","path":"@stdlib/stats/base/dists/poisson/variance","type":"Function","description":"Poisson distribution variance."},{"alias":"rayleighCdf","path":"@stdlib/stats/base/dists/rayleigh/cdf","type":"Function","description":"Rayleigh distribution cumulative distribution function (CDF)."},{"alias":"rayleighEntropy","path":"@stdlib/stats/base/dists/rayleigh/entropy","type":"Function","description":"Rayleigh distribution differential entropy."},{"alias":"rayleighKurtosis","path":"@stdlib/stats/base/dists/rayleigh/kurtosis","type":"Function","description":"Rayleigh distribution excess kurtosis."},{"alias":"rayleighLogcdf","path":"@stdlib/stats/base/dists/rayleigh/logcdf","type":"Function","description":"Rayleigh distribution logarithm of cumulative distribution function (CDF)."},{"alias":"rayleighLogpdf","path":"@stdlib/stats/base/dists/rayleigh/logpdf","type":"Function","description":"Rayleigh distribution logarithm of probability density function (PDF)."},{"alias":"rayleighMean","path":"@stdlib/stats/base/dists/rayleigh/mean","type":"Function","description":"Rayleigh distribution expected value."},{"alias":"rayleighMedian","path":"@stdlib/stats/base/dists/rayleigh/median","type":"Function","description":"Rayleigh distribution median."},{"alias":"rayleighMgf","path":"@stdlib/stats/base/dists/rayleigh/mgf","type":"Function","description":"Rayleigh distribution moment-generating function (MGF)."},{"alias":"rayleighMode","path":"@stdlib/stats/base/dists/rayleigh/mode","type":"Function","description":"Rayleigh distribution mode."},{"alias":"rayleighPdf","path":"@stdlib/stats/base/dists/rayleigh/pdf","type":"Function","description":"Rayleigh distribution probability density function (PDF)."},{"alias":"rayleighQuantile","path":"@stdlib/stats/base/dists/rayleigh/quantile","type":"Function","description":"Rayleigh distribution quantile function."},{"alias":"Rayleigh","path":"@stdlib/stats/base/dists/rayleigh/ctor","type":"Function","description":"Rayleigh distribution constructor."},{"alias":"rayleighSkewness","path":"@stdlib/stats/base/dists/rayleigh/skewness","type":"Function","description":"Rayleigh distribution skewness."},{"alias":"rayleighStdev","path":"@stdlib/stats/base/dists/rayleigh/stdev","type":"Function","description":"Rayleigh distribution standard deviation."},{"alias":"rayleighVariance","path":"@stdlib/stats/base/dists/rayleigh/variance","type":"Function","description":"Rayleigh distribution variance."},{"alias":"tCdf","path":"@stdlib/stats/base/dists/t/cdf","type":"Function","description":"Student's t distribution cumulative distribution function (CDF)."},{"alias":"tEntropy","path":"@stdlib/stats/base/dists/t/entropy","type":"Function","description":"Student's t distribution entropy."},{"alias":"tKurtosis","path":"@stdlib/stats/base/dists/t/kurtosis","type":"Function","description":"Student's t distribution excess kurtosis."},{"alias":"tMean","path":"@stdlib/stats/base/dists/t/mean","type":"Function","description":"Student's t distribution expected value."},{"alias":"tMedian","path":"@stdlib/stats/base/dists/t/median","type":"Function","description":"Student's t distribution median."},{"alias":"tMode","path":"@stdlib/stats/base/dists/t/mode","type":"Function","description":"Student's t distribution mode."},{"alias":"tPdf","path":"@stdlib/stats/base/dists/t/pdf","type":"Function","description":"Student's t distribution probability density function (PDF)."},{"alias":"tQuantile","path":"@stdlib/stats/base/dists/t/quantile","type":"Function","description":"Student's t distribution quantile function."},{"alias":"tSkewness","path":"@stdlib/stats/base/dists/t/skewness","type":"Function","description":"Student's t distribution skewness."},{"alias":"tStdev","path":"@stdlib/stats/base/dists/t/stdev","type":"Function","description":"Student's t distribution standard deviation."},{"alias":"T","path":"@stdlib/stats/base/dists/t/ctor","type":"Function","description":"Student's t distribution constructor."},{"alias":"tVariance","path":"@stdlib/stats/base/dists/t/variance","type":"Function","description":"Student's t distribution variance."},{"alias":"triangularCdf","path":"@stdlib/stats/base/dists/triangular/cdf","type":"Function","description":"Triangular distribution cumulative distribution function (CDF)."},{"alias":"triangularEntropy","path":"@stdlib/stats/base/dists/triangular/entropy","type":"Function","description":"Triangular distribution differential entropy."},{"alias":"triangularKurtosis","path":"@stdlib/stats/base/dists/triangular/kurtosis","type":"Function","description":"Triangular distribution excess kurtosis."},{"alias":"triangularLogcdf","path":"@stdlib/stats/base/dists/triangular/logcdf","type":"Function","description":"Triangular distribution logarithm of cumulative distribution function (CDF)."},{"alias":"triangularLogpdf","path":"@stdlib/stats/base/dists/triangular/logpdf","type":"Function","description":"Triangular distribution logarithm of probability density function (PDF)."},{"alias":"triangularMean","path":"@stdlib/stats/base/dists/triangular/mean","type":"Function","description":"Triangular distribution expected value."},{"alias":"triangularMedian","path":"@stdlib/stats/base/dists/triangular/median","type":"Function","description":"Triangular distribution median."},{"alias":"triangularMgf","path":"@stdlib/stats/base/dists/triangular/mgf","type":"Function","description":"Triangular distribution moment-generating function (MGF)."},{"alias":"triangularMode","path":"@stdlib/stats/base/dists/triangular/mode","type":"Function","description":"Triangular distribution mode."},{"alias":"triangularPdf","path":"@stdlib/stats/base/dists/triangular/pdf","type":"Function","description":"Triangular distribution probability density function (PDF)."},{"alias":"triangularQuantile","path":"@stdlib/stats/base/dists/triangular/quantile","type":"Function","description":"Triangular distribution quantile function."},{"alias":"triangularSkewness","path":"@stdlib/stats/base/dists/triangular/skewness","type":"Function","description":"Triangular distribution skewness."},{"alias":"triangularStdev","path":"@stdlib/stats/base/dists/triangular/stdev","type":"Function","description":"Triangular distribution standard deviation."},{"alias":"Triangular","path":"@stdlib/stats/base/dists/triangular/ctor","type":"Function","description":"Triangular distribution constructor."},{"alias":"triangularVariance","path":"@stdlib/stats/base/dists/triangular/variance","type":"Function","description":"Triangular distribution variance."},{"alias":"uniformCdf","path":"@stdlib/stats/base/dists/uniform/cdf","type":"Function","description":"Uniform distribution cumulative distribution function (CDF)."},{"alias":"uniformEntropy","path":"@stdlib/stats/base/dists/uniform/entropy","type":"Function","description":"Uniform distribution differential entropy."},{"alias":"uniformKurtosis","path":"@stdlib/stats/base/dists/uniform/kurtosis","type":"Function","description":"Uniform distribution excess kurtosis."},{"alias":"uniformLogcdf","path":"@stdlib/stats/base/dists/uniform/logcdf","type":"Function","description":"Uniform distribution logarithm of cumulative distribution function (CDF)."},{"alias":"uniformLogpdf","path":"@stdlib/stats/base/dists/uniform/logpdf","type":"Function","description":"Uniform distribution logarithm of probability density function (PDF)."},{"alias":"uniformMean","path":"@stdlib/stats/base/dists/uniform/mean","type":"Function","description":"Uniform distribution expected value."},{"alias":"uniformMedian","path":"@stdlib/stats/base/dists/uniform/median","type":"Function","description":"Uniform distribution median."},{"alias":"uniformMgf","path":"@stdlib/stats/base/dists/uniform/mgf","type":"Function","description":"Uniform distribution moment-generating function (MGF)."},{"alias":"uniformPdf","path":"@stdlib/stats/base/dists/uniform/pdf","type":"Function","description":"Uniform distribution probability density function (PDF)."},{"alias":"uniformQuantile","path":"@stdlib/stats/base/dists/uniform/quantile","type":"Function","description":"Uniform distribution quantile function."},{"alias":"uniformSkewness","path":"@stdlib/stats/base/dists/uniform/skewness","type":"Function","description":"Uniform distribution skewness."},{"alias":"uniformStdev","path":"@stdlib/stats/base/dists/uniform/stdev","type":"Function","description":"Uniform distribution standard deviation."},{"alias":"Uniform","path":"@stdlib/stats/base/dists/uniform/ctor","type":"Function","description":"Uniform distribution constructor."},{"alias":"uniformVariance","path":"@stdlib/stats/base/dists/uniform/variance","type":"Function","description":"Uniform distribution variance."},{"alias":"weibullCdf","path":"@stdlib/stats/base/dists/weibull/cdf","type":"Function","description":"Weibull distribution cumulative distribution function (CDF)."},{"alias":"weibullEntropy","path":"@stdlib/stats/base/dists/weibull/entropy","type":"Function","description":"Weibull distribution differential entropy."},{"alias":"weibullKurtosis","path":"@stdlib/stats/base/dists/weibull/kurtosis","type":"Function","description":"Weibull distribution excess kurtosis."},{"alias":"weibullLogcdf","path":"@stdlib/stats/base/dists/weibull/logcdf","type":"Function","description":"Weibull distribution logarithm of cumulative distribution function (CDF)."},{"alias":"weibullLogpdf","path":"@stdlib/stats/base/dists/weibull/logpdf","type":"Function","description":"Weibull distribution logarithm of probability density function (PDF)."},{"alias":"weibullMean","path":"@stdlib/stats/base/dists/weibull/mean","type":"Function","description":"Weibull distribution expected value."},{"alias":"weibullMedian","path":"@stdlib/stats/base/dists/weibull/median","type":"Function","description":"Weibull distribution median."},{"alias":"weibullMgf","path":"@stdlib/stats/base/dists/weibull/mgf","type":"Function","description":"Weibull distribution moment-generating function (MGF)."},{"alias":"weibullMode","path":"@stdlib/stats/base/dists/weibull/mode","type":"Function","description":"Weibull distribution mode."},{"alias":"weibullPdf","path":"@stdlib/stats/base/dists/weibull/pdf","type":"Function","description":"Weibull distribution probability density function (PDF)."},{"alias":"weibullQuantile","path":"@stdlib/stats/base/dists/weibull/quantile","type":"Function","description":"Weibull distribution quantile function."},{"alias":"weibullSkewness","path":"@stdlib/stats/base/dists/weibull/skewness","type":"Function","description":"Weibull distribution skewness."},{"alias":"weibullStdev","path":"@stdlib/stats/base/dists/weibull/stdev","type":"Function","description":"Weibull distribution standard deviation."},{"alias":"weibullVariance","path":"@stdlib/stats/base/dists/weibull/variance","type":"Function","description":"Weibull distribution variance."},{"alias":"Weibull","path":"@stdlib/stats/base/dists/weibull/ctor","type":"Function","description":"Weibull distribution constructor."},{"alias":"ellipe","path":"@stdlib/math/base/special/ellipe","type":"Function","description":"Compute the complete elliptic integral of the second kind."},{"alias":"ellipk","path":"@stdlib/math/base/special/ellipk","type":"Function","description":"Compute the complete elliptic integral of the first kind."},{"alias":"epsdiff","path":"@stdlib/math/base/utils/float64-epsilon-difference","type":"Function","description":"Compute the relative difference of two real numbers in units of double-precision floating-point epsilon."},{"alias":"erf","path":"@stdlib/math/base/special/erf","type":"Function","description":"Error function."},{"alias":"erfc","path":"@stdlib/math/base/special/erfc","type":"Function","description":"Complementary error function."},{"alias":"erfcinv","path":"@stdlib/math/base/special/erfcinv","type":"Function","description":"Inverse complementary error function."},{"alias":"erfinv","path":"@stdlib/math/base/special/erfinv","type":"Function","description":"Inverse error function."},{"alias":"eta","path":"@stdlib/math/base/special/dirichlet-eta","type":"Function","description":"Dirichlet eta function."},{"alias":"evalpoly","path":"@stdlib/math/base/tools/evalpoly","type":"Function","description":"Evaluate a polynomial."},{"alias":"evalrational","path":"@stdlib/math/base/tools/evalrational","type":"Function","description":"Evaluate a rational function."},{"alias":"exp","path":"@stdlib/math/base/special/exp","type":"Function","description":"Natural exponential function."},{"alias":"exp2","path":"@stdlib/math/base/special/exp2","type":"Function","description":"Base 2 exponential function."},{"alias":"exp10","path":"@stdlib/math/base/special/exp10","type":"Function","description":"Base 10 exponential function."},{"alias":"expm1","path":"@stdlib/math/base/special/expm1","type":"Function","description":"Compute exp(x) - 1."},{"alias":"expm1rel","path":"@stdlib/math/base/special/expm1rel","type":"Function","description":"Relative error exponential."},{"alias":"exponent","path":"@stdlib/number/float64/base/exponent","type":"Function","description":"Return an integer corresponding to the unbiased exponent of a double-precision floating-point number."},{"alias":"exponentf","path":"@stdlib/number/float32/base/exponent","type":"Function","description":"Return an integer corresponding to the unbiased exponent of a single-precision floating-point number."},{"alias":"factorial","path":"@stdlib/math/base/special/factorial","type":"Function","description":"Evaluate a factorial."},{"alias":"factorialln","path":"@stdlib/math/base/special/factorialln","type":"Function","description":"Evaluate the natural logarithm of the factorial function."},{"alias":"fallingFactorial","path":"@stdlib/math/base/special/falling-factorial","type":"Function","description":"Compute the falling factorial."},{"alias":"fibonacci","path":"@stdlib/math/base/special/fibonacci","type":"Function","description":"Compute the nth Fibonacci number."},{"alias":"fibonacciIndex","path":"@stdlib/math/base/special/fibonacci-index","type":"Function","description":"Compute the Fibonacci number index."},{"alias":"fibpoly","path":"@stdlib/math/base/tools/fibpoly","type":"Function","description":"Evaluate a Fibonacci polynomial."},{"alias":"flipsign","path":"@stdlib/math/base/special/flipsign","type":"Function","description":"Return a double-precision floating-point number with the magnitude of x and the sign of x*y."},{"alias":"float32ToInt32","path":"@stdlib/number/float32/base/to-int32","type":"Function","description":"Convert a single-precision floating-point number to a signed 32-bit integer."},{"alias":"float32ToUint32","path":"@stdlib/number/float32/base/to-uint32","type":"Function","description":"Convert a single-precision floating-point number to an unsigned 32-bit integer."},{"alias":"float64ToFloat32","path":"@stdlib/number/float64/base/to-float32","type":"Function","description":"Convert a double-precision floating-point number to the nearest single-precision floating-point number."},{"alias":"float64ToInt32","path":"@stdlib/number/float64/base/to-int32","type":"Function","description":"Convert a double-precision floating-point number to a signed 32-bit integer."},{"alias":"float64ToUint32","path":"@stdlib/number/float64/base/to-uint32","type":"Function","description":"Convert a double-precision floating-point number to an unsigned 32-bit integer."},{"alias":"floor","path":"@stdlib/math/base/special/floor","type":"Function","description":"Round a numeric value toward negative infinity."},{"alias":"floor2","path":"@stdlib/math/base/special/floor2","type":"Function","description":"Round a numeric value to the nearest power of two toward negative infinity."},{"alias":"floor10","path":"@stdlib/math/base/special/floor10","type":"Function","description":"Round a numeric value to the nearest power of 10 toward negative infinity."},{"alias":"floorb","path":"@stdlib/math/base/special/floorb","type":"Function","description":"Round a numeric value to the nearest multiple of b^n toward negative infinity."},{"alias":"floorn","path":"@stdlib/math/base/special/floorn","type":"Function","description":"Round a numeric value to the nearest multiple of 10^n toward negative infinity."},{"alias":"floorsd","path":"@stdlib/math/base/special/floorsd","type":"Function","description":"Round a numeric value to the nearest number toward negative infinity with N significant figures."},{"alias":"fresnel","path":"@stdlib/math/base/special/fresnel","type":"Function","description":"Compute the Fresnel integrals S(x) and C(x)."},{"alias":"fresnelc","path":"@stdlib/math/base/special/fresnelc","type":"Function","description":"Compute the Fresnel integral C(x)."},{"alias":"fresnels","path":"@stdlib/math/base/special/fresnels","type":"Function","description":"Compute the Fresnel integral S(x)."},{"alias":"frexp","path":"@stdlib/math/base/special/frexp","type":"Function","description":"Split a double-precision floating-point number into a normalized fraction and an integer power of two."},{"alias":"fromBinaryString","path":"@stdlib/number/float64/base/from-binary-string","type":"Function","description":"Create a double-precision floating-point number from a literal bit representation."},{"alias":"fromBinaryStringf","path":"@stdlib/number/float32/base/from-binary-string","type":"Function","description":"Create a single-precision floating-point number from a literal bit representation."},{"alias":"fromBinaryStringUint8","path":"@stdlib/number/uint8/base/from-binary-string","type":"Function","description":"Create an unsigned 8-bit integer from a literal bit representation."},{"alias":"fromBinaryStringUint16","path":"@stdlib/number/uint16/base/from-binary-string","type":"Function","description":"Create an unsigned 16-bit integer from a literal bit representation."},{"alias":"fromBinaryStringUint32","path":"@stdlib/number/uint32/base/from-binary-string","type":"Function","description":"Create an unsigned 32-bit integer from a literal bit representation."},{"alias":"fromWordf","path":"@stdlib/number/float32/base/from-word","type":"Function","description":"Create a single-precision floating-point number from an unsigned integer corresponding to an IEEE 754 binary representation."},{"alias":"fromWords","path":"@stdlib/number/float64/base/from-words","type":"Function","description":"Create a double-precision floating-point number from a higher order word and a lower order word."},{"alias":"gamma","path":"@stdlib/math/base/special/gamma","type":"Function","description":"Gamma function."},{"alias":"gamma1pm1","path":"@stdlib/math/base/special/gamma1pm1","type":"Function","description":"Compute gamma(x+1) - 1."},{"alias":"gammaDeltaRatio","path":"@stdlib/math/base/special/gamma-delta-ratio","type":"Function","description":"Compute the ratio of two gamma functions."},{"alias":"gammainc","path":"@stdlib/math/base/special/gammainc","type":"Function","description":"Incomplete gamma function."},{"alias":"gammaincinv","path":"@stdlib/math/base/special/gammaincinv","type":"Function","description":"Inverse incomplete gamma function."},{"alias":"gammaLanczosSum","path":"@stdlib/math/base/special/gamma-lanczos-sum","type":"Function","description":"Calculate the Lanczos sum for the approximation of the gamma function."},{"alias":"gammaLanczosSumExpGScaled","path":"@stdlib/math/base/special/gamma-lanczos-sum-expg-scaled","type":"Function","description":"Calculate a scaled Lanczos sum for the approximation of the gamma function."},{"alias":"gammaln","path":"@stdlib/math/base/special/gammaln","type":"Function","description":"Natural logarithm of the gamma function."},{"alias":"gasum","path":"@stdlib/blas/base/gasum","type":"Function","description":"Compute the sum of absolute values (L1 norm)."},{"alias":"gaxpy","path":"@stdlib/blas/base/gaxpy","type":"Function","description":"Multiply x by a constant and add the result to y."},{"alias":"gcd","path":"@stdlib/math/base/special/gcd","type":"Function","description":"Compute the greatest common divisor (gcd)."},{"alias":"gcopy","path":"@stdlib/blas/base/gcopy","type":"Function","description":"Copy values from x into y."},{"alias":"getHighWord","path":"@stdlib/number/float64/base/get-high-word","type":"Function","description":"Return an unsigned 32-bit integer corresponding to the more significant 32 bits of a double-precision floating-point number."},{"alias":"getLowWord","path":"@stdlib/number/float64/base/get-low-word","type":"Function","description":"Return an unsigned 32-bit integer corresponding to the less significant 32 bits of a double-precision floating-point number."},{"alias":"hacovercos","path":"@stdlib/math/base/special/hacovercos","type":"Function","description":"Compute the half-value coversed cosine."},{"alias":"hacoversin","path":"@stdlib/math/base/special/hacoversin","type":"Function","description":"Compute the half-value coversed sine."},{"alias":"havercos","path":"@stdlib/math/base/special/havercos","type":"Function","description":"Compute the half-value versed cosine."},{"alias":"haversin","path":"@stdlib/math/base/special/haversin","type":"Function","description":"Compute the half-value versed sine."},{"alias":"heaviside","path":"@stdlib/math/base/special/heaviside","type":"Function","description":"Evaluate the Heaviside function."},{"alias":"hermitepoly","path":"@stdlib/math/base/tools/hermitepoly","type":"Function","description":"Evaluate a physicist's Hermite polynomial."},{"alias":"hypot","path":"@stdlib/math/base/special/hypot","type":"Function","description":"Compute the hypotenuse avoiding overflow and underflow."},{"alias":"imul","path":"@stdlib/math/base/special/imul","type":"Function","description":"Perform C-like multiplication of two signed 32-bit integers."},{"alias":"imuldw","path":"@stdlib/math/base/special/imuldw","type":"Function","description":"Compute the double word product of two signed 32-bit integers."},{"alias":"int32ToUint32","path":"@stdlib/number/int32/base/to-uint32","type":"Function","description":"Convert a signed 32-bit integer to an unsigned 32-bit integer."},{"alias":"inv","path":"@stdlib/math/base/special/inv","type":"Function","description":"Compute the multiplicative inverse."},{"alias":"isEven","path":"@stdlib/math/base/assert/is-even","type":"Function","description":"Test if a finite numeric value is an even number."},{"alias":"isEvenInt32","path":"@stdlib/math/base/assert/int32-is-even","type":"Function","description":"Test if a 32-bit integer is even."},{"alias":"isFinite","path":"@stdlib/math/base/assert/is-finite","type":"Function","description":"Test if a numeric value is finite."},{"alias":"isInfinite","path":"@stdlib/math/base/assert/is-infinite","type":"Function","description":"Test if a numeric value is infinite."},{"alias":"isInteger","path":"@stdlib/math/base/assert/is-integer","type":"Function","description":"Test if a finite double-precision floating-point number is an integer."},{"alias":"isnan","path":"@stdlib/math/base/assert/is-nan","type":"Function","description":"Test if a numeric value is NaN."},{"alias":"isNegativeInteger","path":"@stdlib/math/base/assert/is-negative-integer","type":"Function","description":"Test if a finite double-precision floating-point number is a negative integer."},{"alias":"isNegativeZero","path":"@stdlib/math/base/assert/is-negative-zero","type":"Function","description":"Test if a numeric value is negative zero."},{"alias":"isNonNegativeInteger","path":"@stdlib/math/base/assert/is-nonnegative-integer","type":"Function","description":"Test if a finite double-precision floating-point number is a nonnegative integer."},{"alias":"isNonPositiveInteger","path":"@stdlib/math/base/assert/is-nonpositive-integer","type":"Function","description":"Test if a finite double-precision floating-point number is a nonpositive integer."},{"alias":"isOdd","path":"@stdlib/math/base/assert/is-odd","type":"Function","description":"Test if a finite numeric value is an odd number."},{"alias":"isOddInt32","path":"@stdlib/math/base/assert/int32-is-odd","type":"Function","description":"Test if a 32-bit integer is odd."},{"alias":"isPositiveInteger","path":"@stdlib/math/base/assert/is-positive-integer","type":"Function","description":"Test if a finite double-precision floating-point number is a positive integer."},{"alias":"isPositiveZero","path":"@stdlib/math/base/assert/is-positive-zero","type":"Function","description":"Test if a numeric value is positive zero."},{"alias":"isPow2Uint32","path":"@stdlib/math/base/assert/uint32-is-pow2","type":"Function","description":"Test whether an unsigned integer is a power of 2."},{"alias":"isProbability","path":"@stdlib/math/base/assert/is-probability","type":"Function","description":"Test if a numeric value is a probability."},{"alias":"isSafeInteger","path":"@stdlib/math/base/assert/is-safe-integer","type":"Function","description":"Test if a finite double-precision floating-point number is a safe integer."},{"alias":"kernelBetainc","path":"@stdlib/math/base/special/kernel-betainc","type":"Function","description":"Incomplete beta function and its first derivative."},{"alias":"kernelBetaincinv","path":"@stdlib/math/base/special/kernel-betaincinv","type":"Function","description":"Inverse incomplete beta function."},{"alias":"kernelCos","path":"@stdlib/math/base/special/kernel-cos","type":"Function","description":"Compute the cosine of a number on `[-π/4, π/4]`."},{"alias":"kernelSin","path":"@stdlib/math/base/special/kernel-sin","type":"Function","description":"Compute the sine of a number on `[-π/4, π/4]`."},{"alias":"kernelTan","path":"@stdlib/math/base/special/kernel-tan","type":"Function","description":"Compute the tangent of a number on `[-π/4, π/4]`."},{"alias":"kroneckerDelta","path":"@stdlib/math/base/special/kronecker-delta","type":"Function","description":"Evaluate the Kronecker delta."},{"alias":"lcm","path":"@stdlib/math/base/special/lcm","type":"Function","description":"Compute the least common multiple (lcm)."},{"alias":"ldexp","path":"@stdlib/math/base/special/ldexp","type":"Function","description":"Multiply a double-precision floating-point number by an integer power of two."},{"alias":"ln","path":"@stdlib/math/base/special/ln","type":"Function","description":"Natural logarithm."},{"alias":"log","path":"@stdlib/math/base/special/log","type":"Function","description":"Base `b` logarithm."},{"alias":"log1mexp","path":"@stdlib/math/base/special/log1mexp","type":"Function","description":"Evaluate the natural logarithm of 1-exp(-|x|)."},{"alias":"log1p","path":"@stdlib/math/base/special/log1p","type":"Function","description":"Evaluate the natural logarithm of 1+x."},{"alias":"log1pexp","path":"@stdlib/math/base/special/log1pexp","type":"Function","description":"Evaluate the natural logarithm of 1+exp(x)."},{"alias":"log2","path":"@stdlib/math/base/special/log2","type":"Function","description":"Binary logarithm (base 2)."},{"alias":"log10","path":"@stdlib/math/base/special/log10","type":"Function","description":"Common logarithm (base ten)."},{"alias":"logaddexp","path":"@stdlib/math/base/special/logaddexp","type":"Function","description":"Compute the natural logarithm of exp(x) + exp(y)"},{"alias":"logit","path":"@stdlib/math/base/special/logit","type":"Function","description":"Logit function."},{"alias":"lucas","path":"@stdlib/math/base/special/lucas","type":"Function","description":"Compute the nth Lucas number."},{"alias":"lucaspoly","path":"@stdlib/math/base/tools/lucaspoly","type":"Function","description":"Evaluate a Lucas polynomial."},{"alias":"max","path":"@stdlib/math/base/special/max","type":"Function","description":"Return the maximum value."},{"alias":"maxabs","path":"@stdlib/math/base/special/maxabs","type":"Function","description":"Return the maximum absolute value."},{"alias":"min","path":"@stdlib/math/base/special/min","type":"Function","description":"Return the minimum value."},{"alias":"minabs","path":"@stdlib/math/base/special/minabs","type":"Function","description":"Return the minimum absolute value."},{"alias":"minmax","path":"@stdlib/math/base/special/minmax","type":"Function","description":"Return the minimum and maximum values."},{"alias":"minmaxabs","path":"@stdlib/math/base/special/minmaxabs","type":"Function","description":"Return the minimum and maximum absolute values."},{"alias":"modf","path":"@stdlib/math/base/special/modf","type":"Function","description":"Decompose a double-precision floating-point number into integral and fractional parts."},{"alias":"ndarray","path":"@stdlib/ndarray/base/ctor","type":"Function","description":"Create a multidimensional array constructor."},{"alias":"ndarrayMemoized","path":"@stdlib/ndarray/base/memoized-ctor","type":"Function","description":"Create a memoized multidimensional array constructor."},{"alias":"negafibonacci","path":"@stdlib/math/base/special/negafibonacci","type":"Function","description":"Compute the nth negaFibonacci number."},{"alias":"negalucas","path":"@stdlib/math/base/special/negalucas","type":"Function","description":"Compute the nth negaLucas number."},{"alias":"nonfibonacci","path":"@stdlib/math/base/special/nonfibonacci","type":"Function","description":"Compute the nth non-Fibonacci number."},{"alias":"normalize","path":"@stdlib/number/float64/base/normalize","type":"Function","description":"Return a normal number `y` and exponent `exp` satisfying `x = y * 2^exp`."},{"alias":"normalizef","path":"@stdlib/number/float32/base/normalize","type":"Function","description":"Return a normal number `y` and exponent `exp` satisfying `x = y * 2^exp`."},{"alias":"normhermitepoly","path":"@stdlib/math/base/tools/normhermitepoly","type":"Function","description":"Evaluate a normalized Hermite polynomial."},{"alias":"pdiff","path":"@stdlib/math/base/special/pdiff","type":"Function","description":"Return the positive difference between `x` and `y`."},{"alias":"polygamma","path":"@stdlib/math/base/special/polygamma","type":"Function","description":"Polygamma function."},{"alias":"pow","path":"@stdlib/math/base/special/pow","type":"Function","description":"Exponential function."},{"alias":"powm1","path":"@stdlib/math/base/special/powm1","type":"Function","description":"Evaluate bˣ - 1."},{"alias":"rad2deg","path":"@stdlib/math/base/special/rad2deg","type":"Function","description":"Convert an angle from radians to degrees."},{"alias":"ramp","path":"@stdlib/math/base/special/ramp","type":"Function","description":"Evaluate the ramp function."},{"alias":"randomArcsine","path":"@stdlib/random/base/arcsine","type":"Function","description":"Arcsine distributed pseudorandom numbers."},{"alias":"randomBernoulli","path":"@stdlib/random/base/bernoulli","type":"Function","description":"Bernoulli distributed pseudorandom numbers."},{"alias":"randomBeta","path":"@stdlib/random/base/beta","type":"Function","description":"Beta distributed pseudorandom numbers."},{"alias":"randomBetaprime","path":"@stdlib/random/base/betaprime","type":"Function","description":"Beta prime distributed pseudorandom numbers."},{"alias":"randomBinomial","path":"@stdlib/random/base/binomial","type":"Function","description":"Binomial distributed pseudorandom numbers."},{"alias":"randomBoxMuller","path":"@stdlib/random/base/box-muller","type":"Function","description":"Normally distributed pseudorandom numbers using the Box-Muller transform."},{"alias":"randomCauchy","path":"@stdlib/random/base/cauchy","type":"Function","description":"Cauchy distributed pseudorandom numbers."},{"alias":"randomChi","path":"@stdlib/random/base/chi","type":"Function","description":"Chi distributed pseudorandom numbers."},{"alias":"randomChisquare","path":"@stdlib/random/base/chisquare","type":"Function","description":"Chi-square distributed pseudorandom numbers."},{"alias":"randomCosine","path":"@stdlib/random/base/cosine","type":"Function","description":"Raised cosine distributed pseudorandom numbers."},{"alias":"randomDiscreteUniform","path":"@stdlib/random/base/discrete-uniform","type":"Function","description":"Discrete uniform distributed pseudorandom numbers."},{"alias":"randomErlang","path":"@stdlib/random/base/erlang","type":"Function","description":"Erlang distributed pseudorandom numbers."},{"alias":"randomExponential","path":"@stdlib/random/base/exponential","type":"Function","description":"Exponentially distributed pseudorandom numbers."},{"alias":"randomF","path":"@stdlib/random/base/f","type":"Function","description":"F distributed pseudorandom numbers."},{"alias":"randomFrechet","path":"@stdlib/random/base/frechet","type":"Function","description":"Fréchet distributed pseudorandom numbers."},{"alias":"randomGamma","path":"@stdlib/random/base/gamma","type":"Function","description":"Gamma distributed pseudorandom numbers."},{"alias":"randomGeometric","path":"@stdlib/random/base/geometric","type":"Function","description":"Geometric distributed pseudorandom numbers."},{"alias":"randomGumbel","path":"@stdlib/random/base/gumbel","type":"Function","description":"Gumbel distributed pseudorandom numbers."},{"alias":"randomHypergeometric","path":"@stdlib/random/base/hypergeometric","type":"Function","description":"Hypergeometric distributed pseudorandom numbers."},{"alias":"randomImprovedZiggurat","path":"@stdlib/random/base/improved-ziggurat","type":"Function","description":"Normally distributed pseudorandom numbers using the improved Ziggurat method."},{"alias":"randomInvgamma","path":"@stdlib/random/base/invgamma","type":"Function","description":"Inverse gamma distributed pseudorandom numbers."},{"alias":"randomKumaraswamy","path":"@stdlib/random/base/kumaraswamy","type":"Function","description":"Kumaraswamy's double bounded distributed pseudorandom numbers."},{"alias":"randomLaplace","path":"@stdlib/random/base/laplace","type":"Function","description":"Laplace (double exponential) distributed pseudorandom numbers."},{"alias":"randomLevy","path":"@stdlib/random/base/levy","type":"Function","description":"Lévy distributed pseudorandom numbers."},{"alias":"randomLogistic","path":"@stdlib/random/base/logistic","type":"Function","description":"Logistic distributed pseudorandom numbers."},{"alias":"randomLognormal","path":"@stdlib/random/base/lognormal","type":"Function","description":"Log-normally distributed pseudorandom numbers."},{"alias":"randomMinstd","path":"@stdlib/random/base/minstd","type":"Function","description":"A linear congruential pseudorandom number generator (LCG) based on Park and Miller."},{"alias":"randomMinstdShuffle","path":"@stdlib/random/base/minstd-shuffle","type":"Function","description":"A linear congruential pseudorandom number generator (LCG) whose output is shuffled."},{"alias":"randomMt19937","path":"@stdlib/random/base/mt19937","type":"Function","description":"A 32-bit Mersenne Twister pseudorandom number generator."},{"alias":"randomNegativeBinomial","path":"@stdlib/random/base/negative-binomial","type":"Function","description":"Negative binomial distributed pseudorandom numbers."},{"alias":"randomNormal","path":"@stdlib/random/base/normal","type":"Function","description":"Normally distributed pseudorandom numbers."},{"alias":"randomPareto1","path":"@stdlib/random/base/pareto-type1","type":"Function","description":"Pareto (Type I) distributed pseudorandom numbers."},{"alias":"randomPoisson","path":"@stdlib/random/base/poisson","type":"Function","description":"Poisson distributed random numbers."},{"alias":"randomRandi","path":"@stdlib/random/base/randi","type":"Function","description":"Pseudorandom numbers having integer values."},{"alias":"randomRandn","path":"@stdlib/random/base/randn","type":"Function","description":"Standard normal pseudorandom numbers."},{"alias":"randomRandu","path":"@stdlib/random/base/randu","type":"Function","description":"Uniformly distributed pseudorandom numbers between 0 and 1."},{"alias":"randomRayleigh","path":"@stdlib/random/base/rayleigh","type":"Function","description":"Rayleigh distributed pseudorandom numbers."},{"alias":"randomT","path":"@stdlib/random/base/t","type":"Function","description":"Student's t-distributed pseudorandom numbers."},{"alias":"randomTriangular","path":"@stdlib/random/base/triangular","type":"Function","description":"Triangular distributed pseudorandom numbers."},{"alias":"randomUniform","path":"@stdlib/random/base/uniform","type":"Function","description":"Uniformly distributed pseudorandom numbers."},{"alias":"randomWeibull","path":"@stdlib/random/base/weibull","type":"Function","description":"Weibull distributed pseudorandom numbers."},{"alias":"reldiff","path":"@stdlib/math/base/utils/relative-difference","type":"Function","description":"Compute the relative difference of two real numbers."},{"alias":"rempio2","path":"@stdlib/math/base/special/rempio2","type":"Function","description":"Compute `x - nπ/2 = r`."},{"alias":"risingFactorial","path":"@stdlib/math/base/special/rising-factorial","type":"Function","description":"Compute the rising factorial."},{"alias":"rotl32","path":"@stdlib/number/uint32/base/rotl","type":"Function","description":"Bitwise rotation to the left."},{"alias":"rotr32","path":"@stdlib/number/uint32/base/rotr","type":"Function","description":"Bitwise rotation to the right."},{"alias":"round","path":"@stdlib/math/base/special/round","type":"Function","description":"Round a numeric value to the nearest integer."},{"alias":"round2","path":"@stdlib/math/base/special/round2","type":"Function","description":"Round a numeric value to the nearest power of two on a linear scale."},{"alias":"round10","path":"@stdlib/math/base/special/round10","type":"Function","description":"Round a numeric value to the nearest power of 10 on a linear scale."},{"alias":"roundb","path":"@stdlib/math/base/special/roundb","type":"Function","description":"Round a numeric value to the nearest multiple of b^n on a linear scale."},{"alias":"roundn","path":"@stdlib/math/base/special/roundn","type":"Function","description":"Round a numeric value to the nearest multiple of 10^n."},{"alias":"roundsd","path":"@stdlib/math/base/special/roundsd","type":"Function","description":"Round a numeric value to the nearest number with N significant figures."},{"alias":"rsqrt","path":"@stdlib/math/base/special/rsqrt","type":"Function"},{"alias":"sasum","path":"@stdlib/blas/base/sasum","type":"Function","description":"Compute the sum of absolute values (L1 norm)."},{"alias":"saxpy","path":"@stdlib/blas/base/saxpy","type":"Function","description":"Multiply x by a constant and add the result to y."},{"alias":"scopy","path":"@stdlib/blas/base/scopy","type":"Function","description":"Copy values from x into y."},{"alias":"setHighWord","path":"@stdlib/number/float64/base/set-high-word","type":"Function","description":"Set the more significant 32 bits of a double-precision floating-point number."},{"alias":"setLowWord","path":"@stdlib/number/float64/base/set-low-word","type":"Function","description":"Set the less significant 32 bits of a double-precision floating-point number."},{"alias":"sici","path":"@stdlib/math/base/special/sici","type":"Function","description":"Sine and cosine integrals."},{"alias":"signbit","path":"@stdlib/number/float64/base/signbit","type":"Function","description":"Return a boolean indicating if the sign bit for a double-precision floating-point number is on (true) or off (false)."},{"alias":"signbitf","path":"@stdlib/number/float32/base/signbit","type":"Function","description":"Return a boolean indicating if the sign bit for a single-precision floating-point number is on (true) or off (false)."},{"alias":"significandf","path":"@stdlib/number/float32/base/significand","type":"Function","description":"Return an integer corresponding to the significand of a single-precision floating-point number."},{"alias":"signum","path":"@stdlib/math/base/special/signum","type":"Function","description":"Signum function."},{"alias":"sin","path":"@stdlib/math/base/special/sin","type":"Function","description":"Compute the sine of a number."},{"alias":"sinc","path":"@stdlib/math/base/special/sinc","type":"Function","description":"Compute the normalized cardinal sine of a number."},{"alias":"sincos","path":"@stdlib/math/base/special/sincos","type":"Function","description":"Simultaneously compute the sine and cosine of a number."},{"alias":"sincospi","path":"@stdlib/math/base/special/sincospi","type":"Function","description":"Simultaneously compute the sine and cosine of a number times π."},{"alias":"sinh","path":"@stdlib/math/base/special/sinh","type":"Function","description":"Compute the hyperbolic sine of a number."},{"alias":"sinpi","path":"@stdlib/math/base/special/sinpi","type":"Function","description":"Compute sin(πx)."},{"alias":"spence","path":"@stdlib/math/base/special/spence","type":"Function","description":"Spence’s function, also known as the dilogarithm."},{"alias":"sqrt","path":"@stdlib/math/base/special/sqrt","type":"Function","description":"Compute the principal square root."},{"alias":"sqrt1pm1","path":"@stdlib/math/base/special/sqrt1pm1","type":"Function","description":"Compute sqrt(1 + x) - 1."},{"alias":"sumSeries","path":"@stdlib/math/base/tools/sum-series","type":"Function","description":"Compute the sum of an infinite series."},{"alias":"tan","path":"@stdlib/math/base/special/tan","type":"Function","description":"Evaluate the tangent of a number."},{"alias":"tanh","path":"@stdlib/math/base/special/tanh","type":"Function","description":"Compute the hyperbolic tangent of a number."},{"alias":"toBinaryString","path":"@stdlib/number/float64/base/to-binary-string","type":"Function","description":"Return a string giving the literal bit representation of a double-precision floating-point number."},{"alias":"toBinaryStringf","path":"@stdlib/number/float32/base/to-binary-string","type":"Function","description":"Return a string giving the literal bit representation of a single-precision floating-point number."},{"alias":"toBinaryStringUint8","path":"@stdlib/number/uint8/base/to-binary-string","type":"Function","description":"Return a string giving the literal bit representation of an unsigned 8-bit integer."},{"alias":"toBinaryStringUint16","path":"@stdlib/number/uint16/base/to-binary-string","type":"Function","description":"Return a string giving the literal bit representation of an unsigned 16-bit integer."},{"alias":"toBinaryStringUint32","path":"@stdlib/number/uint32/base/to-binary-string","type":"Function","description":"Return a string giving the literal bit representation of an unsigned 32-bit integer."},{"alias":"toWordf","path":"@stdlib/number/float32/base/to-word","type":"Function","description":"Return an unsigned 32-bit integer corresponding to the IEEE 754 binary representation of a single-precision floating-point number."},{"alias":"toWords","path":"@stdlib/number/float64/base/to-words","type":"Function","description":"Split a floating-point number into a higher order word and a lower order word."},{"alias":"trigamma","path":"@stdlib/math/base/special/trigamma","type":"Function","description":"Trigamma function."},{"alias":"trunc","path":"@stdlib/math/base/special/trunc","type":"Function","description":"Round a numeric value toward zero."},{"alias":"trunc2","path":"@stdlib/math/base/special/trunc2","type":"Function","description":"Round a numeric value to the nearest power of two toward zero."},{"alias":"trunc10","path":"@stdlib/math/base/special/trunc10","type":"Function","description":"Round a numeric value to the nearest power of 10 toward zero."},{"alias":"truncb","path":"@stdlib/math/base/special/truncb","type":"Function","description":"Round a numeric value to the nearest multiple of b^n toward zero."},{"alias":"truncn","path":"@stdlib/math/base/special/truncn","type":"Function","description":"Round a numeric value to the nearest multiple of 10^n toward zero."},{"alias":"truncsd","path":"@stdlib/math/base/special/truncsd","type":"Function","description":"Round a numeric value to the nearest number toward zero with N significant figures."},{"alias":"uimul","path":"@stdlib/math/base/special/uimul","type":"Function","description":"Perform C-like multiplication of two unsigned 32-bit integers."},{"alias":"uimuldw","path":"@stdlib/math/base/special/uimuldw","type":"Function","description":"Compute the double word product of two unsigned 32-bit integers."},{"alias":"uint32ToInt32","path":"@stdlib/number/uint32/base/to-int32","type":"Function","description":"Convert an unsigned 32-bit integer to a signed 32-bit integer."},{"alias":"vercos","path":"@stdlib/math/base/special/vercos","type":"Function","description":"Compute the versed cosine."},{"alias":"versin","path":"@stdlib/math/base/special/versin","type":"Function","description":"Compute the versed sine."},{"alias":"wrap","path":"@stdlib/math/base/special/wrap","type":"Function","description":"Wrap a value on the half-open interval [min,max)."},{"alias":"xlog1py","path":"@stdlib/math/base/special/xlog1py","type":"Function","description":"Compute `x * ln(y+1)` so that the result is `0` if `x = 0`."},{"alias":"xlogy","path":"@stdlib/math/base/special/xlogy","type":"Function","description":"Compute `x * ln(y)` so that the result is `0` if `x = 0`."},{"alias":"zeta","path":"@stdlib/math/base/special/riemann-zeta","type":"Function","description":"Riemann Zeta function."},{"alias":"BERNDT_CPS_WAGES_1985","path":"@stdlib/datasets/berndt-cps-wages-1985","type":"Function","description":"A random sample of 534 workers from the Current Population Survey (CPS) from 1985."},{"alias":"bifurcate","path":"@stdlib/utils/bifurcate","type":"Function","description":"Split values into two groups."},{"alias":"bifurcateBy","path":"@stdlib/utils/bifurcate-by","type":"Function","description":"Split values into two groups according to a predicate function."},{"alias":"bifurcateByAsync","path":"@stdlib/utils/async/bifurcate-by","type":"Function","description":"Split values into two groups according to a predicate function."},{"alias":"bifurcateIn","path":"@stdlib/utils/bifurcate-in","type":"Function","description":"Split an object's own and inherited property values into two groups according to a predicate function."},{"alias":"bifurcateOwn","path":"@stdlib/utils/bifurcate-own","type":"Function","description":"Split an object's own property values into two groups according to a predicate function."},{"alias":"binomialTest","path":"@stdlib/stats/binomial-test","type":"Function","description":"Exact test for the success probability in a Bernoulli experiment."},{"alias":"Buffer","path":"@stdlib/buffer/ctor","type":"Function","description":"Buffer."},{"alias":"buffer2json","path":"@stdlib/buffer/to-json","type":"Function","description":"Return a JSON representation of a Buffer."},{"alias":"capitalize","path":"@stdlib/string/capitalize","type":"Function","description":"Capitalize the first character in a string."},{"alias":"capitalizeKeys","path":"@stdlib/utils/capitalize-keys","type":"Function","description":"Convert the first letter of each object key to uppercase."},{"alias":"CATALAN","path":"@stdlib/constants/float64/catalan","type":"number","description":"Catalan's constant."},{"alias":"CBRT_EPS","path":"@stdlib/constants/float64/cbrt-eps","type":"number","description":"Cube root of double-precision floating-point epsilon."},{"alias":"chdir","path":"@stdlib/process/chdir","type":"Function","description":"Change the current working directory."},{"alias":"chi2gof","path":"@stdlib/stats/chi2gof","type":"Function","description":"Perform a chi-square goodness-of-fit test."},{"alias":"circarray2iterator","path":"@stdlib/array/to-circular-iterator","type":"Function","description":"Create an iterator which repeatedly iterates over the elements of an array-like object."},{"alias":"circularArrayStream","path":"@stdlib/streams/node/from-circular-array","type":"Function","description":"Create a readable stream from a circular array-like object."},{"alias":"CircularBuffer","path":"@stdlib/utils/circular-buffer","type":"Function","description":"Circular buffer."},{"alias":"CMUDICT","path":"@stdlib/datasets/cmudict","type":"Function","description":"The Carnegie Mellon Pronouncing Dictionary (CMUdict)."},{"alias":"complex","path":"@stdlib/complex/cmplx","type":"Function","description":"Create a complex number."},{"alias":"Complex64","path":"@stdlib/complex/float32","type":"Function","description":"64-bit complex number."},{"alias":"COMPLEX64_NUM_BYTES","path":"@stdlib/constants/complex64/num-bytes","type":"number","description":"Size (in bytes) of a 64-bit complex number."},{"alias":"Complex64Array","path":"@stdlib/array/complex64","type":"Function","description":"Complex64Array."},{"alias":"Complex128","path":"@stdlib/complex/float64","type":"Function","description":"128-bit complex number."},{"alias":"COMPLEX128_NUM_BYTES","path":"@stdlib/constants/complex128/num-bytes","type":"number","description":"Size (in bytes) of a 128-bit complex number."},{"alias":"Complex128Array","path":"@stdlib/array/complex128","type":"Function","description":"Complex128Array."},{"alias":"compose","path":"@stdlib/utils/compose","type":"Function","description":"Function composition."},{"alias":"composeAsync","path":"@stdlib/utils/async/compose","type":"Function","description":"Function composition."},{"alias":"configdir","path":"@stdlib/os/configdir","type":"Function","description":"Return a directory for user-specific configuration files."},{"alias":"conj","path":"@stdlib/complex/conj","type":"Function","description":"Return the complex conjugate of a complex number."},{"alias":"constantFunction","path":"@stdlib/utils/constant-function","type":"Function","description":"Constant function."},{"alias":"constantStream","path":"@stdlib/streams/node/from-constant","type":"Function","description":"Create a readable stream which always streams the same value."},{"alias":"constructorName","path":"@stdlib/utils/constructor-name","type":"Function","description":"Determine the name of a value's constructor."},{"alias":"contains","path":"@stdlib/assert/contains","type":"Function","description":"Test if an array-like value contains a search value."},{"alias":"convertArray","path":"@stdlib/array/convert","type":"Function","description":"Convert an array to an array of a different data type."},{"alias":"convertArraySame","path":"@stdlib/array/convert-same","type":"Function","description":"Convert an array to the same data type as a second input array."},{"alias":"convertPath","path":"@stdlib/utils/convert-path","type":"Function","description":"Convert between POSIX and Windows paths."},{"alias":"copy","path":"@stdlib/utils/copy","type":"Function","description":"Copy or deep clone a value to an arbitrary depth."},{"alias":"copyBuffer","path":"@stdlib/buffer/from-buffer","type":"Function","description":"Copy buffer data to a new Buffer instance."},{"alias":"countBy","path":"@stdlib/utils/count-by","type":"Function","description":"Group values according to an indicator function and return group counts."},{"alias":"countByAsync","path":"@stdlib/utils/async/count-by","type":"Function","description":"Group values according to an indicator function and return group counts."},{"alias":"curry","path":"@stdlib/utils/curry","type":"Function","description":"Transform a function into a sequence of functions each accepting a single argument."},{"alias":"curryRight","path":"@stdlib/utils/curry-right","type":"Function","description":"Transform a function into a sequence of functions each accepting a single argument."},{"alias":"cwd","path":"@stdlib/process/cwd","type":"Function","description":"Return the current working directory."},{"alias":"DALE_CHALL_NEW","path":"@stdlib/datasets/dale-chall-new","type":"Function","description":"A list of familiar American-English words."},{"alias":"datasets","path":"@stdlib/datasets","type":"Function","description":"Standard library datasets."},{"alias":"dayOfQuarter","path":"@stdlib/time/day-of-quarter","type":"Function","description":"Determine the day of the quarter."},{"alias":"dayOfYear","path":"@stdlib/time/day-of-year","type":"Function","description":"Determine the day of the year."},{"alias":"daysInMonth","path":"@stdlib/time/days-in-month","type":"Function","description":"Determine the number of days in a month."},{"alias":"daysInYear","path":"@stdlib/time/days-in-year","type":"Function","description":"Determine the number of days in a year according to the Gregorian calendar."},{"alias":"debugSinkStream","path":"@stdlib/streams/node/debug-sink","type":"Function","description":"Writable stream for debugging stream pipelines."},{"alias":"debugStream","path":"@stdlib/streams/node/debug","type":"Function","description":"Transform stream for debugging stream pipelines."},{"alias":"deepEqual","path":"@stdlib/assert/deep-equal","type":"Function","description":"Test for deep equality between two values."},{"alias":"deepGet","path":"@stdlib/utils/deep-get","type":"Function","description":"Get a nested property value."},{"alias":"deepHasOwnProp","path":"@stdlib/assert/deep-has-own-property","type":"Function","description":"Test whether an object contains a nested key path."},{"alias":"deepHasProp","path":"@stdlib/assert/deep-has-property","type":"Function","description":"Test whether an object contains a nested key path, either own or inherited."},{"alias":"deepPluck","path":"@stdlib/utils/deep-pluck","type":"Function","description":"Extract a nested property value from each element of an object array."},{"alias":"deepSet","path":"@stdlib/utils/deep-set","type":"Function","description":"Set a nested property value."},{"alias":"defineProperties","path":"@stdlib/utils/define-properties","type":"Function","description":"Define (and/or modify) object properties."},{"alias":"defineProperty","path":"@stdlib/utils/define-property","type":"Function","description":"Define (or modify) an object property."},{"alias":"dirname","path":"@stdlib/utils/dirname","type":"Function","description":"Return a directory name."},{"alias":"DoublyLinkedList","path":"@stdlib/utils/doubly-linked-list","type":"Function","description":"Doubly linked list."},{"alias":"doUntil","path":"@stdlib/utils/do-until","type":"Function","description":"Invoke a function until a test condition is true."},{"alias":"doUntilAsync","path":"@stdlib/utils/async/do-until","type":"Function","description":"Invoke a function until a test condition is true."},{"alias":"doUntilEach","path":"@stdlib/utils/do-until-each","type":"Function","description":"Until a test condition is true, invoke a function for each element in a collection."},{"alias":"doUntilEachRight","path":"@stdlib/utils/do-until-each-right","type":"Function","description":"Until a test condition is true, invoke a function for each element in a collection, iterating from right to left."},{"alias":"doWhile","path":"@stdlib/utils/do-while","type":"Function","description":"Invoke a function while a test condition is true."},{"alias":"doWhileAsync","path":"@stdlib/utils/async/do-while","type":"Function","description":"Invoke a function while a test condition is true."},{"alias":"doWhileEach","path":"@stdlib/utils/do-while-each","type":"Function","description":"While a test condition is true, invoke a function for each element in a collection."},{"alias":"doWhileEachRight","path":"@stdlib/utils/do-while-each-right","type":"Function","description":"While a test condition is true, invoke a function for each element in a collection, iterating from right to left."},{"alias":"E","path":"@stdlib/constants/float64/e","type":"number","description":"Euler's number."},{"alias":"emptyStream","path":"@stdlib/streams/node/empty","type":"Function","description":"Create an empty readable stream."},{"alias":"endsWith","path":"@stdlib/string/ends-with","type":"Function","description":"Test if a string ends with the characters of another string."},{"alias":"enumerableProperties","path":"@stdlib/utils/enumerable-properties","type":"Function","description":"Return an array of an object's own enumerable property names and symbols."},{"alias":"enumerablePropertiesIn","path":"@stdlib/utils/enumerable-properties-in","type":"Function","description":"Return an array of an object's own and inherited enumerable property names and symbols."},{"alias":"enumerablePropertySymbols","path":"@stdlib/utils/enumerable-property-symbols","type":"Function","description":"Return an array of an object's own enumerable symbol properties."},{"alias":"enumerablePropertySymbolsIn","path":"@stdlib/utils/enumerable-property-symbols-in","type":"Function","description":"Return an array of an object's own and inherited enumerable symbol properties."},{"alias":"ENV","path":"@stdlib/process/env","type":"Object","description":"Object containing the user environment."},{"alias":"EPS","path":"@stdlib/constants/float64/eps","type":"number","description":"Difference between one and the smallest value greater than one that can be represented as a double-precision floating-point number."},{"alias":"error2json","path":"@stdlib/error/to-json","type":"Function","description":"Return a JSON representation of an error object."},{"alias":"EULERGAMMA","path":"@stdlib/constants/float64/eulergamma","type":"number","description":"The Euler-Mascheroni constant."},{"alias":"every","path":"@stdlib/utils/every","type":"Function","description":"Test whether all elements in a collection are truthy."},{"alias":"everyBy","path":"@stdlib/utils/every-by","type":"Function","description":"Test whether all elements in a collection pass a test implemented by a predicate function."},{"alias":"everyByAsync","path":"@stdlib/utils/async/every-by","type":"Function","description":"Test whether all elements in a collection pass a test implemented by a predicate function."},{"alias":"everyByRight","path":"@stdlib/utils/every-by-right","type":"Function","description":"Test whether all elements in a collection pass a test implemented by a predicate function, iterating from right to left."},{"alias":"everyByRightAsync","path":"@stdlib/utils/async/every-by-right","type":"Function","description":"Test whether all elements in a collection pass a test implemented by a predicate function, iterating from right to left."},{"alias":"evil","path":"@stdlib/utils/eval","type":"Function","description":"Alias for eval global."},{"alias":"exists","path":"@stdlib/fs/exists","type":"Function","description":"Test whether a path exists on the filesystem."},{"alias":"expandContractions","path":"@stdlib/nlp/expand-contractions","type":"Function","description":"Expand contractions."},{"alias":"extname","path":"@stdlib/utils/extname","type":"Function","description":"Return a filename extension."},{"alias":"fastmathAbs","path":"@stdlib/fastmath/special/abs","type":"Function","description":"Compute an absolute value."},{"alias":"fastmathAcosh","path":"@stdlib/fastmath/special/acosh","type":"Function","description":"Compute the hyperbolic arccosine of a number."},{"alias":"fastmathAmpbm","path":"@stdlib/fastmath/special/alpha-max-plus-beta-min","type":"Function","description":"Compute the hypotenuse using the alpha max plus beta min algorithm."},{"alias":"fastmathAsinh","path":"@stdlib/fastmath/special/asinh","type":"Function","description":"Compute the hyperbolic arcsine of a number."},{"alias":"fastmathAtanh","path":"@stdlib/fastmath/special/atanh","type":"Function","description":"Compute the hyperbolic arctangent of a number."},{"alias":"fastmathHypot","path":"@stdlib/fastmath/special/hypot","type":"Function","description":"Compute the hypotenuse."},{"alias":"fastmathLog2Uint32","path":"@stdlib/fastmath/special/uint32-log2","type":"Function","description":"Compute an integer binary logarithm (base two)."},{"alias":"fastmathMax","path":"@stdlib/fastmath/special/max","type":"Function","description":"Return the maximum value."},{"alias":"fastmathMin","path":"@stdlib/fastmath/special/min","type":"Function","description":"Return the minimum value."},{"alias":"fastmathPowint","path":"@stdlib/fastmath/special/pow-int","type":"Function","description":"Exponential function."},{"alias":"fastmathSqrtUint32","path":"@stdlib/fastmath/special/uint32-sqrt","type":"Function","description":"Compute an integer square root."},{"alias":"FEMALE_FIRST_NAMES_EN","path":"@stdlib/datasets/female-first-names-en","type":"Function","description":"A list of common female first names in English speaking countries."},{"alias":"FIFO","path":"@stdlib/utils/fifo","type":"Function","description":"First-in-first-out (FIFO) queue."},{"alias":"find","path":"@stdlib/utils/find","type":"Function","description":"Find elements in an array-like object that satisfy a test condition."},{"alias":"flattenArray","path":"@stdlib/utils/flatten-array","type":"Function","description":"Flatten an array."},{"alias":"flattenObject","path":"@stdlib/utils/flatten-object","type":"Function","description":"Flatten an object."},{"alias":"flignerTest","path":"@stdlib/stats/fligner-test","type":"Function","description":"Fligner-Killeen test for equal variances."},{"alias":"FLOAT16_CBRT_EPS","path":"@stdlib/constants/float16/cbrt-eps","type":"number","description":"Cube root of half-precision floating-point epsilon."},{"alias":"FLOAT16_EPS","path":"@stdlib/constants/float16/eps","type":"number","description":"Difference between one and the smallest value greater than one that can be represented as a half-precision floating-point number."},{"alias":"FLOAT16_EXPONENT_BIAS","path":"@stdlib/constants/float16/exponent-bias","type":"number","description":"The bias of a half-precision floating-point number's exponent."},{"alias":"FLOAT16_MAX","path":"@stdlib/constants/float16/max","type":"number","description":"Maximum half-precision floating-point number."},{"alias":"FLOAT16_MAX_SAFE_INTEGER","path":"@stdlib/constants/float16/max-safe-integer","type":"number","description":"Maximum safe half-precision floating-point integer."},{"alias":"FLOAT16_MIN_SAFE_INTEGER","path":"@stdlib/constants/float16/min-safe-integer","type":"number","description":"Minimum safe half-precision floating-point integer."},{"alias":"FLOAT16_NINF","path":"@stdlib/constants/float16/ninf","type":"number","description":"Half-precision floating-point negative infinity."},{"alias":"FLOAT16_NUM_BYTES","path":"@stdlib/constants/float16/num-bytes","type":"number","description":"Size (in bytes) of a half-precision floating-point number."},{"alias":"FLOAT16_PINF","path":"@stdlib/constants/float16/pinf","type":"number","description":"Half-precision floating-point positive infinity."},{"alias":"FLOAT16_PRECISION","path":"@stdlib/constants/float16/precision","type":"number","description":"Effective number of bits in the significand of a half-precision floating-point number."},{"alias":"FLOAT16_SMALLEST_NORMAL","path":"@stdlib/constants/float16/smallest-normal","type":"number","description":"Smallest positive normalized half-precision floating-point number."},{"alias":"FLOAT16_SMALLEST_SUBNORMAL","path":"@stdlib/constants/float16/smallest-subnormal","type":"number","description":"Smallest positive half-precision floating-point subnormal number."},{"alias":"FLOAT16_SQRT_EPS","path":"@stdlib/constants/float16/sqrt-eps","type":"number","description":"Square root of half-precision floating-point epsilon."},{"alias":"FLOAT32_CBRT_EPS","path":"@stdlib/constants/float32/cbrt-eps","type":"number","description":"Cube root of single-precision floating-point epsilon."},{"alias":"FLOAT32_EPS","path":"@stdlib/constants/float32/eps","type":"number","description":"Difference between one and the smallest value greater than one that can be represented as a single-precision floating-point number."},{"alias":"FLOAT32_EXPONENT_BIAS","path":"@stdlib/constants/float32/exponent-bias","type":"number","description":"The bias of a single-precision floating-point number's exponent."},{"alias":"FLOAT32_MAX","path":"@stdlib/constants/float32/max","type":"number","description":"Maximum single-precision floating-point number."},{"alias":"FLOAT32_MAX_SAFE_INTEGER","path":"@stdlib/constants/float32/max-safe-integer","type":"number","description":"Maximum safe single-precision floating-point integer."},{"alias":"FLOAT32_MIN_SAFE_INTEGER","path":"@stdlib/constants/float32/min-safe-integer","type":"number","description":"Minimum safe single-precision floating-point integer."},{"alias":"FLOAT32_NINF","path":"@stdlib/constants/float32/ninf","type":"number","description":"Single-precision floating-point negative infinity."},{"alias":"FLOAT32_NUM_BYTES","path":"@stdlib/constants/float32/num-bytes","type":"number","description":"Size (in bytes) of a single-precision floating-point number."},{"alias":"FLOAT32_PINF","path":"@stdlib/constants/float32/pinf","type":"number","description":"Single-precision floating-point positive infinity."},{"alias":"FLOAT32_PRECISION","path":"@stdlib/constants/float32/precision","type":"number","description":"Effective number of bits in the significand of a single-precision floating-point number."},{"alias":"FLOAT32_SMALLEST_NORMAL","path":"@stdlib/constants/float32/smallest-normal","type":"number","description":"Smallest positive normalized single-precision floating-point number."},{"alias":"FLOAT32_SMALLEST_SUBNORMAL","path":"@stdlib/constants/float32/smallest-subnormal","type":"number","description":"Smallest positive single-precision floating-point subnormal number."},{"alias":"FLOAT32_SQRT_EPS","path":"@stdlib/constants/float32/sqrt-eps","type":"number","description":"Square root of single-precision floating-point epsilon."},{"alias":"Float32Array","path":"@stdlib/array/float32","type":"Function","description":"Float32Array."},{"alias":"FLOAT64_EXPONENT_BIAS","path":"@stdlib/constants/float64/exponent-bias","type":"number","description":"The bias of a double-precision floating-point number's exponent."},{"alias":"FLOAT64_HIGH_WORD_EXPONENT_MASK","path":"@stdlib/constants/float64/high-word-exponent-mask","type":"number","description":"High word mask for the exponent of a double-precision floating-point number."},{"alias":"FLOAT64_HIGH_WORD_SIGNIFICAND_MASK","path":"@stdlib/constants/float64/high-word-significand-mask","type":"number","description":"High word mask for the significand of a double-precision floating-point number."},{"alias":"FLOAT64_MAX","path":"@stdlib/constants/float64/max","type":"number","description":"Maximum double-precision floating-point number."},{"alias":"FLOAT64_MAX_BASE2_EXPONENT","path":"@stdlib/constants/float64/max-base2-exponent","type":"number","description":"The maximum biased base 2 exponent for a double-precision floating-point number."},{"alias":"FLOAT64_MAX_BASE2_EXPONENT_SUBNORMAL","path":"@stdlib/constants/float64/max-base2-exponent-subnormal","type":"number","description":"The maximum biased base 2 exponent for a subnormal double-precision floating-point number."},{"alias":"FLOAT64_MAX_BASE10_EXPONENT","path":"@stdlib/constants/float64/max-base10-exponent","type":"number","description":"The maximum base 10 exponent for a double-precision floating-point number."},{"alias":"FLOAT64_MAX_BASE10_EXPONENT_SUBNORMAL","path":"@stdlib/constants/float64/max-base10-exponent-subnormal","type":"number","description":"The maximum base 10 exponent for a subnormal double-precision floating-point number."},{"alias":"FLOAT64_MAX_LN","path":"@stdlib/constants/float64/max-ln","type":"number","description":"Natural logarithm of the maximum double-precision floating-point number."},{"alias":"FLOAT64_MAX_SAFE_FIBONACCI","path":"@stdlib/constants/float64/max-safe-fibonacci","type":"number","description":"Maximum safe Fibonacci number when stored in double-precision floating-point format."},{"alias":"FLOAT64_MAX_SAFE_INTEGER","path":"@stdlib/constants/float64/max-safe-integer","type":"number","description":"Maximum safe double-precision floating-point integer."},{"alias":"FLOAT64_MAX_SAFE_LUCAS","path":"@stdlib/constants/float64/max-safe-lucas","type":"number","description":"Maximum safe Lucas number when stored in double-precision floating-point format."},{"alias":"FLOAT64_MAX_SAFE_NTH_FIBONACCI","path":"@stdlib/constants/float64/max-safe-nth-fibonacci","type":"number","description":"Maximum safe nth Fibonacci number when stored in double-precision floating-point format."},{"alias":"FLOAT64_MAX_SAFE_NTH_LUCAS","path":"@stdlib/constants/float64/max-safe-nth-lucas","type":"number","description":"Maximum safe nth Lucas number when stored in double-precision floating-point format."},{"alias":"FLOAT64_MIN_BASE2_EXPONENT","path":"@stdlib/constants/float64/min-base2-exponent","type":"number","description":"The minimum biased base 2 exponent for a normal double-precision floating-point number."},{"alias":"FLOAT64_MIN_BASE2_EXPONENT_SUBNORMAL","path":"@stdlib/constants/float64/min-base2-exponent-subnormal","type":"number","description":"The minimum biased base 2 exponent for a subnormal double-precision floating-point number."},{"alias":"FLOAT64_MIN_BASE10_EXPONENT","path":"@stdlib/constants/float64/min-base10-exponent","type":"number","description":"The minimum base 10 exponent for a normal double-precision floating-point number."},{"alias":"FLOAT64_MIN_BASE10_EXPONENT_SUBNORMAL","path":"@stdlib/constants/float64/min-base10-exponent-subnormal","type":"number","description":"The minimum base 10 exponent for a subnormal double-precision floating-point number."},{"alias":"FLOAT64_MIN_LN","path":"@stdlib/constants/float64/min-ln","type":"number","description":"Natural logarithm of the smallest normalized double-precision floating-point number."},{"alias":"FLOAT64_MIN_SAFE_INTEGER","path":"@stdlib/constants/float64/min-safe-integer","type":"number","description":"Minimum safe double-precision floating-point integer."},{"alias":"FLOAT64_NUM_BYTES","path":"@stdlib/constants/float64/num-bytes","type":"number","description":"Size (in bytes) of a double-precision floating-point number."},{"alias":"FLOAT64_PRECISION","path":"@stdlib/constants/float64/precision","type":"number","description":"Effective number of bits in the significand of a double-precision floating-point number."},{"alias":"FLOAT64_SMALLEST_NORMAL","path":"@stdlib/constants/float64/smallest-normal","type":"number","description":"Smallest positive double-precision floating-point normal number."},{"alias":"FLOAT64_SMALLEST_SUBNORMAL","path":"@stdlib/constants/float64/smallest-subnormal","type":"number","description":"Smallest positive double-precision floating-point number."},{"alias":"Float64Array","path":"@stdlib/array/float64","type":"Function","description":"Float64Array."},{"alias":"forEach","path":"@stdlib/utils/for-each","type":"Function","description":"Invoke a function for each element in a collection."},{"alias":"forEachAsync","path":"@stdlib/utils/async/for-each","type":"Function","description":"Invoke a function once for each element in a collection."},{"alias":"forEachRight","path":"@stdlib/utils/for-each-right","type":"Function","description":"Invoke a function for each element in a collection, iterating from right to left."},{"alias":"forEachRightAsync","path":"@stdlib/utils/async/for-each-right","type":"Function","description":"Invoke a function once for each element in a collection, iterating from right to left."},{"alias":"forIn","path":"@stdlib/utils/for-in","type":"Function","description":"Invoke a function for each own and inherited enumerable property of an object."},{"alias":"forOwn","path":"@stdlib/utils/for-own","type":"Function","description":"Invoke a function for each own enumerable property of an object."},{"alias":"FOURTH_PI","path":"@stdlib/constants/float64/fourth-pi","type":"number","description":"1/4 times π."},{"alias":"FOURTH_ROOT_EPS","path":"@stdlib/constants/float64/fourth-root-eps","type":"number","description":"Fourth root of double-precision floating-point epsilon."},{"alias":"FRB_SF_WAGE_RIGIDITY","path":"@stdlib/datasets/frb-sf-wage-rigidity","type":"Function","description":"Wage rates for U.S. workers that have not changed jobs within the year."},{"alias":"fromCodePoint","path":"@stdlib/string/from-code-point","type":"Function","description":"Create a string from a sequence of Unicode code points."},{"alias":"functionName","path":"@stdlib/utils/function-name","type":"Function","description":"Determine a function's name."},{"alias":"functionSequence","path":"@stdlib/utils/function-sequence","type":"Function","description":"Function sequence."},{"alias":"functionSequenceAsync","path":"@stdlib/utils/async/function-sequence","type":"Function","description":"Function sequence."},{"alias":"GAMMA_LANCZOS_G","path":"@stdlib/constants/float64/gamma-lanczos-g","type":"number","description":"Arbitrary constant `g` to be used in Lanczos approximation functions."},{"alias":"getegid","path":"@stdlib/process/getegid","type":"Function","description":"Return the effective numeric group identity of a calling process."},{"alias":"geteuid","path":"@stdlib/process/geteuid","type":"Function","description":"Return the effective numeric user identity of a calling process."},{"alias":"getgid","path":"@stdlib/process/getgid","type":"Function","description":"Return the numeric group identity of a calling process."},{"alias":"getGlobal","path":"@stdlib/utils/global","type":"Function","description":"Return the global object."},{"alias":"getPrototypeOf","path":"@stdlib/utils/get-prototype-of","type":"Function","description":"Return the prototype of a provided object."},{"alias":"getuid","path":"@stdlib/process/getuid","type":"Function","description":"Return the numeric user identity of a calling process."},{"alias":"GLAISHER","path":"@stdlib/constants/float64/glaisher-kinkelin","type":"number","description":"Glaisher-Kinkelin constant."},{"alias":"group","path":"@stdlib/utils/group","type":"Function","description":"Group values as arrays associated with distinct keys."},{"alias":"groupBy","path":"@stdlib/utils/group-by","type":"Function","description":"Group values according to an indicator function."},{"alias":"groupByAsync","path":"@stdlib/utils/async/group-by","type":"Function","description":"Group values according to an indicator function."},{"alias":"groupIn","path":"@stdlib/utils/group-in","type":"Function","description":"Group an object's own and inherited property values according to an indicator function."},{"alias":"groupOwn","path":"@stdlib/utils/group-own","type":"Function","description":"Group an object's own property values according to an indicator function."},{"alias":"HALF_LN2","path":"@stdlib/constants/float64/half-ln-two","type":"number","description":"One half times the natural logarithm of 2."},{"alias":"HALF_PI","path":"@stdlib/constants/float64/half-pi","type":"number","description":"1/2 times π."},{"alias":"HARRISON_BOSTON_HOUSE_PRICES","path":"@stdlib/datasets/harrison-boston-house-prices","type":"Function","description":"A dataset derived from information collected by the US Census Service concerning housing in Boston, Massachusetts (1978)."},{"alias":"HARRISON_BOSTON_HOUSE_PRICES_CORRECTED","path":"@stdlib/datasets/harrison-boston-house-prices-corrected","type":"Function","description":"A (corrected) dataset derived from information collected by the US Census Service concerning housing in Boston, Massachusetts (1978)."},{"alias":"hasArrayBufferSupport","path":"@stdlib/assert/has-arraybuffer-support","type":"Function","description":"Detect native ArrayBuffer support."},{"alias":"hasAsyncAwaitSupport","path":"@stdlib/assert/has-async-await-support","type":"Function","description":"Detect native async/await support."},{"alias":"hasAsyncIteratorSymbolSupport","path":"@stdlib/assert/has-async-iterator-symbol-support","type":"Function","description":"Detect native Symbol.asyncIterator support."},{"alias":"hasClassSupport","path":"@stdlib/assert/has-class-support","type":"Function","description":"Detect native class support."},{"alias":"hasDefinePropertiesSupport","path":"@stdlib/assert/has-define-properties-support","type":"Function","description":"Detect `Object.defineProperties` support."},{"alias":"hasDefinePropertySupport","path":"@stdlib/assert/has-define-property-support","type":"Function","description":"Detect `Object.defineProperty` support."},{"alias":"hasFloat32ArraySupport","path":"@stdlib/assert/has-float32array-support","type":"Function","description":"Detect native Float32Array support."},{"alias":"hasFloat64ArraySupport","path":"@stdlib/assert/has-float64array-support","type":"Function","description":"Detect native Float64Array support."},{"alias":"hasFunctionNameSupport","path":"@stdlib/assert/has-function-name-support","type":"Function","description":"Detect native function name support."},{"alias":"hasGeneratorSupport","path":"@stdlib/assert/has-generator-support","type":"Function","description":"Detect native generator function support."},{"alias":"hasInt8ArraySupport","path":"@stdlib/assert/has-int8array-support","type":"Function","description":"Detect native Int8Array support."},{"alias":"hasInt16ArraySupport","path":"@stdlib/assert/has-int16array-support","type":"Function","description":"Detect native Int16Array support."},{"alias":"hasInt32ArraySupport","path":"@stdlib/assert/has-int32array-support","type":"Function","description":"Detect native Int32Array support."},{"alias":"hasIteratorSymbolSupport","path":"@stdlib/assert/has-iterator-symbol-support","type":"Function","description":"Detect native Symbol.iterator support."},{"alias":"hasMapSupport","path":"@stdlib/assert/has-map-support","type":"Function","description":"Detect native Map support."},{"alias":"hasNodeBufferSupport","path":"@stdlib/assert/has-node-buffer-support","type":"Function","description":"Detect native Buffer support."},{"alias":"hasOwnProp","path":"@stdlib/assert/has-own-property","type":"Function","description":"Test if an object has a specified property."},{"alias":"hasProp","path":"@stdlib/assert/has-property","type":"Function","description":"Test if an object has a specified property, either own or inherited."},{"alias":"hasProxySupport","path":"@stdlib/assert/has-proxy-support","type":"Function","description":"Detect native Proxy function support."},{"alias":"hasSetSupport","path":"@stdlib/assert/has-set-support","type":"Function","description":"Detect native Set support."},{"alias":"hasSharedArrayBufferSupport","path":"@stdlib/assert/has-sharedarraybuffer-support","type":"Function","description":"Detect native SharedArrayBuffer support."},{"alias":"hasSymbolSupport","path":"@stdlib/assert/has-symbol-support","type":"Function","description":"Detect native Symbol support."},{"alias":"hasToStringTagSupport","path":"@stdlib/assert/has-tostringtag-support","type":"Function","description":"Detect native Symbol.toStringTag support."},{"alias":"hasUint8ArraySupport","path":"@stdlib/assert/has-uint8array-support","type":"Function","description":"Detect native Uint8Array support."},{"alias":"hasUint8ClampedArraySupport","path":"@stdlib/assert/has-uint8clampedarray-support","type":"Function","description":"Detect native Uint8ClampedArray support."},{"alias":"hasUint16ArraySupport","path":"@stdlib/assert/has-uint16array-support","type":"Function","description":"Detect native Uint16Array support."},{"alias":"hasUint32ArraySupport","path":"@stdlib/assert/has-uint32array-support","type":"Function","description":"Detect native Uint32Array support."},{"alias":"hasWeakMapSupport","path":"@stdlib/assert/has-weakmap-support","type":"Function","description":"Detect native WeakMap support."},{"alias":"hasWeakSetSupport","path":"@stdlib/assert/has-weakset-support","type":"Function","description":"Detect native WeakSet support."},{"alias":"hasWebAssemblySupport","path":"@stdlib/assert/has-wasm-support","type":"Function","description":"Detect native WebAssembly support."},{"alias":"HERNDON_VENUS_SEMIDIAMETERS","path":"@stdlib/datasets/herndon-venus-semidiameters","type":"Function","description":"Fifteen observations of the vertical semidiameter of Venus, made by Lieutenant Herndon, with the meridian circle at Washington, in the year 1846."},{"alias":"homedir","path":"@stdlib/os/homedir","type":"Function","description":"Return the current user's home directory."},{"alias":"HOURS_IN_DAY","path":"@stdlib/constants/time/hours-in-day","type":"number","description":"Number of hours in a day."},{"alias":"HOURS_IN_WEEK","path":"@stdlib/constants/time/hours-in-week","type":"number","description":"Number of hours in a week."},{"alias":"hoursInMonth","path":"@stdlib/time/hours-in-month","type":"Function","description":"Determine the number of hours in a month."},{"alias":"hoursInYear","path":"@stdlib/time/hours-in-year","type":"Function","description":"Determine the number of hours in a year according to the Gregorian calendar."},{"alias":"httpServer","path":"@stdlib/net/http-server","type":"Function","description":"HTTP server."},{"alias":"identity","path":"@stdlib/utils/identity-function","type":"Function","description":"Identity function."},{"alias":"ifelse","path":"@stdlib/utils/if-else","type":"Function","description":"If a condition is truthy, return `x`; otherwise, return `y`."},{"alias":"ifelseAsync","path":"@stdlib/utils/async/if-else","type":"Function","description":"If a predicate function returns a truthy value, return `x`; otherwise, return `y`."},{"alias":"ifthen","path":"@stdlib/utils/if-then","type":"Function","description":"If a condition is truthy, invoke `x`; otherwise, invoke `y`."},{"alias":"ifthenAsync","path":"@stdlib/utils/async/if-then","type":"Function","description":"If a predicate function returns a truthy value, invoke `x`; otherwise, invoke `y`."},{"alias":"imag","path":"@stdlib/complex/imag","type":"Function","description":"Return the imaginary component of a complex number."},{"alias":"IMG_ACANTHUS_MOLLIS","path":"@stdlib/datasets/img-acanthus-mollis","type":"Function","description":"Acanthus mollis."},{"alias":"IMG_AIRPLANE_FROM_ABOVE","path":"@stdlib/datasets/img-airplane-from-above","type":"Function","description":"Image of an airplane, viewed from above looking down."},{"alias":"IMG_ALLIUM_OREOPHILUM","path":"@stdlib/datasets/img-allium-oreophilum","type":"Function","description":"Allium oreophilum (pink lily leek)."},{"alias":"IMG_BLACK_CANYON","path":"@stdlib/datasets/img-black-canyon","type":"Function","description":"Image of Black Canyon."},{"alias":"IMG_DUST_BOWL_HOME","path":"@stdlib/datasets/img-dust-bowl-home","type":"Function","description":"Image of an abandoned Dust Bowl home."},{"alias":"IMG_FRENCH_ALPINE_LANDSCAPE","path":"@stdlib/datasets/img-french-alpine-landscape","type":"Function","description":"Image of a French alpine landscape."},{"alias":"IMG_LOCOMOTION_HOUSE_CAT","path":"@stdlib/datasets/img-locomotion-house-cat","type":"Function","description":"Twenty-four views of a house cat."},{"alias":"IMG_LOCOMOTION_NUDE_MALE","path":"@stdlib/datasets/img-locomotion-nude-male","type":"Function","description":"Forty-eight views of a nude male moving in place."},{"alias":"IMG_MARCH_PASTORAL","path":"@stdlib/datasets/img-march-pastoral","type":"Function","description":"Image of sheep in a pastoral setting."},{"alias":"IMG_NAGASAKI_BOATS","path":"@stdlib/datasets/img-nagasaki-boats","type":"Function","description":"Image of boats in a river in Nagasaki."},{"alias":"incrapcorr","path":"@stdlib/stats/incr/apcorr","type":"Function","description":"Compute a sample absolute Pearson product-moment correlation coefficient."},{"alias":"incrcount","path":"@stdlib/stats/incr/count","type":"Function","description":"Compute a count incrementally."},{"alias":"incrcovariance","path":"@stdlib/stats/incr/covariance","type":"Function","description":"Compute an unbiased sample covariance incrementally."},{"alias":"incrcovmat","path":"@stdlib/stats/incr/covmat","type":"Function","description":"Compute an unbiased sample covariance matrix incrementally."},{"alias":"incrcv","path":"@stdlib/stats/incr/cv","type":"Function","description":"Compute the coefficient of variation (CV) incrementally."},{"alias":"increwmean","path":"@stdlib/stats/incr/ewmean","type":"Function","description":"Compute an exponentially weighted mean incrementally."},{"alias":"increwstdev","path":"@stdlib/stats/incr/ewstdev","type":"Function","description":"Compute an exponentially weighted standard deviation incrementally."},{"alias":"increwvariance","path":"@stdlib/stats/incr/ewvariance","type":"Function","description":"Compute an exponentially weighted variance incrementally."},{"alias":"incrgmean","path":"@stdlib/stats/incr/gmean","type":"Function","description":"Compute a geometric mean incrementally."},{"alias":"incrgrubbs","path":"@stdlib/stats/incr/grubbs","type":"Function","description":"Grubbs' test for outliers."},{"alias":"incrhmean","path":"@stdlib/stats/incr/hmean","type":"Function","description":"Compute a harmonic mean incrementally."},{"alias":"incrkmeans","path":"@stdlib/ml/incr/kmeans","type":"Function","description":"Incrementally partition data into `k` clusters."},{"alias":"incrkurtosis","path":"@stdlib/stats/incr/kurtosis","type":"Function","description":"Compute a corrected sample excess kurtosis incrementally."},{"alias":"incrmaape","path":"@stdlib/stats/incr/maape","type":"Function","description":"Compute the mean arctangent absolute percentage error (MAAPE) incrementally."},{"alias":"incrmae","path":"@stdlib/stats/incr/mae","type":"Function","description":"Compute the mean absolute error (MAE) incrementally."},{"alias":"incrmapcorr","path":"@stdlib/stats/incr/mapcorr","type":"Function","description":"Compute a moving sample absolute Pearson product-moment correlation coefficient incrementally."},{"alias":"incrmape","path":"@stdlib/stats/incr/mape","type":"Function","description":"Compute the mean absolute percentage error (MAPE) incrementally."},{"alias":"incrmax","path":"@stdlib/stats/incr/max","type":"Function","description":"Compute a maximum value incrementally."},{"alias":"incrmaxabs","path":"@stdlib/stats/incr/maxabs","type":"Function","description":"Compute a maximum absolute value incrementally."},{"alias":"incrmcovariance","path":"@stdlib/stats/incr/mcovariance","type":"Function","description":"Compute a moving unbiased sample covariance incrementally."},{"alias":"incrmcv","path":"@stdlib/stats/incr/mcv","type":"Function","description":"Compute a moving coefficient of variation (CV) incrementally."},{"alias":"incrmda","path":"@stdlib/stats/incr/mda","type":"Function","description":"Compute the mean directional accuracy (MDA) incrementally."},{"alias":"incrme","path":"@stdlib/stats/incr/me","type":"Function","description":"Compute the mean error (ME) incrementally."},{"alias":"incrmean","path":"@stdlib/stats/incr/mean","type":"Function","description":"Compute an arithmetic mean incrementally."},{"alias":"incrmeanabs","path":"@stdlib/stats/incr/meanabs","type":"Function","description":"Compute an arithmetic mean of absolute values incrementally."},{"alias":"incrmeanabs2","path":"@stdlib/stats/incr/meanabs2","type":"Function","description":"Compute an arithmetic mean of squared absolute values incrementally."},{"alias":"incrmeanstdev","path":"@stdlib/stats/incr/meanstdev","type":"Function","description":"Compute an arithmetic mean and corrected sample standard deviation incrementally."},{"alias":"incrmeanvar","path":"@stdlib/stats/incr/meanvar","type":"Function","description":"Compute an arithmetic mean and unbiased sample variance incrementally."},{"alias":"incrmgmean","path":"@stdlib/stats/incr/mgmean","type":"Function","description":"Compute a moving geometric mean incrementally."},{"alias":"incrmgrubbs","path":"@stdlib/stats/incr/mgrubbs","type":"Function","description":"Moving Grubbs' test for outliers."},{"alias":"incrmhmean","path":"@stdlib/stats/incr/mhmean","type":"Function","description":"Compute a moving harmonic mean incrementally."},{"alias":"incrmidrange","path":"@stdlib/stats/incr/midrange","type":"Function","description":"Compute a mid-range incrementally."},{"alias":"incrmin","path":"@stdlib/stats/incr/min","type":"Function","description":"Compute a minimum value incrementally."},{"alias":"incrminabs","path":"@stdlib/stats/incr/minabs","type":"Function","description":"Compute a minimum absolute value incrementally."},{"alias":"incrminmax","path":"@stdlib/stats/incr/minmax","type":"Function","description":"Compute a minimum and maximum incrementally."},{"alias":"incrminmaxabs","path":"@stdlib/stats/incr/minmaxabs","type":"Function","description":"Compute minimum and maximum absolute values incrementally."},{"alias":"incrmmaape","path":"@stdlib/stats/incr/mmaape","type":"Function","description":"Compute a moving arctangent mean absolute percentage error (MAAPE) incrementally."},{"alias":"incrmmae","path":"@stdlib/stats/incr/mmae","type":"Function","description":"Compute a moving mean absolute error (MAE) incrementally."},{"alias":"incrmmape","path":"@stdlib/stats/incr/mmape","type":"Function","description":"Compute a moving mean absolute percentage error (MAPE) incrementally."},{"alias":"incrmmax","path":"@stdlib/stats/incr/mmax","type":"Function","description":"Compute a moving maximum incrementally."},{"alias":"incrmmaxabs","path":"@stdlib/stats/incr/mmaxabs","type":"Function","description":"Compute a moving maximum absolute value incrementally."},{"alias":"incrmmda","path":"@stdlib/stats/incr/mmda","type":"Function","description":"Compute a moving mean directional accuracy (MDA) incrementally."},{"alias":"incrmme","path":"@stdlib/stats/incr/mme","type":"Function","description":"Compute a moving mean error (ME) incrementally."},{"alias":"incrmmean","path":"@stdlib/stats/incr/mmean","type":"Function","description":"Compute a moving arithmetic mean incrementally."},{"alias":"incrmmeanabs","path":"@stdlib/stats/incr/mmeanabs","type":"Function","description":"Compute a moving arithmetic mean of absolute values incrementally."},{"alias":"incrmmeanabs2","path":"@stdlib/stats/incr/mmeanabs2","type":"Function","description":"Compute a moving arithmetic mean of squared absolute values incrementally."},{"alias":"incrmmeanstdev","path":"@stdlib/stats/incr/mmeanstdev","type":"Function","description":"Compute a moving arithmetic mean and corrected sample standard deviation incrementally."},{"alias":"incrmmeanvar","path":"@stdlib/stats/incr/mmeanvar","type":"Function","description":"Compute a moving arithmetic mean and unbiased sample variance incrementally."},{"alias":"incrmmidrange","path":"@stdlib/stats/incr/mmidrange","type":"Function","description":"Compute a moving mid-range incrementally."},{"alias":"incrmmin","path":"@stdlib/stats/incr/mmin","type":"Function","description":"Compute a moving minimum incrementally."},{"alias":"incrmminabs","path":"@stdlib/stats/incr/mminabs","type":"Function","description":"Compute a moving minimum absolute value incrementally."},{"alias":"incrmminmax","path":"@stdlib/stats/incr/mminmax","type":"Function","description":"Compute a moving minimum and maximum incrementally."},{"alias":"incrmminmaxabs","path":"@stdlib/stats/incr/mminmaxabs","type":"Function","description":"Compute moving minimum and maximum absolute values incrementally."},{"alias":"incrmmpe","path":"@stdlib/stats/incr/mmpe","type":"Function","description":"Compute a moving mean percentage error (MPE) incrementally."},{"alias":"incrmmse","path":"@stdlib/stats/incr/mmse","type":"Function","description":"Compute a moving mean squared error (MSE) incrementally."},{"alias":"incrmpcorr","path":"@stdlib/stats/incr/mpcorr","type":"Function","description":"Compute a moving sample Pearson product-moment correlation coefficient incrementally."},{"alias":"incrmpcorr2","path":"@stdlib/stats/incr/mpcorr2","type":"Function","description":"Compute a moving squared sample Pearson product-moment correlation coefficient incrementally."},{"alias":"incrmpcorrdist","path":"@stdlib/stats/incr/mpcorrdist","type":"Function","description":"Compute a moving sample Pearson product-moment correlation distance incrementally."},{"alias":"incrmpe","path":"@stdlib/stats/incr/mpe","type":"Function","description":"Compute the mean percentage error (MPE) incrementally."},{"alias":"incrmprod","path":"@stdlib/stats/incr/mprod","type":"Function","description":"Compute a moving product incrementally."},{"alias":"incrmrange","path":"@stdlib/stats/incr/mrange","type":"Function","description":"Compute a moving range incrementally."},{"alias":"incrmrmse","path":"@stdlib/stats/incr/mrmse","type":"Function","description":"Compute a moving root mean squared error (RMSE) incrementally."},{"alias":"incrmrss","path":"@stdlib/stats/incr/mrss","type":"Function","description":"Compute a moving residual sum of squares (RSS) incrementally."},{"alias":"incrmse","path":"@stdlib/stats/incr/mse","type":"Function","description":"Compute the mean squared error (MSE) incrementally."},{"alias":"incrmstdev","path":"@stdlib/stats/incr/mstdev","type":"Function","description":"Compute a moving corrected sample standard deviation incrementally."},{"alias":"incrmsum","path":"@stdlib/stats/incr/msum","type":"Function","description":"Compute a moving sum incrementally."},{"alias":"incrmsumabs","path":"@stdlib/stats/incr/msumabs","type":"Function","description":"Compute a moving sum of absolute values incrementally."},{"alias":"incrmsumabs2","path":"@stdlib/stats/incr/msumabs2","type":"Function","description":"Compute a moving sum of squared absolute values incrementally."},{"alias":"incrmsummary","path":"@stdlib/stats/incr/msummary","type":"Function","description":"Compute a moving statistical summary incrementally."},{"alias":"incrmsumprod","path":"@stdlib/stats/incr/msumprod","type":"Function","description":"Compute a moving sum of products incrementally."},{"alias":"incrmvariance","path":"@stdlib/stats/incr/mvariance","type":"Function","description":"Compute a moving unbiased sample variance incrementally."},{"alias":"incrmvmr","path":"@stdlib/stats/incr/mvmr","type":"Function","description":"Compute a moving variance-to-mean ratio (VMR) incrementally."},{"alias":"incrpcorr","path":"@stdlib/stats/incr/pcorr","type":"Function","description":"Compute a sample Pearson product-moment correlation coefficient."},{"alias":"incrpcorr2","path":"@stdlib/stats/incr/pcorr2","type":"Function","description":"Compute a squared sample Pearson product-moment correlation coefficient."},{"alias":"incrpcorrdist","path":"@stdlib/stats/incr/pcorrdist","type":"Function","description":"Compute a sample Pearson product-moment correlation distance."},{"alias":"incrpcorrdistmat","path":"@stdlib/stats/incr/pcorrdistmat","type":"Function","description":"Compute a sample Pearson product-moment correlation distance matrix incrementally."},{"alias":"incrpcorrmat","path":"@stdlib/stats/incr/pcorrmat","type":"Function","description":"Compute a sample Pearson product-moment correlation matrix incrementally."},{"alias":"incrprod","path":"@stdlib/stats/incr/prod","type":"Function","description":"Compute a product incrementally."},{"alias":"incrrange","path":"@stdlib/stats/incr/range","type":"Function","description":"Compute a range incrementally."},{"alias":"incrrmse","path":"@stdlib/stats/incr/rmse","type":"Function","description":"Compute the root mean squared error (RMSE) incrementally."},{"alias":"incrrss","path":"@stdlib/stats/incr/rss","type":"Function","description":"Compute the residual sum of squares (RSS) incrementally."},{"alias":"incrskewness","path":"@stdlib/stats/incr/skewness","type":"Function","description":"Compute a corrected sample skewness incrementally."},{"alias":"incrspace","path":"@stdlib/array/incrspace","type":"Function","description":"Generate a linearly spaced numeric array using a provided increment."},{"alias":"incrstdev","path":"@stdlib/stats/incr/stdev","type":"Function","description":"Compute a corrected sample standard deviation incrementally."},{"alias":"incrsum","path":"@stdlib/stats/incr/sum","type":"Function","description":"Compute a sum incrementally."},{"alias":"incrsumabs","path":"@stdlib/stats/incr/sumabs","type":"Function","description":"Compute a sum of absolute values incrementally."},{"alias":"incrsumabs2","path":"@stdlib/stats/incr/sumabs2","type":"Function","description":"Compute a sum of squared absolute values incrementally."},{"alias":"incrsummary","path":"@stdlib/stats/incr/summary","type":"Function","description":"Compute a statistical summary incrementally."},{"alias":"incrsumprod","path":"@stdlib/stats/incr/sumprod","type":"Function","description":"Compute a sum of products incrementally."},{"alias":"incrvariance","path":"@stdlib/stats/incr/variance","type":"Function","description":"Compute an unbiased sample variance incrementally."},{"alias":"incrvmr","path":"@stdlib/stats/incr/vmr","type":"Function","description":"Compute a variance-to-mean ratio (VMR) incrementally."},{"alias":"ind2sub","path":"@stdlib/ndarray/ind2sub","type":"Function","description":"Convert a linear index to an array of subscripts."},{"alias":"indexOf","path":"@stdlib/utils/index-of","type":"Function","description":"Return the first index at which a given element can be found."},{"alias":"inherit","path":"@stdlib/utils/inherit","type":"Function","description":"Implement prototypical inheritance by replacing the prototype of one constructor with the prototype of another constructor."},{"alias":"inheritedEnumerableProperties","path":"@stdlib/utils/inherited-enumerable-properties","type":"Function","description":"Return an array of an object's inherited enumerable property names and symbols."},{"alias":"inheritedEnumerablePropertySymbols","path":"@stdlib/utils/inherited-enumerable-property-symbols","type":"Function","description":"Return an array of an object's inherited enumerable symbol properties."},{"alias":"inheritedKeys","path":"@stdlib/utils/inherited-keys","type":"Function","description":"Return an array of an object's inherited enumerable property names."},{"alias":"inheritedNonEnumerableProperties","path":"@stdlib/utils/inherited-nonenumerable-properties","type":"Function","description":"Return an array of an object's inherited non-enumerable property names and symbols."},{"alias":"inheritedNonEnumerablePropertyNames","path":"@stdlib/utils/inherited-nonenumerable-property-names","type":"Function","description":"Return an array of an object's inherited non-enumerable property names."},{"alias":"inheritedNonEnumerablePropertySymbols","path":"@stdlib/utils/inherited-nonenumerable-property-symbols","type":"Function","description":"Return an array of an object's inherited non-enumerable symbol properties."},{"alias":"inheritedProperties","path":"@stdlib/utils/inherited-properties","type":"Function","description":"Return an array of an object's inherited property names and symbols."},{"alias":"inheritedPropertyDescriptor","path":"@stdlib/utils/inherited-property-descriptor","type":"Function","description":"Return a property descriptor for an object's inherited property."},{"alias":"inheritedPropertyDescriptors","path":"@stdlib/utils/inherited-property-descriptors","type":"Function","description":"Return an object's inherited property descriptors."},{"alias":"inheritedPropertyNames","path":"@stdlib/utils/inherited-property-names","type":"Function","description":"Return an array of an object's inherited enumerable and non-enumerable property names."},{"alias":"inheritedPropertySymbols","path":"@stdlib/utils/inherited-property-symbols","type":"Function","description":"Return an array of an object's inherited symbol properties."},{"alias":"inheritedWritableProperties","path":"@stdlib/utils/inherited-writable-properties","type":"Function","description":"Return an array of an object's inherited writable property names and symbols."},{"alias":"inheritedWritablePropertyNames","path":"@stdlib/utils/inherited-writable-property-names","type":"Function","description":"Return an array of an object's inherited writable property names."},{"alias":"inheritedWritablePropertySymbols","path":"@stdlib/utils/inherited-writable-property-symbols","type":"Function","description":"Return an array of an object's inherited writable symbol properties."},{"alias":"inmap","path":"@stdlib/utils/inmap","type":"Function","description":"Invoke a function for each element in a collection and update the collection in-place."},{"alias":"inmapAsync","path":"@stdlib/utils/async/inmap","type":"Function","description":"Invoke a function for each element in a collection and update the collection in-place."},{"alias":"inmapRight","path":"@stdlib/utils/inmap-right","type":"Function","description":"Invoke a function for each element in a collection and update the collection in-place, iterating from right to left."},{"alias":"inmapRightAsync","path":"@stdlib/utils/async/inmap-right","type":"Function","description":"Invoke a function for each element in a collection and update the collection in-place, iterating from right to left."},{"alias":"inspectSinkStream","path":"@stdlib/streams/node/inspect-sink","type":"Function","description":"Writable stream for inspecting streamed data."},{"alias":"inspectStream","path":"@stdlib/streams/node/inspect","type":"Function","description":"Transform stream for inspecting streamed data."},{"alias":"instanceOf","path":"@stdlib/assert/instance-of","type":"Function","description":"Test whether a value has in its prototype chain a specified constructor as a prototype property."},{"alias":"INT8_MAX","path":"@stdlib/constants/int8/max","type":"number","description":"Maximum signed 8-bit integer."},{"alias":"INT8_MIN","path":"@stdlib/constants/int8/min","type":"number","description":"Minimum signed 8-bit integer."},{"alias":"INT8_NUM_BYTES","path":"@stdlib/constants/int8/num-bytes","type":"number","description":"Size (in bytes) of an 8-bit signed integer."},{"alias":"Int8Array","path":"@stdlib/array/int8","type":"Function","description":"Int8Array."},{"alias":"INT16_MAX","path":"@stdlib/constants/int16/max","type":"number","description":"Maximum signed 16-bit integer."},{"alias":"INT16_MIN","path":"@stdlib/constants/int16/min","type":"number","description":"Minimum signed 16-bit integer."},{"alias":"INT16_NUM_BYTES","path":"@stdlib/constants/int16/num-bytes","type":"number","description":"Size (in bytes) of a 16-bit signed integer."},{"alias":"Int16Array","path":"@stdlib/array/int16","type":"Function","description":"Int16Array."},{"alias":"INT32_MAX","path":"@stdlib/constants/int32/max","type":"number","description":"Maximum signed 32-bit integer."},{"alias":"INT32_MIN","path":"@stdlib/constants/int32/min","type":"number","description":"Minimum signed 32-bit integer."},{"alias":"INT32_NUM_BYTES","path":"@stdlib/constants/int32/num-bytes","type":"number","description":"Size (in bytes) of a 32-bit signed integer."},{"alias":"Int32Array","path":"@stdlib/array/int32","type":"Function","description":"Int32Array."},{"alias":"IS_BIG_ENDIAN","path":"@stdlib/assert/is-big-endian","type":"boolean","description":"Check if an environment is big endian."},{"alias":"IS_BROWSER","path":"@stdlib/assert/is-browser","type":"boolean","description":"Check if the runtime is a web browser."},{"alias":"IS_DARWIN","path":"@stdlib/assert/is-darwin","type":"boolean","description":"Boolean indicating if the current process is running on Darwin."},{"alias":"IS_ELECTRON","path":"@stdlib/assert/is-electron","type":"boolean","description":"Check if the runtime is Electron."},{"alias":"IS_ELECTRON_MAIN","path":"@stdlib/assert/is-electron-main","type":"boolean","description":"Check if the runtime is the main Electron process."},{"alias":"IS_ELECTRON_RENDERER","path":"@stdlib/assert/is-electron-renderer","type":"boolean","description":"Check if the runtime is the Electron renderer process."},{"alias":"IS_LITTLE_ENDIAN","path":"@stdlib/assert/is-little-endian","type":"boolean","description":"Check if an environment is little endian."},{"alias":"IS_NODE","path":"@stdlib/assert/is-node","type":"boolean","description":"Check if the runtime is Node.js."},{"alias":"IS_WEB_WORKER","path":"@stdlib/assert/is-web-worker","type":"boolean","description":"Check if the runtime is a web worker."},{"alias":"IS_WINDOWS","path":"@stdlib/assert/is-windows","type":"boolean","description":"Boolean indicating if the current process is running on Windows."},{"alias":"isAbsolutePath","path":"@stdlib/assert/is-absolute-path","type":"Function","description":"Test if a value is an absolute path."},{"alias":"isAccessorProperty","path":"@stdlib/assert/is-accessor-property","type":"Function","description":"Test if an object's own property has an accessor descriptor."},{"alias":"isAccessorPropertyIn","path":"@stdlib/assert/is-accessor-property-in","type":"Function","description":"Test if an object's own or inherited property has an accessor descriptor."},{"alias":"isAlphagram","path":"@stdlib/assert/is-alphagram","type":"Function","description":"Test if a value is an alphagram."},{"alias":"isAlphaNumeric","path":"@stdlib/assert/is-alphanumeric","type":"Function","description":"Test whether a string contains only alphanumeric characters."},{"alias":"isAnagram","path":"@stdlib/assert/is-anagram","type":"Function","description":"Test if a value is an anagram."},{"alias":"isArguments","path":"@stdlib/assert/is-arguments","type":"Function","description":"Test if a value is an arguments object."},{"alias":"isArray","path":"@stdlib/assert/is-array","type":"Function","description":"Test if a value is an array."},{"alias":"isArrayArray","path":"@stdlib/assert/is-array-array","type":"Function","description":"Test if a value is an array of arrays."},{"alias":"isArrayBuffer","path":"@stdlib/assert/is-arraybuffer","type":"Function","description":"Test if a value is an ArrayBuffer."},{"alias":"isArrayLength","path":"@stdlib/assert/is-array-length","type":"Function","description":"Test if a value is a valid array length."},{"alias":"isArrayLike","path":"@stdlib/assert/is-array-like","type":"Function","description":"Test if a value is array-like."},{"alias":"isArrayLikeObject","path":"@stdlib/assert/is-array-like-object","type":"Function","description":"Test if a value is an array-like object."},{"alias":"isASCII","path":"@stdlib/assert/is-ascii","type":"Function","description":"Test whether a character belongs to the ASCII character set and whether this is true for all characters in a provided string."},{"alias":"isBetween","path":"@stdlib/assert/is-between","type":"Function","description":"Test if a value is between two values."},{"alias":"isBetweenArray","path":"@stdlib/assert/is-between-array","type":"Function","description":"Test if a value is an array-like object where every element is between two values."},{"alias":"isBinaryString","path":"@stdlib/assert/is-binary-string","type":"Function","description":"Test if a value is a binary string."},{"alias":"isBoolean","path":"@stdlib/assert/is-boolean","type":"Function","description":"Test if a value is a boolean."},{"alias":"isBooleanArray","path":"@stdlib/assert/is-boolean-array","type":"Function","description":"Test if a value is an array-like object of booleans."},{"alias":"isBoxedPrimitive","path":"@stdlib/assert/is-boxed-primitive","type":"Function","description":"Test if a value is a JavaScript boxed primitive."},{"alias":"isBuffer","path":"@stdlib/assert/is-buffer","type":"Function","description":"Test if a value is a Buffer object."},{"alias":"isCapitalized","path":"@stdlib/assert/is-capitalized","type":"Function","description":"Test if a value is a string having an uppercase first character."},{"alias":"isCentrosymmetricMatrix","path":"@stdlib/assert/is-centrosymmetric-matrix","type":"Function","description":"Test if a value is a centrosymmetric matrix."},{"alias":"isCircular","path":"@stdlib/assert/is-circular","type":"Function","description":"Test if an object-like value contains a circular reference."},{"alias":"isCircularArray","path":"@stdlib/assert/is-circular-array","type":"Function","description":"Test if a value is an array containing a circular reference."},{"alias":"isCircularPlainObject","path":"@stdlib/assert/is-circular-plain-object","type":"Function","description":"Test if a value is a plain object containing a circular reference."},{"alias":"isCollection","path":"@stdlib/assert/is-collection","type":"Function","description":"Test if a value is a collection."},{"alias":"isComplex","path":"@stdlib/assert/is-complex","type":"Function","description":"Test if a value is a 64-bit or 128-bit complex number."},{"alias":"isComplex64","path":"@stdlib/assert/is-complex64","type":"Function","description":"Test if a value is a 64-bit complex number."},{"alias":"isComplex64Array","path":"@stdlib/assert/is-complex64array","type":"Function","description":"Test if a value is a Complex64Array."},{"alias":"isComplex128","path":"@stdlib/assert/is-complex128","type":"Function","description":"Test if a value is a 128-bit complex number."},{"alias":"isComplex128Array","path":"@stdlib/assert/is-complex128array","type":"Function","description":"Test if a value is a Complex128Array."},{"alias":"isComplexLike","path":"@stdlib/assert/is-complex-like","type":"Function","description":"Test if a value is a complex number-like object."},{"alias":"isComplexTypedArray","path":"@stdlib/assert/is-complex-typed-array","type":"Function","description":"Test if a value is a complex typed array."},{"alias":"isConfigurableProperty","path":"@stdlib/assert/is-configurable-property","type":"Function","description":"Test if an object's own property is configurable."},{"alias":"isConfigurablePropertyIn","path":"@stdlib/assert/is-configurable-property-in","type":"Function","description":"Test if an object's own or inherited property is configurable."},{"alias":"isDataProperty","path":"@stdlib/assert/is-data-property","type":"Function","description":"Test if an object's own property has a data descriptor."},{"alias":"isDataPropertyIn","path":"@stdlib/assert/is-data-property-in","type":"Function","description":"Test if an object's own or inherited property has a data descriptor."},{"alias":"isDateObject","path":"@stdlib/assert/is-date-object","type":"Function","description":"Test if a value is a Date object."},{"alias":"isDigitString","path":"@stdlib/assert/is-digit-string","type":"Function","description":"Test whether a string contains only numeric digits."},{"alias":"isEmailAddress","path":"@stdlib/assert/is-email-address","type":"Function","description":"Test if a value is an email address."},{"alias":"isEmptyArray","path":"@stdlib/assert/is-empty-array","type":"Function","description":"Test if a value is an empty array."},{"alias":"isEmptyObject","path":"@stdlib/assert/is-empty-object","type":"Function","description":"Test if a value is an empty object."},{"alias":"isEmptyString","path":"@stdlib/assert/is-empty-string","type":"Function","description":"Test if a value is an empty string."},{"alias":"isEnumerableProperty","path":"@stdlib/assert/is-enumerable-property","type":"Function","description":"Test if an object's own property is enumerable."},{"alias":"isEnumerablePropertyIn","path":"@stdlib/assert/is-enumerable-property-in","type":"Function","description":"Test if an object's own or inherited property is enumerable."},{"alias":"isError","path":"@stdlib/assert/is-error","type":"Function","description":"Test if a value is an Error object."},{"alias":"isEvalError","path":"@stdlib/assert/is-eval-error","type":"Function","description":"Test if a value is an EvalError object."},{"alias":"isEven","path":"@stdlib/assert/is-even","type":"Function","description":"Test if a value is an even number."},{"alias":"isFalsy","path":"@stdlib/assert/is-falsy","type":"Function","description":"Test if a value is falsy."},{"alias":"isFalsyArray","path":"@stdlib/assert/is-falsy-array","type":"Function","description":"Test if a value is an array-like object containing only falsy values."},{"alias":"isFinite","path":"@stdlib/assert/is-finite","type":"Function","description":"Test if a value is a finite number."},{"alias":"isFiniteArray","path":"@stdlib/assert/is-finite-array","type":"Function","description":"Test if a value is an array-like object containing only finite numbers."},{"alias":"isFloat32Array","path":"@stdlib/assert/is-float32array","type":"Function","description":"Test if a value is a Float32Array."},{"alias":"isFloat64Array","path":"@stdlib/assert/is-float64array","type":"Function","description":"Test if a value is a Float64Array."},{"alias":"isFunction","path":"@stdlib/assert/is-function","type":"Function","description":"Test if a value is a function."},{"alias":"isFunctionArray","path":"@stdlib/assert/is-function-array","type":"Function","description":"Test if a value is an array-like object containing only functions."},{"alias":"isGeneratorObject","path":"@stdlib/assert/is-generator-object","type":"Function","description":"Test if a value is a generator object."},{"alias":"isGeneratorObjectLike","path":"@stdlib/assert/is-generator-object-like","type":"Function","description":"Test if a value is generator object-like."},{"alias":"isHexString","path":"@stdlib/assert/is-hex-string","type":"Function","description":"Test whether a string contains only hexadecimal digits."},{"alias":"isInfinite","path":"@stdlib/assert/is-infinite","type":"Function","description":"Test if a value is an infinite number."},{"alias":"isInheritedProperty","path":"@stdlib/assert/is-inherited-property","type":"Function","description":"Test if an object has an inherited property."},{"alias":"isInt8Array","path":"@stdlib/assert/is-int8array","type":"Function","description":"Test if a value is an Int8Array."},{"alias":"isInt16Array","path":"@stdlib/assert/is-int16array","type":"Function","description":"Test if a value is an Int16Array."},{"alias":"isInt32Array","path":"@stdlib/assert/is-int32array","type":"Function","description":"Test if a value is an Int32Array."},{"alias":"isInteger","path":"@stdlib/assert/is-integer","type":"Function","description":"Test if a value is a number having an integer value."},{"alias":"isIntegerArray","path":"@stdlib/assert/is-integer-array","type":"Function","description":"Test if a value is an array-like object containing only integers."},{"alias":"isIterableLike","path":"@stdlib/assert/is-iterable-like","type":"Function","description":"Test if a value is iterable-like."},{"alias":"isIteratorLike","path":"@stdlib/assert/is-iterator-like","type":"Function","description":"Test if a value is iterator-like."},{"alias":"isJSON","path":"@stdlib/assert/is-json","type":"Function","description":"Test if a value is a parseable JSON string."},{"alias":"isLeapYear","path":"@stdlib/assert/is-leap-year","type":"Function","description":"Test if a value corresponds to a leap year in the Gregorian calendar."},{"alias":"isLowercase","path":"@stdlib/assert/is-lowercase","type":"Function","description":"Test if a value is a lowercase string."},{"alias":"isMatrixLike","path":"@stdlib/assert/is-matrix-like","type":"Function","description":"Test if a value is a 2-dimensional ndarray-like object."},{"alias":"isMethod","path":"@stdlib/assert/is-method","type":"Function","description":"Test if an object has a specified method name."},{"alias":"isMethodIn","path":"@stdlib/assert/is-method-in","type":"Function","description":"Test if an object has a specified method name, either own or inherited."},{"alias":"isNamedTypedTupleLike","path":"@stdlib/assert/is-named-typed-tuple-like","type":"Function","description":"Test if a value is named typed tuple-like."},{"alias":"isnan","path":"@stdlib/assert/is-nan","type":"Function","description":"Test if a value is NaN."},{"alias":"isNaNArray","path":"@stdlib/assert/is-nan-array","type":"Function","description":"Test if a value is an array-like object containing only NaN values."},{"alias":"isNativeFunction","path":"@stdlib/assert/is-native-function","type":"Function","description":"Test if a value is a native function."},{"alias":"isndarrayLike","path":"@stdlib/assert/is-ndarray-like","type":"Function","description":"Test if a value is ndarray-like."},{"alias":"isNegativeInteger","path":"@stdlib/assert/is-negative-integer","type":"Function","description":"Test if a value is a number having a negative integer value."},{"alias":"isNegativeIntegerArray","path":"@stdlib/assert/is-negative-integer-array","type":"Function","description":"Test if a value is an array-like object containing only negative integers."},{"alias":"isNegativeNumber","path":"@stdlib/assert/is-negative-number","type":"Function","description":"Test if a value is a number having a negative value."},{"alias":"isNegativeNumberArray","path":"@stdlib/assert/is-negative-number-array","type":"Function","description":"Test if a value is an array-like object containing only negative numbers."},{"alias":"isNegativeZero","path":"@stdlib/assert/is-negative-zero","type":"Function","description":"Test if a value is equal to negative zero."},{"alias":"isNodeBuiltin","path":"@stdlib/assert/is-node-builtin","type":"Function","description":"Test whether a string matches a Node.js built-in module name."},{"alias":"isNodeDuplexStreamLike","path":"@stdlib/assert/is-node-duplex-stream-like","type":"Function","description":"Test if a value is Node duplex stream-like."},{"alias":"isNodeReadableStreamLike","path":"@stdlib/assert/is-node-readable-stream-like","type":"Function","description":"Test if a value is Node readable stream-like."},{"alias":"isNodeREPL","path":"@stdlib/assert/is-node-repl","type":"Function","description":"Check if running in a Node.js REPL environment."},{"alias":"isNodeStreamLike","path":"@stdlib/assert/is-node-stream-like","type":"Function","description":"Test if a value is Node stream-like."},{"alias":"isNodeTransformStreamLike","path":"@stdlib/assert/is-node-transform-stream-like","type":"Function","description":"Test if a value is Node transform stream-like."},{"alias":"isNodeWritableStreamLike","path":"@stdlib/assert/is-node-writable-stream-like","type":"Function","description":"Test if a value is Node writable stream-like."},{"alias":"isNonConfigurableProperty","path":"@stdlib/assert/is-nonconfigurable-property","type":"Function","description":"Test if an object's own property is non-configurable."},{"alias":"isNonConfigurablePropertyIn","path":"@stdlib/assert/is-nonconfigurable-property-in","type":"Function","description":"Test if an object's own or inherited property is non-configurable."},{"alias":"isNonEnumerableProperty","path":"@stdlib/assert/is-nonenumerable-property","type":"Function","description":"Test if an object's own property is non-enumerable."},{"alias":"isNonEnumerablePropertyIn","path":"@stdlib/assert/is-nonenumerable-property-in","type":"Function","description":"Test if an object's own or inherited property is non-enumerable."},{"alias":"isNonNegativeInteger","path":"@stdlib/assert/is-nonnegative-integer","type":"Function","description":"Test if a value is a number having a nonnegative integer value."},{"alias":"isNonNegativeIntegerArray","path":"@stdlib/assert/is-nonnegative-integer-array","type":"Function","description":"Test if a value is an array-like object containing only nonnegative integers."},{"alias":"isNonNegativeNumber","path":"@stdlib/assert/is-nonnegative-number","type":"Function","description":"Test if a value is a number having a nonnegative value."},{"alias":"isNonNegativeNumberArray","path":"@stdlib/assert/is-nonnegative-number-array","type":"Function","description":"Test if a value is an array-like object containing only nonnegative numbers."},{"alias":"isNonPositiveInteger","path":"@stdlib/assert/is-nonpositive-integer","type":"Function","description":"Test if a value is a number having a nonpositive integer value."},{"alias":"isNonPositiveIntegerArray","path":"@stdlib/assert/is-nonpositive-integer-array","type":"Function","description":"Test if a value is an array-like object containing only nonpositive integers."},{"alias":"isNonPositiveNumber","path":"@stdlib/assert/is-nonpositive-number","type":"Function","description":"Test if a value is a number having a nonpositive value."},{"alias":"isNonPositiveNumberArray","path":"@stdlib/assert/is-nonpositive-number-array","type":"Function","description":"Test if a value is an array-like object containing only nonpositive numbers."},{"alias":"isNonSymmetricMatrix","path":"@stdlib/assert/is-nonsymmetric-matrix","type":"Function","description":"Test if a value is a non-symmetric matrix."},{"alias":"isNull","path":"@stdlib/assert/is-null","type":"Function","description":"Test if a value is null."},{"alias":"isNullArray","path":"@stdlib/assert/is-null-array","type":"Function","description":"Test if a value is an array-like object containing only null values."},{"alias":"isNumber","path":"@stdlib/assert/is-number","type":"Function","description":"Test if a value is a number."},{"alias":"isNumberArray","path":"@stdlib/assert/is-number-array","type":"Function","description":"Test if a value is an array-like object of numbers."},{"alias":"isNumericArray","path":"@stdlib/assert/is-numeric-array","type":"Function","description":"Test if a value is a numeric array."},{"alias":"isObject","path":"@stdlib/assert/is-object","type":"Function","description":"Test if a value is an object."},{"alias":"isObjectArray","path":"@stdlib/assert/is-object-array","type":"Function","description":"Test if a value is an array-like object containing only objects."},{"alias":"isObjectLike","path":"@stdlib/assert/is-object-like","type":"Function","description":"Test if a value is object-like."},{"alias":"isOdd","path":"@stdlib/assert/is-odd","type":"Function","description":"Test if a value is an odd number."},{"alias":"isoWeeksInYear","path":"@stdlib/time/iso-weeks-in-year","type":"Function","description":"Determine the number of ISO weeks in a year according to the Gregorian calendar."},{"alias":"isPersymmetricMatrix","path":"@stdlib/assert/is-persymmetric-matrix","type":"Function","description":"Test if a value is a persymmetric matrix."},{"alias":"isPlainObject","path":"@stdlib/assert/is-plain-object","type":"Function","description":"Test if a value is a plain object."},{"alias":"isPlainObjectArray","path":"@stdlib/assert/is-plain-object-array","type":"Function","description":"Test if a value is an array-like object containing only plain objects."},{"alias":"isPositiveInteger","path":"@stdlib/assert/is-positive-integer","type":"Function","description":"Test if a value is a number having a positive integer value."},{"alias":"isPositiveIntegerArray","path":"@stdlib/assert/is-positive-integer-array","type":"Function","description":"Test if a value is an array-like object containing only positive integers."},{"alias":"isPositiveNumber","path":"@stdlib/assert/is-positive-number","type":"Function","description":"Test if a value is a number having a positive value."},{"alias":"isPositiveNumberArray","path":"@stdlib/assert/is-positive-number-array","type":"Function","description":"Test if a value is an array-like object containing only positive numbers."},{"alias":"isPositiveZero","path":"@stdlib/assert/is-positive-zero","type":"Function","description":"Test if a value is equal to positive zero."},{"alias":"isPrimitive","path":"@stdlib/assert/is-primitive","type":"Function","description":"Test if a value is a JavaScript primitive."},{"alias":"isPrimitiveArray","path":"@stdlib/assert/is-primitive-array","type":"Function","description":"Test if a value is an array-like object containing only JavaScript primitives."},{"alias":"isPRNGLike","path":"@stdlib/assert/is-prng-like","type":"Function","description":"Test if a value is PRNG-like."},{"alias":"isProbability","path":"@stdlib/assert/is-probability","type":"Function","description":"Test if a value is a probability."},{"alias":"isProbabilityArray","path":"@stdlib/assert/is-probability-array","type":"Function","description":"Test if a value is an array-like object containing only probabilities."},{"alias":"isPrototypeOf","path":"@stdlib/assert/is-prototype-of","type":"Function","description":"Test if an object's prototype chain contains a provided prototype."},{"alias":"isRangeError","path":"@stdlib/assert/is-range-error","type":"Function","description":"Test if a value is a RangeError object."},{"alias":"isReadableProperty","path":"@stdlib/assert/is-readable-property","type":"Function","description":"Test if an object's own property is readable."},{"alias":"isReadablePropertyIn","path":"@stdlib/assert/is-readable-property-in","type":"Function","description":"Test if an object's own or inherited property is readable."},{"alias":"isReadOnlyProperty","path":"@stdlib/assert/is-read-only-property","type":"Function","description":"Test if an object's own property is read-only."},{"alias":"isReadOnlyPropertyIn","path":"@stdlib/assert/is-read-only-property-in","type":"Function","description":"Test if an object's own or inherited property is read-only."},{"alias":"isReadWriteProperty","path":"@stdlib/assert/is-read-write-property","type":"Function","description":"Test if an object's own property is readable and writable."},{"alias":"isReadWritePropertyIn","path":"@stdlib/assert/is-read-write-property-in","type":"Function","description":"Test if an object's own and inherited property is readable and writable."},{"alias":"isReferenceError","path":"@stdlib/assert/is-reference-error","type":"Function","description":"Test if a value is a ReferenceError object."},{"alias":"isRegExp","path":"@stdlib/assert/is-regexp","type":"Function","description":"Test if a value is a regular expression."},{"alias":"isRegExpString","path":"@stdlib/assert/is-regexp-string","type":"Function","description":"Test if a value is a regular expression string."},{"alias":"isRelativePath","path":"@stdlib/assert/is-relative-path","type":"Function","description":"Test if a value is a relative path."},{"alias":"isSafeInteger","path":"@stdlib/assert/is-safe-integer","type":"Function","description":"Test if a value is a number having a safe integer value."},{"alias":"isSafeIntegerArray","path":"@stdlib/assert/is-safe-integer-array","type":"Function","description":"Test if a value is an array-like object containing only safe integers."},{"alias":"isSameValue","path":"@stdlib/assert/is-same-value","type":"Function","description":"Test if two arguments are the same value."},{"alias":"isSameValueZero","path":"@stdlib/assert/is-same-value-zero","type":"Function","description":"Test if two arguments are the same value."},{"alias":"isSharedArrayBuffer","path":"@stdlib/assert/is-sharedarraybuffer","type":"Function","description":"Test if a value is a SharedArrayBuffer."},{"alias":"isSkewCentrosymmetricMatrix","path":"@stdlib/assert/is-skew-centrosymmetric-matrix","type":"Function","description":"Test if a value is a skew-centrosymmetric matrix."},{"alias":"isSkewPersymmetricMatrix","path":"@stdlib/assert/is-skew-persymmetric-matrix","type":"Function","description":"Test if a value is a skew-persymmetric matrix."},{"alias":"isSkewSymmetricMatrix","path":"@stdlib/assert/is-skew-symmetric-matrix","type":"Function","description":"Test if a value is a skew-symmetric matrix."},{"alias":"isSquareMatrix","path":"@stdlib/assert/is-square-matrix","type":"Function","description":"Test if a value is a 2-dimensional ndarray-like object having equal dimensions."},{"alias":"isStrictEqual","path":"@stdlib/assert/is-strict-equal","type":"Function","description":"Test if two arguments are strictly equal."},{"alias":"isString","path":"@stdlib/assert/is-string","type":"Function","description":"Test if a value is a string."},{"alias":"isStringArray","path":"@stdlib/assert/is-string-array","type":"Function","description":"Test if a value is an array of strings."},{"alias":"isSymbol","path":"@stdlib/assert/is-symbol","type":"Function","description":"Test if a value is a symbol."},{"alias":"isSymbolArray","path":"@stdlib/assert/is-symbol-array","type":"Function","description":"Test if a value is an array-like object containing only symbols."},{"alias":"isSymmetricMatrix","path":"@stdlib/assert/is-symmetric-matrix","type":"Function","description":"Test if a value is a symmetric matrix."},{"alias":"isSyntaxError","path":"@stdlib/assert/is-syntax-error","type":"Function","description":"Test if a value is a SyntaxError object."},{"alias":"isTruthy","path":"@stdlib/assert/is-truthy","type":"Function","description":"Test if a value is truthy."},{"alias":"isTruthyArray","path":"@stdlib/assert/is-truthy-array","type":"Function","description":"Test if a value is an array-like object containing only truthy values."},{"alias":"isTypedArray","path":"@stdlib/assert/is-typed-array","type":"Function","description":"Test if a value is a typed array."},{"alias":"isTypedArrayLength","path":"@stdlib/assert/is-typed-array-length","type":"Function","description":"Test if a value is a valid typed array length."},{"alias":"isTypedArrayLike","path":"@stdlib/assert/is-typed-array-like","type":"Function","description":"Test if a value is typed-array-like."},{"alias":"isTypeError","path":"@stdlib/assert/is-type-error","type":"Function","description":"Test if a value is a TypeError object."},{"alias":"isUint8Array","path":"@stdlib/assert/is-uint8array","type":"Function","description":"Test if a value is a Uint8Array."},{"alias":"isUint8ClampedArray","path":"@stdlib/assert/is-uint8clampedarray","type":"Function","description":"Test if a value is a Uint8ClampedArray."},{"alias":"isUint16Array","path":"@stdlib/assert/is-uint16array","type":"Function","description":"Test if a value is a Uint16Array."},{"alias":"isUint32Array","path":"@stdlib/assert/is-uint32array","type":"Function","description":"Test if a value is a Uint32Array."},{"alias":"isUNCPath","path":"@stdlib/assert/is-unc-path","type":"Function","description":"Test if a value is a UNC path."},{"alias":"isUndefined","path":"@stdlib/assert/is-undefined","type":"Function","description":"Test if a value is undefined."},{"alias":"isUndefinedOrNull","path":"@stdlib/assert/is-undefined-or-null","type":"Function","description":"Test if a value is undefined or null."},{"alias":"isUnityProbabilityArray","path":"@stdlib/assert/is-unity-probability-array","type":"Function","description":"Test if a value is an array of probabilities that sum to one."},{"alias":"isUppercase","path":"@stdlib/assert/is-uppercase","type":"Function","description":"Test if a value is an uppercase string."},{"alias":"isURI","path":"@stdlib/assert/is-uri","type":"Function","description":"Test if a value is a URI."},{"alias":"isURIError","path":"@stdlib/assert/is-uri-error","type":"Function","description":"Test if a value is a URIError object."},{"alias":"isVectorLike","path":"@stdlib/assert/is-vector-like","type":"Function","description":"Test if a value is a 1-dimensional ndarray-like object."},{"alias":"isWhitespace","path":"@stdlib/assert/is-whitespace","type":"Function","description":"Test whether a string contains only white space characters."},{"alias":"isWritableProperty","path":"@stdlib/assert/is-writable-property","type":"Function","description":"Test if an object's own property is writable."},{"alias":"isWritablePropertyIn","path":"@stdlib/assert/is-writable-property-in","type":"Function","description":"Test if an object's own or inherited property is writable."},{"alias":"isWriteOnlyProperty","path":"@stdlib/assert/is-write-only-property","type":"Function","description":"Test if an object's own property is write-only."},{"alias":"isWriteOnlyPropertyIn","path":"@stdlib/assert/is-write-only-property-in","type":"Function","description":"Test if an object's own or inherited property is write-only."},{"alias":"iterAny","path":"@stdlib/iter/any","type":"Function","description":"Test whether at least one iterated value is truthy."},{"alias":"iterAnyBy","path":"@stdlib/iter/any-by","type":"Function","description":"Test whether at least one iterated value passes a test implemented by a predicate function."},{"alias":"iterator2array","path":"@stdlib/array/from-iterator","type":"Function","description":"Create (or fill) an array from an iterator."},{"alias":"iterator2arrayview","path":"@stdlib/iter/to-array-view","type":"Function","description":"Fill an array-like object view with values returned from an iterator."},{"alias":"iterator2arrayviewRight","path":"@stdlib/iter/to-array-view-right","type":"Function","description":"Fill an array-like object view from right to left with values returned from an iterator."},{"alias":"iteratorStream","path":"@stdlib/streams/node/from-iterator","type":"Function","description":"Create a readable stream from an iterator."},{"alias":"IteratorSymbol","path":"@stdlib/symbol/iterator","type":"symbol","description":"Symbol iterator."},{"alias":"iterConcat","path":"@stdlib/iter/concat","type":"Function","description":"Create an iterator which iterates over the values of two or more iterators."},{"alias":"iterConstant","path":"@stdlib/iter/constant","type":"Function","description":"Create an iterator which always returns the same value."},{"alias":"iterCounter","path":"@stdlib/iter/counter","type":"Function","description":"Create an iterator which iteratively returns the number of iterated values."},{"alias":"itercugmean","path":"@stdlib/stats/iter/cugmean","type":"Function","description":"Create an iterator which iteratively computes a cumulative geometric mean."},{"alias":"itercuhmean","path":"@stdlib/stats/iter/cuhmean","type":"Function","description":"Create an iterator which iteratively computes a cumulative harmonic mean."},{"alias":"itercumax","path":"@stdlib/stats/iter/cumax","type":"Function","description":"Create an iterator which iteratively computes a cumulative maximum value."},{"alias":"itercumaxabs","path":"@stdlib/stats/iter/cumaxabs","type":"Function","description":"Create an iterator which iteratively computes a cumulative maximum absolute value."},{"alias":"itercumean","path":"@stdlib/stats/iter/cumean","type":"Function","description":"Create an iterator which iteratively computes a cumulative arithmetic mean."},{"alias":"itercumeanabs","path":"@stdlib/stats/iter/cumeanabs","type":"Function","description":"Create an iterator which iteratively computes a cumulative arithmetic mean of absolute values."},{"alias":"itercumeanabs2","path":"@stdlib/stats/iter/cumeanabs2","type":"Function","description":"Create an iterator which iteratively computes a cumulative arithmetic mean of squared absolute values."},{"alias":"itercumidrange","path":"@stdlib/stats/iter/cumidrange","type":"Function","description":"Create an iterator which iteratively computes a cumulative mid-range."},{"alias":"itercumin","path":"@stdlib/stats/iter/cumin","type":"Function","description":"Create an iterator which iteratively computes a cumulative minimum value."},{"alias":"itercuminabs","path":"@stdlib/stats/iter/cuminabs","type":"Function","description":"Create an iterator which iteratively computes a cumulative minimum absolute value."},{"alias":"itercuprod","path":"@stdlib/stats/iter/cuprod","type":"Function","description":"Create an iterator which iteratively computes a cumulative product."},{"alias":"itercurange","path":"@stdlib/stats/iter/curange","type":"Function","description":"Create an iterator which iteratively computes a cumulative range."},{"alias":"itercusum","path":"@stdlib/stats/iter/cusum","type":"Function","description":"Create an iterator which iteratively computes a cumulative sum."},{"alias":"itercusumabs","path":"@stdlib/stats/iter/cusumabs","type":"Function","description":"Create an iterator which iteratively computes a cumulative sum of absolute values."},{"alias":"itercusumabs2","path":"@stdlib/stats/iter/cusumabs2","type":"Function","description":"Create an iterator which iteratively computes a cumulative sum of squared absolute values."},{"alias":"iterDiracComb","path":"@stdlib/simulate/iter/dirac-comb","type":"Function","description":"Create an iterator which generates a Dirac comb."},{"alias":"iterEmpty","path":"@stdlib/iter/empty","type":"Function","description":"Create an empty iterator."},{"alias":"iterEvery","path":"@stdlib/iter/every","type":"Function","description":"Test whether all iterated values are truthy."},{"alias":"iterEveryBy","path":"@stdlib/iter/every-by","type":"Function","description":"Test whether every iterated value passes a test implemented by a predicate function."},{"alias":"iterFill","path":"@stdlib/iter/fill","type":"Function","description":"Create an iterator which replaces all values from a provided iterator from a start index to an end index with a static value."},{"alias":"iterFilter","path":"@stdlib/iter/filter","type":"Function","description":"Create an iterator which filters the values of another iterator according to a predicate function."},{"alias":"iterFilterMap","path":"@stdlib/iter/filter-map","type":"Function","description":"Create an iterator which both filters and maps the values of another iterator."},{"alias":"iterFirst","path":"@stdlib/iter/first","type":"Function","description":"Return the first iterated value."},{"alias":"iterFlow","path":"@stdlib/iter/flow","type":"Function","description":"Create a fluent interface for chaining together iterator methods."},{"alias":"iterForEach","path":"@stdlib/iter/for-each","type":"Function","description":"Create an iterator which invokes a function for each iterated value before returning the iterated value."},{"alias":"iterHead","path":"@stdlib/iter/head","type":"Function","description":"Create an iterator which returns the first `n` values of a provided iterator."},{"alias":"iterIntersection","path":"@stdlib/iter/intersection","type":"Function","description":"Create an iterator which returns the intersection of two or more iterators."},{"alias":"iterIntersectionByHash","path":"@stdlib/iter/intersection-by-hash","type":"Function","description":"Create an iterator which returns the intersection of two or more iterators according to a hash function."},{"alias":"iterLast","path":"@stdlib/iter/last","type":"Function","description":"Consume an entire iterator and return the last iterated value."},{"alias":"iterLength","path":"@stdlib/iter/length","type":"Function","description":"Return an iterator's length."},{"alias":"iterMap","path":"@stdlib/iter/map","type":"Function","description":"Create an iterator which invokes a function for each iterated value."},{"alias":"itermax","path":"@stdlib/stats/iter/max","type":"Function","description":"Compute the maximum value of all iterated values."},{"alias":"itermaxabs","path":"@stdlib/stats/iter/maxabs","type":"Function","description":"Compute the maximum absolute value of all iterated values."},{"alias":"itermean","path":"@stdlib/stats/iter/mean","type":"Function","description":"Compute the arithmetic mean over all iterated values."},{"alias":"itermeanabs","path":"@stdlib/stats/iter/meanabs","type":"Function","description":"Compute the arithmetic mean of absolute values for all iterated values."},{"alias":"itermeanabs2","path":"@stdlib/stats/iter/meanabs2","type":"Function","description":"Compute the arithmetic mean of squared absolute values for all iterated values."},{"alias":"itermidrange","path":"@stdlib/stats/iter/midrange","type":"Function","description":"Compute the mid-range of all iterated values."},{"alias":"itermin","path":"@stdlib/stats/iter/min","type":"Function","description":"Compute the minimum value of all iterated values."},{"alias":"iterminabs","path":"@stdlib/stats/iter/minabs","type":"Function","description":"Compute the minimum absolute value of all iterated values."},{"alias":"itermmax","path":"@stdlib/stats/iter/mmax","type":"Function","description":"Create an iterator which iteratively computes a moving maximum value."},{"alias":"itermmaxabs","path":"@stdlib/stats/iter/mmaxabs","type":"Function","description":"Create an iterator which iteratively computes a moving maximum absolute value."},{"alias":"itermmean","path":"@stdlib/stats/iter/mmean","type":"Function","description":"Create an iterator which iteratively computes a moving arithmetic mean."},{"alias":"itermmeanabs","path":"@stdlib/stats/iter/mmeanabs","type":"Function","description":"Create an iterator which iteratively computes a moving arithmetic mean of absolute values."},{"alias":"itermmeanabs2","path":"@stdlib/stats/iter/mmeanabs2","type":"Function","description":"Create an iterator which iteratively computes a moving arithmetic mean of squared absolute values."},{"alias":"itermmidrange","path":"@stdlib/stats/iter/mmidrange","type":"Function","description":"Create an iterator which iteratively computes a moving mid-range."},{"alias":"itermmin","path":"@stdlib/stats/iter/mmin","type":"Function","description":"Create an iterator which iteratively computes a moving minimum value."},{"alias":"itermminabs","path":"@stdlib/stats/iter/mminabs","type":"Function","description":"Create an iterator which iteratively computes a moving minimum absolute value."},{"alias":"itermprod","path":"@stdlib/stats/iter/mprod","type":"Function","description":"Create an iterator which iteratively computes a moving product."},{"alias":"itermrange","path":"@stdlib/stats/iter/mrange","type":"Function","description":"Create an iterator which iteratively computes a moving range."},{"alias":"itermsum","path":"@stdlib/stats/iter/msum","type":"Function","description":"Create an iterator which iteratively computes a moving sum."},{"alias":"itermsumabs","path":"@stdlib/stats/iter/msumabs","type":"Function","description":"Create an iterator which iteratively computes a moving sum of absolute values."},{"alias":"itermsumabs2","path":"@stdlib/stats/iter/msumabs2","type":"Function","description":"Create an iterator which iteratively computes a moving sum of squared absolute values."},{"alias":"iterNone","path":"@stdlib/iter/none","type":"Function","description":"Test whether all iterated values are falsy."},{"alias":"iterNoneBy","path":"@stdlib/iter/none-by","type":"Function","description":"Test whether every iterated value fails a test implemented by a predicate function."},{"alias":"iterNth","path":"@stdlib/iter/nth","type":"Function","description":"Return the nth iterated value."},{"alias":"iterPipeline","path":"@stdlib/iter/pipeline","type":"Function","description":"Create an iterator pipeline."},{"alias":"iterPop","path":"@stdlib/iter/pop","type":"Function","description":"Create an iterator which skips the last value of a provided iterator."},{"alias":"iterprod","path":"@stdlib/stats/iter/prod","type":"Function","description":"Compute the product of all iterated values."},{"alias":"iterPulseWave","path":"@stdlib/simulate/iter/pulse-wave","type":"Function","description":"Create an iterator which generates a pulse wave."},{"alias":"iterPush","path":"@stdlib/iter/push","type":"Function","description":"Create an iterator which appends additional values to the end of a provided iterator."},{"alias":"iterrange","path":"@stdlib/stats/iter/range","type":"Function","description":"Compute the range of all iterated values."},{"alias":"iterReject","path":"@stdlib/iter/reject","type":"Function","description":"Create an iterator which rejects the values of another iterator according to a predicate function."},{"alias":"iterReplicate","path":"@stdlib/iter/replicate","type":"Function","description":"Create an iterator which replicates each iterated value a specified number of times."},{"alias":"iterReplicateBy","path":"@stdlib/iter/replicate-by","type":"Function","description":"Create an iterator which replicates each iterated value according to a provided function."},{"alias":"iterSawtoothWave","path":"@stdlib/simulate/iter/sawtooth-wave","type":"Function","description":"Create an iterator which generates a sawtooth wave."},{"alias":"iterShift","path":"@stdlib/iter/shift","type":"Function","description":"Create an iterator which skips the first value of a provided iterator."},{"alias":"iterSineWave","path":"@stdlib/simulate/iter/sine-wave","type":"Function","description":"Create an iterator which generates a sine wave."},{"alias":"iterSlice","path":"@stdlib/iter/slice","type":"Function","description":"Create an iterator which returns a subsequence of iterated values from a provided iterator."},{"alias":"iterSome","path":"@stdlib/iter/some","type":"Function","description":"Test whether at least `n` iterated values are truthy."},{"alias":"iterSomeBy","path":"@stdlib/iter/some-by","type":"Function","description":"Test whether at least `n` iterated values pass a test implemented by a predicate function."},{"alias":"iterSquareWave","path":"@stdlib/simulate/iter/square-wave","type":"Function","description":"Create an iterator which generates a square wave."},{"alias":"iterstdev","path":"@stdlib/stats/iter/stdev","type":"Function","description":"Compute the corrected sample standard deviation over all iterated values."},{"alias":"itersum","path":"@stdlib/stats/iter/sum","type":"Function","description":"Compute the sum of all iterated values."},{"alias":"itersumabs","path":"@stdlib/stats/iter/sumabs","type":"Function","description":"Compute the sum of absolute values for all iterated values."},{"alias":"itersumabs2","path":"@stdlib/stats/iter/sumabs2","type":"Function","description":"Compute the sum of squared absolute values for all iterated values."},{"alias":"iterThunk","path":"@stdlib/iter/pipeline-thunk","type":"Function","description":"Create an iterator thunk."},{"alias":"iterTriangleWave","path":"@stdlib/simulate/iter/triangle-wave","type":"Function","description":"Create an iterator which generates a triangle wave."},{"alias":"iterUnion","path":"@stdlib/iter/union","type":"Function","description":"Create an iterator which returns the union of two or more iterators."},{"alias":"iterUnique","path":"@stdlib/iter/unique","type":"Function","description":"Create an iterator which returns unique values."},{"alias":"iterUniqueBy","path":"@stdlib/iter/unique-by","type":"Function","description":"Create an iterator which returns unique values according to a predicate function."},{"alias":"iterUniqueByHash","path":"@stdlib/iter/unique-by-hash","type":"Function","description":"Create an iterator which returns unique values according to a hash function."},{"alias":"iterUnshift","path":"@stdlib/iter/unshift","type":"Function","description":"Create an iterator which prepends values to the beginning of a provided iterator."},{"alias":"itervariance","path":"@stdlib/stats/iter/variance","type":"Function","description":"Compute the unbiased sample variance over all iterated values."},{"alias":"joinStream","path":"@stdlib/streams/node/join","type":"Function","description":"Transform stream which joins streamed data."},{"alias":"kde2d","path":"@stdlib/stats/kde2d","type":"Function","description":"Two-dimensional kernel density estimation."},{"alias":"keyBy","path":"@stdlib/utils/key-by","type":"Function","description":"Convert a collection to an object whose keys are determined by a provided function and whose values are the collection values."},{"alias":"keyByRight","path":"@stdlib/utils/key-by-right","type":"Function","description":"Convert a collection to an object whose keys are determined by a provided function and whose values are the collection values, iterating from right to left."},{"alias":"keysIn","path":"@stdlib/utils/keys-in","type":"Function","description":"Return an array of an object's own and inherited enumerable property names."},{"alias":"kruskalTest","path":"@stdlib/stats/kruskal-test","type":"Function","description":"Compute the Kruskal-Wallis test for equal medians."},{"alias":"kstest","path":"@stdlib/stats/kstest","type":"Function","description":"One-sample Kolmogorov-Smirnov goodness-of-fit test."},{"alias":"lda","path":"@stdlib/nlp/lda","type":"Function","description":"Latent Dirichlet Allocation via collapsed Gibbs sampling."},{"alias":"LinkedList","path":"@stdlib/utils/linked-list","type":"Function","description":"Linked list."},{"alias":"linspace","path":"@stdlib/array/linspace","type":"Function","description":"Generate a linearly spaced numeric array."},{"alias":"LIU_NEGATIVE_OPINION_WORDS_EN","path":"@stdlib/datasets/liu-negative-opinion-words-en","type":"Function","description":"A list of negative opinion words."},{"alias":"LIU_POSITIVE_OPINION_WORDS_EN","path":"@stdlib/datasets/liu-positive-opinion-words-en","type":"Function","description":"A list of positive opinion words."},{"alias":"LN_HALF","path":"@stdlib/constants/float64/ln-half","type":"number","description":"Natural logarithm of 1/2."},{"alias":"LN_PI","path":"@stdlib/constants/float64/ln-pi","type":"number","description":"Natural logarithm of π."},{"alias":"LN_SQRT_TWO_PI","path":"@stdlib/constants/float64/ln-sqrt-two-pi","type":"number","description":"Natural logarithm of the square root of 2π."},{"alias":"LN_TWO_PI","path":"@stdlib/constants/float64/ln-two-pi","type":"number","description":"Natural logarithm of 2π."},{"alias":"LN2","path":"@stdlib/constants/float64/ln-two","type":"number","description":"Natural logarithm of 2."},{"alias":"LN10","path":"@stdlib/constants/float64/ln-ten","type":"number","description":"Natural logarithm of 10."},{"alias":"LOG2E","path":"@stdlib/constants/float64/log2-e","type":"number","description":"Base 2 logarithm of Euler's number."},{"alias":"LOG10E","path":"@stdlib/constants/float64/log10-e","type":"number","description":"Base 10 logarithm of Euler's number."},{"alias":"logspace","path":"@stdlib/math/utils/logspace","type":"Function","description":"Generate a logarithmically spaced numeric array."},{"alias":"lowercase","path":"@stdlib/string/lowercase","type":"Function","description":"Convert a string to lowercase."},{"alias":"lowercaseKeys","path":"@stdlib/utils/lowercase-keys","type":"Function","description":"Convert each object key to lowercase."},{"alias":"lowess","path":"@stdlib/stats/lowess","type":"Function","description":"Locally-weighted polynomial regression via the LOWESS algorithm."},{"alias":"lpad","path":"@stdlib/string/left-pad","type":"Function","description":"Left pad a string."},{"alias":"ltrim","path":"@stdlib/string/left-trim","type":"Function","description":"Trim whitespace characters from the beginning of a string."},{"alias":"MALE_FIRST_NAMES_EN","path":"@stdlib/datasets/male-first-names-en","type":"Function","description":"A list of common male first names in English speaking countries."},{"alias":"mapFun","path":"@stdlib/utils/map-function","type":"Function","description":"Invoke a function n times and return an array of accumulated function return values."},{"alias":"mapFunAsync","path":"@stdlib/utils/async/map-function","type":"Function","description":"Invoke a function n times and return an array of accumulated function return values."},{"alias":"mapKeys","path":"@stdlib/utils/map-keys","type":"Function","description":"Map keys from one object to a new object having the same values."},{"alias":"mapKeysAsync","path":"@stdlib/utils/async/map-keys","type":"Function","description":"Map keys from one object to a new object having the same values."},{"alias":"mapValues","path":"@stdlib/utils/map-values","type":"Function","description":"Map values from one object to a new object having the same keys."},{"alias":"mapValuesAsync","path":"@stdlib/utils/async/map-values","type":"Function","description":"Map values from one object to a new object having the same keys."},{"alias":"MAX_ARRAY_LENGTH","path":"@stdlib/constants/array/max-array-length","type":"number","description":"Maximum length for a generic array."},{"alias":"MAX_TYPED_ARRAY_LENGTH","path":"@stdlib/constants/array/max-typed-array-length","type":"number","description":"Maximum length for a typed array."},{"alias":"memoize","path":"@stdlib/utils/memoize","type":"Function","description":"Memoize a function."},{"alias":"merge","path":"@stdlib/utils/merge","type":"Function","description":"Merge and extend objects."},{"alias":"MILLISECONDS_IN_DAY","path":"@stdlib/constants/time/milliseconds-in-day","type":"number","description":"Number of milliseconds in a day."},{"alias":"MILLISECONDS_IN_HOUR","path":"@stdlib/constants/time/milliseconds-in-hour","type":"number","description":"Number of milliseconds in an hour."},{"alias":"MILLISECONDS_IN_MINUTE","path":"@stdlib/constants/time/milliseconds-in-minute","type":"number","description":"Number of milliseconds in a minute."},{"alias":"MILLISECONDS_IN_SECOND","path":"@stdlib/constants/time/milliseconds-in-second","type":"number","description":"Number of milliseconds in a second."},{"alias":"MILLISECONDS_IN_WEEK","path":"@stdlib/constants/time/milliseconds-in-week","type":"number","description":"Number of milliseconds in a week."},{"alias":"MINARD_NAPOLEONS_MARCH","path":"@stdlib/datasets/minard-napoleons-march","type":"Function","description":"Data for Charles Joseph Minard's cartographic depiction of Napoleon's Russian campaign of 1812."},{"alias":"MINUTES_IN_DAY","path":"@stdlib/constants/time/minutes-in-day","type":"number","description":"Number of minutes in a day."},{"alias":"MINUTES_IN_HOUR","path":"@stdlib/constants/time/minutes-in-hour","type":"number","description":"Number of minutes in an hour."},{"alias":"MINUTES_IN_WEEK","path":"@stdlib/constants/time/minutes-in-week","type":"number","description":"Number of minutes in a week."},{"alias":"minutesInMonth","path":"@stdlib/time/minutes-in-month","type":"Function","description":"Determine the number of minutes in a month."},{"alias":"minutesInYear","path":"@stdlib/time/minutes-in-year","type":"Function","description":"Determine the number of minutes in a year according to the Gregorian calendar."},{"alias":"MOBY_DICK","path":"@stdlib/datasets/moby-dick","type":"Function","description":"The text of Moby Dick by Herman Melville."},{"alias":"MONTH_NAMES_EN","path":"@stdlib/datasets/month-names-en","type":"Function","description":"A list of month names (English)."},{"alias":"MONTHS_IN_YEAR","path":"@stdlib/constants/time/months-in-year","type":"number","description":"Number of months in a year."},{"alias":"moveProperty","path":"@stdlib/utils/move-property","type":"Function","description":"Move a property from one object to another object."},{"alias":"namedtypedtuple","path":"@stdlib/utils/named-typed-tuple","type":"Function","description":"Named typed tuple."},{"alias":"nativeClass","path":"@stdlib/utils/native-class","type":"Function","description":"Determine the specification defined classification of an object."},{"alias":"ndarray","path":"@stdlib/ndarray/ctor","type":"Function","description":"Create a multidimensional array constructor."},{"alias":"ndarrayCastingModes","path":"@stdlib/ndarray/casting-modes","type":"Function","description":"List of ndarray casting modes."},{"alias":"ndarrayDataTypes","path":"@stdlib/ndarray/dtypes","type":"Function","description":"List of ndarray data types."},{"alias":"ndarrayIndexModes","path":"@stdlib/ndarray/index-modes","type":"Function","description":"List of ndarray index modes."},{"alias":"ndarrayMemoized","path":"@stdlib/ndarray/memoized-ctor","type":"Function","description":"Create a memoized multidimensional array constructor."},{"alias":"ndarrayMinDataType","path":"@stdlib/ndarray/min-dtype","type":"Function","description":"Determine the minimum ndarray data type of the closest kind necessary for storing a provided scalar value."},{"alias":"ndarrayNextDataType","path":"@stdlib/ndarray/next-dtype","type":"Function","description":"Return the next larger ndarray data type of the same kind."},{"alias":"ndarrayOrders","path":"@stdlib/ndarray/orders","type":"Function","description":"List of ndarray orders."},{"alias":"ndarrayPromotionRules","path":"@stdlib/ndarray/promotion-rules","type":"Function","description":"Return the ndarray data type with the smallest size and closest kind to which ndarray data types can be safely cast."},{"alias":"ndarraySafeCasts","path":"@stdlib/ndarray/safe-casts","type":"Function","description":"Return a list of ndarray data types to which a provided ndarray data type can be safely cast."},{"alias":"ndarraySameKindCasts","path":"@stdlib/ndarray/same-kind-casts","type":"Function","description":"Return a list of ndarray data types to which a provided ndarray data type can be safely cast or cast within the same kind."},{"alias":"NIGHTINGALES_ROSE","path":"@stdlib/datasets/nightingales-rose","type":"Function","description":"Dataset for Nightingale's famous polar area diagram."},{"alias":"NINF","path":"@stdlib/constants/float64/ninf","type":"number","description":"Double-precision floating-point negative infinity."},{"alias":"NODE_VERSION","path":"@stdlib/process/node-version","type":"string","description":"Node version."},{"alias":"none","path":"@stdlib/utils/none","type":"Function","description":"Test whether all elements in a collection are falsy."},{"alias":"noneBy","path":"@stdlib/utils/none-by","type":"Function","description":"Test whether all elements in a collection fail a test implemented by a predicate function."},{"alias":"noneByAsync","path":"@stdlib/utils/async/none-by","type":"Function","description":"Test whether all elements in a collection fail a test implemented by a predicate function."},{"alias":"noneByRight","path":"@stdlib/utils/none-by-right","type":"Function","description":"Test whether all elements in a collection fail a test implemented by a predicate function, iterating from right to left."},{"alias":"noneByRightAsync","path":"@stdlib/utils/async/none-by-right","type":"Function","description":"Test whether all elements in a collection fail a test implemented by a predicate function, iterating from right to left."},{"alias":"nonEnumerableProperties","path":"@stdlib/utils/nonenumerable-properties","type":"Function","description":"Return an array of an object's own non-enumerable property names and symbols."},{"alias":"nonEnumerablePropertiesIn","path":"@stdlib/utils/nonenumerable-properties-in","type":"Function","description":"Return an array of an object's own and inherited non-enumerable property names and symbols."},{"alias":"nonEnumerablePropertyNames","path":"@stdlib/utils/nonenumerable-property-names","type":"Function","description":"Return an array of an object's own non-enumerable property names."},{"alias":"nonEnumerablePropertyNamesIn","path":"@stdlib/utils/nonenumerable-property-names-in","type":"Function","description":"Return an array of an object's own and inherited non-enumerable property names."},{"alias":"nonEnumerablePropertySymbols","path":"@stdlib/utils/nonenumerable-property-symbols","type":"Function","description":"Return an array of an object's own non-enumerable symbol properties."},{"alias":"nonEnumerablePropertySymbolsIn","path":"@stdlib/utils/nonenumerable-property-symbols-in","type":"Function","description":"Return an array of an object's own and inherited non-enumerable symbol properties."},{"alias":"noop","path":"@stdlib/utils/noop","type":"Function","description":"Function which does nothing."},{"alias":"now","path":"@stdlib/time/now","type":"Function","description":"Time in seconds since the epoch."},{"alias":"NUM_CPUS","path":"@stdlib/os/num-cpus","type":"number","description":"Number of CPUs."},{"alias":"Number","path":"@stdlib/number/ctor","type":"Function","description":"Number constructor."},{"alias":"objectEntries","path":"@stdlib/utils/entries","type":"Function","description":"Return an array of an object's own enumerable property key-value pairs."},{"alias":"objectEntriesIn","path":"@stdlib/utils/entries-in","type":"Function","description":"Return an array of an object's own and inherited enumerable property key-value pairs."},{"alias":"objectFromEntries","path":"@stdlib/utils/from-entries","type":"Function","description":"Create an object from key-value pairs."},{"alias":"objectInverse","path":"@stdlib/utils/object-inverse","type":"Function","description":"Invert an object, such that keys become values and values become keys."},{"alias":"objectInverseBy","path":"@stdlib/utils/object-inverse-by","type":"Function","description":"Invert an object, such that keys become values and values become keys, according to a transform function."},{"alias":"objectKeys","path":"@stdlib/utils/keys","type":"Function","description":"Return an array of an object's own enumerable property names."},{"alias":"objectValues","path":"@stdlib/utils/values","type":"Function","description":"Return an array of an object's own enumerable property values."},{"alias":"objectValuesIn","path":"@stdlib/utils/values-in","type":"Function","description":"Return an array of an object's own and inherited enumerable property values."},{"alias":"omit","path":"@stdlib/utils/omit","type":"Function","description":"Return a partial object copy excluding specified keys."},{"alias":"omitBy","path":"@stdlib/utils/omit-by","type":"Function","description":"Return a partial object copy excluding properties for which a predicate (function) returns a truthy value."},{"alias":"onlineBinaryClassification","path":"@stdlib/ml/online-binary-classification","type":"Function","description":"Online binary classification."},{"alias":"onlineSGDRegression","path":"@stdlib/ml/online-sgd-regression","type":"Function","description":"Online regression via stochastic gradient descent (SGD)."},{"alias":"openURL","path":"@stdlib/utils/open-url","type":"Function","description":"Open a URL."},{"alias":"PACE_BOSTON_HOUSE_PRICES","path":"@stdlib/datasets/pace-boston-house-prices","type":"Function","description":"A (corrected) dataset derived from information collected by the US Census Service concerning housing in Boston, Massachusetts (1978)."},{"alias":"pad","path":"@stdlib/string/pad","type":"Function","description":"Pad a string."},{"alias":"papply","path":"@stdlib/utils/papply","type":"Function","description":"Partially apply function arguments."},{"alias":"papplyRight","path":"@stdlib/utils/papply-right","type":"Function","description":"Partially apply function arguments from the right."},{"alias":"parallel","path":"@stdlib/utils/parallel","type":"Function","description":"Execute scripts in parallel."},{"alias":"parseJSON","path":"@stdlib/utils/parse-json","type":"Function","description":"Parse a string as JSON."},{"alias":"PATH_DELIMITER","path":"@stdlib/constants/string/path-delimiter","type":"string","description":"Platform-specific path delimiter."},{"alias":"PATH_DELIMITER_POSIX","path":"@stdlib/constants/string/path-delimiter-posix","type":"string","description":"POSIX path delimiter."},{"alias":"PATH_DELIMITER_WIN32","path":"@stdlib/constants/string/path-delimiter-win32","type":"string","description":"Windows path delimiter."},{"alias":"PATH_SEP","path":"@stdlib/constants/string/path-sep","type":"string","description":"Platform-specific path segment separator."},{"alias":"PATH_SEP_POSIX","path":"@stdlib/constants/string/path-sep-posix","type":"string","description":"POSIX path segment separator."},{"alias":"PATH_SEP_WIN32","path":"@stdlib/constants/string/path-sep-win32","type":"string","description":"Windows path segment separator."},{"alias":"pcorrtest","path":"@stdlib/stats/pcorrtest","type":"Function","description":"Compute a Pearson product-moment correlation test between paired samples."},{"alias":"percentEncode","path":"@stdlib/string/percent-encode","type":"Function","description":"Percent-encode a UTF-16 encoded string according to RFC 3986."},{"alias":"PHI","path":"@stdlib/constants/float64/phi","type":"number","description":"Golden ratio."},{"alias":"PI","path":"@stdlib/constants/float64/pi","type":"number","description":"π."},{"alias":"PI_SQUARED","path":"@stdlib/constants/float64/pi-squared","type":"number","description":"π²."},{"alias":"pick","path":"@stdlib/utils/pick","type":"Function","description":"Return a partial object copy containing only specified keys."},{"alias":"pickBy","path":"@stdlib/utils/pick-by","type":"Function","description":"Return a partial object copy containing properties for which a predicate (function) returns a truthy value."},{"alias":"PINF","path":"@stdlib/constants/float64/pinf","type":"number","description":"Positive infinity."},{"alias":"PLATFORM","path":"@stdlib/os/platform","type":"string","description":"Platform on which the current process is running."},{"alias":"plot","path":"@stdlib/plot","type":"Function","description":"Standard library plotting."},{"alias":"Plot","path":"@stdlib/plot/ctor","type":"Function","description":"2-dimensional plot constructor."},{"alias":"pluck","path":"@stdlib/utils/pluck","type":"Function","description":"Extract a property value from each element of an object array."},{"alias":"pop","path":"@stdlib/utils/pop","type":"Function","description":"Remove and return the last element of a collection."},{"alias":"prepend","path":"@stdlib/utils/prepend","type":"Function","description":"Add elements from one collection to the beginning of another collection."},{"alias":"properties","path":"@stdlib/utils/properties","type":"Function","description":"Return an array of an object's own enumerable and non-enumerable property names and symbols."},{"alias":"propertiesIn","path":"@stdlib/utils/properties-in","type":"Function","description":"Return an array of an object's own and inherited property names and symbols."},{"alias":"propertyDescriptor","path":"@stdlib/utils/property-descriptor","type":"Function","description":"Return a property descriptor for an object's own property."},{"alias":"propertyDescriptorIn","path":"@stdlib/utils/property-descriptor-in","type":"Function","description":"Return a property descriptor for an object's own or inherited property."},{"alias":"propertyDescriptors","path":"@stdlib/utils/property-descriptors","type":"Function","description":"Return an object's own property descriptors."},{"alias":"propertyDescriptorsIn","path":"@stdlib/utils/property-descriptors-in","type":"Function","description":"Return an object's own and inherited property descriptors."},{"alias":"propertyNames","path":"@stdlib/utils/property-names","type":"Function","description":"Return an array of an object's own enumerable and non-enumerable property names."},{"alias":"propertyNamesIn","path":"@stdlib/utils/property-names-in","type":"Function","description":"Return an array of an object's own and inherited enumerable and non-enumerable property names."},{"alias":"propertySymbols","path":"@stdlib/utils/property-symbols","type":"Function","description":"Return an array of an object's own symbol properties."},{"alias":"propertySymbolsIn","path":"@stdlib/utils/property-symbols-in","type":"Function","description":"Return an array of an object's own and inherited symbol properties."},{"alias":"Proxy","path":"@stdlib/proxy/ctor","type":"Function","description":"Proxy object."},{"alias":"push","path":"@stdlib/utils/push","type":"Function","description":"Add one or more elements to the end of a collection."},{"alias":"quarterOfYear","path":"@stdlib/time/quarter-of-year","type":"Function","description":"Determine the quarter of the year."},{"alias":"randomIteratorsArcsine","path":"@stdlib/random/iter/arcsine","type":"Function","description":"Create an iterator for generating pseudorandom numbers drawn from an arcsine distribution."},{"alias":"randomIteratorsBernoulli","path":"@stdlib/random/iter/bernoulli","type":"Function","description":"Create an iterator for generating pseudorandom numbers drawn from a Bernoulli distribution."},{"alias":"randomIteratorsBeta","path":"@stdlib/random/iter/beta","type":"Function","description":"Create an iterator for generating pseudorandom numbers drawn from a beta distribution."},{"alias":"randomIteratorsBetaprime","path":"@stdlib/random/iter/betaprime","type":"Function","description":"Create an iterator for generating pseudorandom numbers drawn from a beta prime distribution."},{"alias":"randomIteratorsBinomial","path":"@stdlib/random/iter/binomial","type":"Function","description":"Create an iterator for generating pseudorandom numbers drawn from a binomial distribution."},{"alias":"randomIteratorsBoxMuller","path":"@stdlib/random/iter/box-muller","type":"Function","description":"Create an iterator for generating pseudorandom numbers drawn from a standard normal distribution using the Box-Muller transform."},{"alias":"randomIteratorsCauchy","path":"@stdlib/random/iter/cauchy","type":"Function","description":"Create an iterator for generating pseudorandom numbers drawn from a Cauchy distribution."},{"alias":"randomIteratorsChi","path":"@stdlib/random/iter/chi","type":"Function","description":"Create an iterator for generating pseudorandom numbers drawn from a chi distribution."},{"alias":"randomIteratorsChisquare","path":"@stdlib/random/iter/chisquare","type":"Function","description":"Create an iterator for generating pseudorandom numbers drawn from a chi-square distribution."},{"alias":"randomIteratorsCosine","path":"@stdlib/random/iter/cosine","type":"Function","description":"Create an iterator for generating pseudorandom numbers drawn from a raised cosine distribution."},{"alias":"randomIteratorsDiscreteUniform","path":"@stdlib/random/iter/discrete-uniform","type":"Function","description":"Create an iterator for generating pseudorandom numbers drawn from a discrete uniform distribution."},{"alias":"randomIteratorsErlang","path":"@stdlib/random/iter/erlang","type":"Function","description":"Create an iterator for generating pseudorandom numbers drawn from an Erlang distribution."},{"alias":"randomIteratorsExponential","path":"@stdlib/random/iter/exponential","type":"Function","description":"Create an iterator for generating pseudorandom numbers drawn from an exponential distribution."},{"alias":"randomIteratorsF","path":"@stdlib/random/iter/f","type":"Function","description":"Create an iterator for generating pseudorandom numbers drawn from an F distribution."},{"alias":"randomIteratorsFrechet","path":"@stdlib/random/iter/frechet","type":"Function","description":"Create an iterator for generating pseudorandom numbers drawn from a Fréchet distribution."},{"alias":"randomIteratorsGamma","path":"@stdlib/random/iter/gamma","type":"Function","description":"Create an iterator for generating pseudorandom numbers drawn from a gamma distribution."},{"alias":"randomIteratorsGeometric","path":"@stdlib/random/iter/geometric","type":"Function","description":"Create an iterator for generating pseudorandom numbers drawn from a geometric distribution."},{"alias":"randomIteratorsGumbel","path":"@stdlib/random/iter/gumbel","type":"Function","description":"Create an iterator for generating pseudorandom numbers drawn from a Gumbel distribution."},{"alias":"randomIteratorsHypergeometric","path":"@stdlib/random/iter/hypergeometric","type":"Function","description":"Create an iterator for generating pseudorandom numbers drawn from a hypergeometric distribution."},{"alias":"randomIteratorsImprovedZiggurat","path":"@stdlib/random/iter/improved-ziggurat","type":"Function","description":"Create an iterator for generating pseudorandom numbers drawn from a standard normal distribution using the Improved Ziggurat algorithm."},{"alias":"randomIteratorsInvgamma","path":"@stdlib/random/iter/invgamma","type":"Function","description":"Create an iterator for generating pseudorandom numbers drawn from an inverse gamma distribution."},{"alias":"randomIteratorsKumaraswamy","path":"@stdlib/random/iter/kumaraswamy","type":"Function","description":"Create an iterator for generating pseudorandom numbers drawn from Kumaraswamy's double bounded distribution."},{"alias":"randomIteratorsLaplace","path":"@stdlib/random/iter/laplace","type":"Function","description":"Create an iterator for generating pseudorandom numbers drawn from a Laplace distribution."},{"alias":"randomIteratorsLevy","path":"@stdlib/random/iter/levy","type":"Function","description":"Create an iterator for generating pseudorandom numbers drawn from a Lévy distribution."},{"alias":"randomIteratorsLogistic","path":"@stdlib/random/iter/logistic","type":"Function","description":"Create an iterator for generating pseudorandom numbers drawn from a logistic distribution."},{"alias":"randomIteratorsLognormal","path":"@stdlib/random/iter/lognormal","type":"Function","description":"Create an iterator for generating pseudorandom numbers drawn from a lognormal distribution."},{"alias":"randomIteratorsMinstd","path":"@stdlib/random/iter/minstd","type":"Function","description":"Create an iterator for a linear congruential pseudorandom number generator (LCG) based on Park and Miller."},{"alias":"randomIteratorsMinstdShuffle","path":"@stdlib/random/iter/minstd-shuffle","type":"Function","description":"Create an iterator for a linear congruential pseudorandom number generator (LCG) whose output is shuffled."},{"alias":"randomIteratorsMt19937","path":"@stdlib/random/iter/mt19937","type":"Function","description":"Create an iterator for a 32-bit Mersenne Twister pseudorandom number generator."},{"alias":"randomIteratorsNegativeBinomial","path":"@stdlib/random/iter/negative-binomial","type":"Function","description":"Create an iterator for generating pseudorandom numbers drawn from a negative binomial distribution."},{"alias":"randomIteratorsNormal","path":"@stdlib/random/iter/normal","type":"Function","description":"Create an iterator for generating pseudorandom numbers drawn from a normal distribution."},{"alias":"randomIteratorsPareto1","path":"@stdlib/random/iter/pareto-type1","type":"Function","description":"Create an iterator for generating pseudorandom numbers drawn from a Pareto (Type I) distribution."},{"alias":"randomIteratorsPoisson","path":"@stdlib/random/iter/poisson","type":"Function","description":"Create an iterator for generating pseudorandom numbers drawn from a Poisson distribution."},{"alias":"randomIteratorsRandi","path":"@stdlib/random/iter/randi","type":"Function","description":"Create an iterator for generating pseudorandom numbers having integer values."},{"alias":"randomIteratorsRandn","path":"@stdlib/random/iter/randn","type":"Function","description":"Create an iterator for generating pseudorandom numbers drawn from a standard normal distribution."},{"alias":"randomIteratorsRandu","path":"@stdlib/random/iter/randu","type":"Function","description":"Create an iterator for generating uniformly distributed pseudorandom numbers between 0 and 1."},{"alias":"randomIteratorsRayleigh","path":"@stdlib/random/iter/rayleigh","type":"Function","description":"Create an iterator for generating pseudorandom numbers drawn from a Rayleigh distribution."},{"alias":"randomIteratorsT","path":"@stdlib/random/iter/t","type":"Function","description":"Create an iterator for generating pseudorandom numbers drawn from a Student's t distribution."},{"alias":"randomIteratorsTriangular","path":"@stdlib/random/iter/triangular","type":"Function","description":"Create an iterator for generating pseudorandom numbers drawn from a triangular distribution."},{"alias":"randomIteratorsUniform","path":"@stdlib/random/iter/uniform","type":"Function","description":"Create an iterator for generating pseudorandom numbers drawn from a continuous uniform distribution."},{"alias":"randomIteratorsWeibull","path":"@stdlib/random/iter/weibull","type":"Function","description":"Create an iterator for generating pseudorandom numbers drawn from a Weibull distribution."},{"alias":"randomStreamsArcsine","path":"@stdlib/random/streams/arcsine","type":"Function","description":"Create a readable stream for generating pseudorandom numbers drawn from an arcsine distribution."},{"alias":"randomStreamsBernoulli","path":"@stdlib/random/streams/bernoulli","type":"Function","description":"Create a readable stream for generating pseudorandom numbers drawn from a Bernoulli distribution."},{"alias":"randomStreamsBeta","path":"@stdlib/random/streams/beta","type":"Function","description":"Create a readable stream for generating pseudorandom numbers drawn from a beta distribution."},{"alias":"randomStreamsBetaprime","path":"@stdlib/random/streams/betaprime","type":"Function","description":"Create a readable stream for generating pseudorandom numbers drawn from a beta prime distribution."},{"alias":"randomStreamsBinomial","path":"@stdlib/random/streams/binomial","type":"Function"},{"alias":"randomStreamsBoxMuller","path":"@stdlib/random/streams/box-muller","type":"Function","description":"Create a readable stream for generating pseudorandom numbers drawn from a standard normal distribution using the Box-Muller transform."},{"alias":"randomStreamsCauchy","path":"@stdlib/random/streams/cauchy","type":"Function","description":"Create a readable stream for generating pseudorandom numbers drawn from a Cauchy distribution."},{"alias":"randomStreamsChi","path":"@stdlib/random/streams/chi","type":"Function","description":"Create a readable stream for generating pseudorandom numbers drawn from a chi distribution."},{"alias":"randomStreamsChisquare","path":"@stdlib/random/streams/chisquare","type":"Function","description":"Create a readable stream for generating pseudorandom numbers drawn from a chi-square distribution."},{"alias":"randomStreamsCosine","path":"@stdlib/random/streams/cosine","type":"Function","description":"Create a readable stream for generating pseudorandom numbers drawn from a raised cosine distribution."},{"alias":"randomStreamsDiscreteUniform","path":"@stdlib/random/streams/discrete-uniform","type":"Function","description":"Create a readable stream for generating pseudorandom numbers drawn from a discrete uniform distribution."},{"alias":"randomStreamsErlang","path":"@stdlib/random/streams/erlang","type":"Function","description":"Create a readable stream for generating pseudorandom numbers drawn from an Erlang distribution."},{"alias":"randomStreamsExponential","path":"@stdlib/random/streams/exponential","type":"Function","description":"Create a readable stream for generating pseudorandom numbers drawn from an exponential distribution."},{"alias":"randomStreamsF","path":"@stdlib/random/streams/f","type":"Function","description":"Create a readable stream for generating pseudorandom numbers drawn from an F distribution."},{"alias":"randomStreamsGamma","path":"@stdlib/random/streams/gamma","type":"Function","description":"Create a readable stream for generating pseudorandom numbers drawn from a gamma distribution."},{"alias":"randomStreamsGeometric","path":"@stdlib/random/streams/geometric","type":"Function","description":"Create a readable stream for generating pseudorandom numbers drawn from a geometric distribution."},{"alias":"randomStreamsGumbel","path":"@stdlib/random/streams/gumbel","type":"Function","description":"Create a readable stream for generating pseudorandom numbers drawn from a Gumbel distribution."},{"alias":"randomStreamsImprovedZiggurat","path":"@stdlib/random/streams/improved-ziggurat","type":"Function","description":"Create a readable stream for generating pseudorandom numbers drawn from a standard normal distribution using the Improved Ziggurat algorithm."},{"alias":"randomStreamsInvgamma","path":"@stdlib/random/streams/invgamma","type":"Function","description":"Create a readable stream for generating pseudorandom numbers drawn from an inverse gamma distribution."},{"alias":"randomStreamsKumaraswamy","path":"@stdlib/random/streams/kumaraswamy","type":"Function","description":"Create a readable stream for generating pseudorandom numbers drawn from a Kumaraswamy's double bounded distribution."},{"alias":"randomStreamsLaplace","path":"@stdlib/random/streams/laplace","type":"Function","description":"Create a readable stream for generating pseudorandom numbers drawn from a Laplace (double exponential) distribution."},{"alias":"randomStreamsLevy","path":"@stdlib/random/streams/levy","type":"Function","description":"Create a readable stream for generating pseudorandom numbers drawn from a Lévy distribution."},{"alias":"randomStreamsLogistic","path":"@stdlib/random/streams/logistic","type":"Function","description":"Create a readable stream for generating pseudorandom numbers drawn from a logistic distribution."},{"alias":"randomStreamsLognormal","path":"@stdlib/random/streams/lognormal","type":"Function","description":"Create a readable stream for generating pseudorandom numbers drawn from a lognormal distribution."},{"alias":"randomStreamsMinstd","path":"@stdlib/random/streams/minstd","type":"Function","description":"Create a readable stream for a linear congruential pseudorandom number generator (LCG) based on Park and Miller."},{"alias":"randomStreamsMinstdShuffle","path":"@stdlib/random/streams/minstd-shuffle","type":"Function","description":"Create a readable stream for a linear congruential pseudorandom number generator (LCG) whose output is shuffled."},{"alias":"randomStreamsMt19937","path":"@stdlib/random/streams/mt19937","type":"Function","description":"Create a readable stream for a 32-bit Mersenne Twister pseudorandom number generator."},{"alias":"randomStreamsNegativeBinomial","path":"@stdlib/random/streams/negative-binomial","type":"Function"},{"alias":"randomStreamsNormal","path":"@stdlib/random/streams/normal","type":"Function","description":"Create a readable stream for generating pseudorandom numbers drawn from a normal distribution."},{"alias":"randomStreamsPareto1","path":"@stdlib/random/streams/pareto-type1","type":"Function","description":"Create a readable stream for generating pseudorandom numbers drawn from a Pareto (Type I) distribution."},{"alias":"randomStreamsPoisson","path":"@stdlib/random/streams/poisson","type":"Function","description":"Create a readable stream for generating pseudorandom numbers drawn from a Poisson distribution."},{"alias":"randomStreamsRandi","path":"@stdlib/random/streams/randi","type":"Function","description":"Create a readable stream for generating pseudorandom numbers having integer values."},{"alias":"randomStreamsRandn","path":"@stdlib/random/streams/randn","type":"Function","description":"Create a readable stream for generating pseudorandom numbers drawn from a standard normal distribution."},{"alias":"randomStreamsRandu","path":"@stdlib/random/streams/randu","type":"Function","description":"Create a readable stream for generating uniformly distributed pseudorandom numbers between 0 and 1."},{"alias":"randomStreamsRayleigh","path":"@stdlib/random/streams/rayleigh","type":"Function","description":"Create a readable stream for generating pseudorandom numbers drawn from a Rayleigh distribution."},{"alias":"randomStreamsT","path":"@stdlib/random/streams/t","type":"Function","description":"Create a readable stream for generating pseudorandom numbers drawn from a Student's t distribution."},{"alias":"randomStreamsUniform","path":"@stdlib/random/streams/uniform","type":"Function","description":"Create a readable stream for generating pseudorandom numbers drawn from a uniform distribution."},{"alias":"randomStreamsWeibull","path":"@stdlib/random/streams/weibull","type":"Function","description":"Create a readable stream for generating pseudorandom numbers drawn from a Weibull distribution."},{"alias":"ranks","path":"@stdlib/stats/ranks","type":"Function","description":"Compute ranks for values of an array-like object."},{"alias":"RE_BASENAME","path":"@stdlib/regexp/basename","type":"RegExp","description":"Regular expression to capture the last part of a path."},{"alias":"RE_BASENAME_POSIX","path":"@stdlib/regexp/basename-posix","type":"RegExp","description":"Regular expression to capture the last part of a POSIX path."},{"alias":"RE_BASENAME_WINDOWS","path":"@stdlib/regexp/basename-windows","type":"RegExp","description":"Regular expression to capture the last part of a Windows path."},{"alias":"RE_COLOR_HEXADECIMAL","path":"@stdlib/regexp/color-hexadecimal","type":"RegExp","description":"Regular expression to match a hexadecimal color."},{"alias":"RE_DECIMAL_NUMBER","path":"@stdlib/regexp/decimal-number","type":"RegExp","description":"Regular expression to capture a decimal number."},{"alias":"RE_DIRNAME","path":"@stdlib/regexp/dirname","type":"RegExp","description":"Regular expression to capture a path dirname."},{"alias":"RE_DIRNAME_POSIX","path":"@stdlib/regexp/dirname-posix","type":"RegExp","description":"Regular expression to capture a POSIX path dirname."},{"alias":"RE_DIRNAME_WINDOWS","path":"@stdlib/regexp/dirname-windows","type":"RegExp","description":"Regular expression to capture a Windows path dirname."},{"alias":"RE_EOL","path":"@stdlib/regexp/eol","type":"RegExp","description":"Regular expression to match a newline character sequence."},{"alias":"RE_EXTENDED_LENGTH_PATH","path":"@stdlib/regexp/extended-length-path","type":"RegExp","description":"Regular expression to detected an extended-length path."},{"alias":"RE_EXTNAME","path":"@stdlib/regexp/extname","type":"RegExp","description":"Regular expression to capture a filename extension."},{"alias":"RE_EXTNAME_POSIX","path":"@stdlib/regexp/extname-posix","type":"RegExp","description":"Regular expression to capture a POSIX filename extension."},{"alias":"RE_EXTNAME_WINDOWS","path":"@stdlib/regexp/extname-windows","type":"RegExp","description":"Regular expression to capture a Windows filename extension."},{"alias":"RE_FILENAME","path":"@stdlib/regexp/filename","type":"RegExp","description":"Regular expression to split a filename."},{"alias":"RE_FILENAME_POSIX","path":"@stdlib/regexp/filename-posix","type":"RegExp","description":"Regular expression to split a POSIX filename."},{"alias":"RE_FILENAME_WINDOWS","path":"@stdlib/regexp/filename-windows","type":"RegExp","description":"Regular expression to split a Windows filename."},{"alias":"RE_FUNCTION_NAME","path":"@stdlib/regexp/function-name","type":"RegExp","description":"Regular expression to capture a function name."},{"alias":"RE_NATIVE_FUNCTION","path":"@stdlib/regexp/native-function","type":"RegExp","description":"Regular expression to match a native function."},{"alias":"RE_REGEXP","path":"@stdlib/regexp/regexp","type":"RegExp","description":"Regular expression to parse a regular expression string."},{"alias":"RE_UNC_PATH","path":"@stdlib/regexp/unc-path","type":"RegExp","description":"Regular expression to parse a UNC path."},{"alias":"RE_UTF16_SURROGATE_PAIR","path":"@stdlib/regexp/utf16-surrogate-pair","type":"RegExp","description":"Regular expression to match a UTF-16 surrogate pair."},{"alias":"RE_UTF16_UNPAIRED_SURROGATE","path":"@stdlib/regexp/utf16-unpaired-surrogate","type":"RegExp","description":"Regular expression to match an unpaired UTF-16 surrogate."},{"alias":"RE_WHITESPACE","path":"@stdlib/regexp/whitespace","type":"RegExp","description":"Regular expression to match a whitespace character."},{"alias":"readDir","path":"@stdlib/fs/read-dir","type":"Function","description":"Read the entire contents of a directory."},{"alias":"readFile","path":"@stdlib/fs/read-file","type":"Function","description":"Read the entire contents of a file."},{"alias":"readFileList","path":"@stdlib/fs/read-file-list","type":"Function","description":"Read the entire contents of each file in a file list."},{"alias":"readJSON","path":"@stdlib/fs/read-json","type":"Function","description":"Read a file as JSON."},{"alias":"readWASM","path":"@stdlib/fs/read-wasm","type":"Function","description":"Read a file as WebAssembly."},{"alias":"real","path":"@stdlib/complex/real","type":"Function","description":"Return the real component of a complex number."},{"alias":"realmax","path":"@stdlib/utils/real-max","type":"Function","description":"Return the maximum finite value capable of being represented by a numeric real type."},{"alias":"realmin","path":"@stdlib/utils/real-min","type":"Function","description":"Return the smallest positive normal value capable of being represented by a numeric real type."},{"alias":"reduce","path":"@stdlib/utils/reduce","type":"Function","description":"Apply a function against an accumulator and each element in a collection and return the accumulated result."},{"alias":"reduceAsync","path":"@stdlib/utils/async/reduce","type":"Function","description":"Apply a function against an accumulator and each element in a collection and return the accumulated result."},{"alias":"reduceRight","path":"@stdlib/utils/reduce-right","type":"Function","description":"Apply a function against an accumulator and each element in a collection and return the accumulated result, iterating from right to left."},{"alias":"reduceRightAsync","path":"@stdlib/utils/async/reduce-right","type":"Function","description":"Apply a function against an accumulator and each element in a collection and return the accumulated result, iterating from right to left."},{"alias":"reFromString","path":"@stdlib/utils/regexp-from-string","type":"Function","description":"Create a regular expression from a regular expression string."},{"alias":"reim","path":"@stdlib/complex/reim","type":"Function","description":"Return the real and imaginary components of a complex number."},{"alias":"removeFirst","path":"@stdlib/string/remove-first","type":"Function","description":"Remove the first character of a string."},{"alias":"removeLast","path":"@stdlib/string/remove-last","type":"Function","description":"Remove the last character of a string."},{"alias":"removePunctuation","path":"@stdlib/string/remove-punctuation","type":"Function","description":"Remove punctuation characters from a string."},{"alias":"removeUTF8BOM","path":"@stdlib/string/remove-utf8-bom","type":"Function","description":"Remove a UTF-8 byte order mark (BOM) from the beginning of a string."},{"alias":"removeWords","path":"@stdlib/string/remove-words","type":"Function","description":"Remove a list of words from a string."},{"alias":"rename","path":"@stdlib/fs/rename","type":"Function","description":"Rename a file."},{"alias":"reorderArguments","path":"@stdlib/utils/reorder-arguments","type":"Function","description":"Create a function that invokes a provided function with reordered arguments."},{"alias":"repeat","path":"@stdlib/string/repeat","type":"Function","description":"Repeat a string a specified number of times and return the concatenated result."},{"alias":"replace","path":"@stdlib/string/replace","type":"Function","description":"Replace search occurrences with a replacement string."},{"alias":"rescape","path":"@stdlib/utils/escape-regexp-string","type":"Function","description":"Escape a regular expression string or pattern."},{"alias":"resolveParentPath","path":"@stdlib/fs/resolve-parent-path","type":"Function","description":"Resolve a path by walking parent directories."},{"alias":"reverseArguments","path":"@stdlib/utils/reverse-arguments","type":"Function","description":"Create a function that invokes a provided function with arguments in reverse order."},{"alias":"reverseString","path":"@stdlib/string/reverse","type":"Function","description":"Reverse a string."},{"alias":"reviveBasePRNG","path":"@stdlib/random/base/reviver","type":"Function","description":"Revive a JSON-serialized pseudorandom number generator (PRNG)."},{"alias":"reviveBuffer","path":"@stdlib/buffer/reviver","type":"Function","description":"Revive a JSON-serialized Buffer."},{"alias":"reviveComplex","path":"@stdlib/complex/reviver","type":"Function","description":"Revive a JSON-serialized complex number."},{"alias":"reviveComplex64","path":"@stdlib/complex/reviver-float32","type":"Function","description":"Revive a JSON-serialized 64-bit complex number."},{"alias":"reviveComplex128","path":"@stdlib/complex/reviver-float64","type":"Function","description":"Revive a JSON-serialized 128-bit complex number."},{"alias":"reviveError","path":"@stdlib/error/reviver","type":"Function","description":"Revive a JSON-serialized error object."},{"alias":"reviveTypedArray","path":"@stdlib/array/reviver","type":"Function","description":"Revive a JSON-serialized typed array."},{"alias":"rpad","path":"@stdlib/string/right-pad","type":"Function","description":"Right pad a string."},{"alias":"rtrim","path":"@stdlib/string/right-trim","type":"Function","description":"Trim whitespace characters from the end of a string."},{"alias":"safeintmax","path":"@stdlib/utils/safe-int-max","type":"Function","description":"Return the maximum safe integer capable of being represented by a numeric real type."},{"alias":"safeintmin","path":"@stdlib/utils/safe-int-min","type":"Function","description":"Return the minimum safe integer capable of being represented by a numeric real type."},{"alias":"sample","path":"@stdlib/random/sample","type":"Function","description":"Sample elements from an array-like object."},{"alias":"SAVOY_STOPWORDS_FIN","path":"@stdlib/datasets/savoy-stopwords-fin","type":"Function","description":"A list of Finnish stop words."},{"alias":"SAVOY_STOPWORDS_FR","path":"@stdlib/datasets/savoy-stopwords-fr","type":"Function","description":"A list of French stop words."},{"alias":"SAVOY_STOPWORDS_GER","path":"@stdlib/datasets/savoy-stopwords-ger","type":"Function","description":"A list German stop words."},{"alias":"SAVOY_STOPWORDS_IT","path":"@stdlib/datasets/savoy-stopwords-it","type":"Function","description":"A list of Italian stop words."},{"alias":"SAVOY_STOPWORDS_POR","path":"@stdlib/datasets/savoy-stopwords-por","type":"Function","description":"A list of Portuguese stop words."},{"alias":"SAVOY_STOPWORDS_SP","path":"@stdlib/datasets/savoy-stopwords-sp","type":"Function","description":"A list of Spanish stop words."},{"alias":"SAVOY_STOPWORDS_SWE","path":"@stdlib/datasets/savoy-stopwords-swe","type":"Function","description":"A list of Swedish stop words."},{"alias":"SECONDS_IN_DAY","path":"@stdlib/constants/time/seconds-in-day","type":"number","description":"Number of seconds in a day."},{"alias":"SECONDS_IN_HOUR","path":"@stdlib/constants/time/seconds-in-hour","type":"number","description":"Number of seconds in an hour."},{"alias":"SECONDS_IN_MINUTE","path":"@stdlib/constants/time/seconds-in-minute","type":"number","description":"Number of seconds in a minute."},{"alias":"SECONDS_IN_WEEK","path":"@stdlib/constants/time/seconds-in-week","type":"number","description":"Number of seconds in a week."},{"alias":"secondsInMonth","path":"@stdlib/time/seconds-in-month","type":"Function","description":"Determine the number of seconds in a month."},{"alias":"secondsInYear","path":"@stdlib/time/seconds-in-year","type":"Function","description":"Determine the number of seconds in a year according to the Gregorian calendar."},{"alias":"setNonEnumerableProperty","path":"@stdlib/utils/define-nonenumerable-property","type":"Function","description":"Define a non-enumerable property."},{"alias":"setNonEnumerableReadOnly","path":"@stdlib/utils/define-nonenumerable-read-only-property","type":"Function","description":"Define a non-enumerable read-only property."},{"alias":"setNonEnumerableReadOnlyAccessor","path":"@stdlib/utils/define-nonenumerable-read-only-accessor","type":"Function","description":"Define a non-enumerable read-only accessor."},{"alias":"setNonEnumerableReadWriteAccessor","path":"@stdlib/utils/define-nonenumerable-read-write-accessor","type":"Function","description":"Define a non-enumerable read-write accessor."},{"alias":"setNonEnumerableWriteOnlyAccessor","path":"@stdlib/utils/define-nonenumerable-write-only-accessor","type":"Function","description":"Define a non-enumerable write-only accessor."},{"alias":"setReadOnly","path":"@stdlib/utils/define-read-only-property","type":"Function","description":"Define a read-only property."},{"alias":"setReadOnlyAccessor","path":"@stdlib/utils/define-read-only-accessor","type":"Function","description":"Define a read-only accessor."},{"alias":"setReadWriteAccessor","path":"@stdlib/utils/define-read-write-accessor","type":"Function","description":"Define a read-write accessor."},{"alias":"setWriteOnlyAccessor","path":"@stdlib/utils/define-write-only-accessor","type":"Function","description":"Define a write-only accessor."},{"alias":"SharedArrayBuffer","path":"@stdlib/array/shared-buffer","type":"Function","description":"SharedArrayBuffer."},{"alias":"shift","path":"@stdlib/utils/shift","type":"Function","description":"Remove and return the first element of a collection."},{"alias":"shuffle","path":"@stdlib/random/shuffle","type":"Function","description":"Shuffle elements of an array-like object."},{"alias":"sizeOf","path":"@stdlib/utils/size-of","type":"Function","description":"Return the size (in bytes) of the canonical binary representation of a specified numeric type."},{"alias":"some","path":"@stdlib/utils/some","type":"Function","description":"Test whether a collection contains at least `n` elements which are truthy."},{"alias":"someBy","path":"@stdlib/utils/some-by","type":"Function","description":"Test whether a collection contains at least `n` elements which pass a test implemented by a predicate function."},{"alias":"someByAsync","path":"@stdlib/utils/async/some-by","type":"Function","description":"Test whether a collection contains `n` elements which pass a test implemented by a predicate function."},{"alias":"someByRight","path":"@stdlib/utils/some-by-right","type":"Function","description":"Test whether a collection contains at least `n` elements which pass a test implemented by a predicate function, iterating from right to left."},{"alias":"someByRightAsync","path":"@stdlib/utils/async/some-by-right","type":"Function","description":"Test whether a collection contains at least `n` elements which pass a test implemented by a predicate function, iterating from right to left."},{"alias":"SOTU","path":"@stdlib/datasets/sotu","type":"Function","description":"State of the Union addresses by U.S. Presidents."},{"alias":"SPACHE_REVISED","path":"@stdlib/datasets/spache-revised","type":"Function","description":"A list of simple American-English words (revised Spache)."},{"alias":"SPAM_ASSASSIN","path":"@stdlib/datasets/spam-assassin","type":"Function","description":"Spam Assassin public mail corpus."},{"alias":"SparklineBase","path":"@stdlib/plot/sparklines/base/ctor","type":"Function","description":"Base class for sparklines."},{"alias":"sparsearray2iterator","path":"@stdlib/array/to-sparse-iterator","type":"Function","description":"Create an iterator from a sparse array-like object."},{"alias":"sparsearray2iteratorRight","path":"@stdlib/array/to-sparse-iterator-right","type":"Function","description":"Create an iterator from a sparse array-like object, iterating from right to left."},{"alias":"splitStream","path":"@stdlib/streams/node/split","type":"Function","description":"Transform stream which splits streamed data."},{"alias":"SQRT_EPS","path":"@stdlib/constants/float64/sqrt-eps","type":"number","description":"Square root of double-precision floating-point epsilon."},{"alias":"SQRT_HALF","path":"@stdlib/constants/float64/sqrt-half","type":"number","description":"Square root of 1/2."},{"alias":"SQRT_HALF_PI","path":"@stdlib/constants/float64/sqrt-half-pi","type":"number","description":"Square root of 0.5π."},{"alias":"SQRT_PHI","path":"@stdlib/constants/float64/sqrt-phi","type":"number","description":"Square root of the golden ratio."},{"alias":"SQRT_PI","path":"@stdlib/constants/float64/sqrt-pi","type":"number","description":"Square root of π."},{"alias":"SQRT_THREE","path":"@stdlib/constants/float64/sqrt-three","type":"number","description":"Square root of 3."},{"alias":"SQRT_TWO","path":"@stdlib/constants/float64/sqrt-two","type":"number","description":"Square root of 2."},{"alias":"SQRT_TWO_PI","path":"@stdlib/constants/float64/sqrt-two-pi","type":"number","description":"Square root of 2π."},{"alias":"Stack","path":"@stdlib/utils/stack","type":"Function","description":"Stack."},{"alias":"startcase","path":"@stdlib/string/startcase","type":"Function","description":"Capitalize the first letter of each word in a string."},{"alias":"startsWith","path":"@stdlib/string/starts-with","type":"Function","description":"Test if a string starts with the characters of another string."},{"alias":"STOPWORDS_EN","path":"@stdlib/datasets/stopwords-en","type":"Function","description":"A list of English stop words."},{"alias":"stridedarray2iterator","path":"@stdlib/array/to-strided-iterator","type":"Function","description":"Create an iterator from a strided array-like object."},{"alias":"stridedArrayStream","path":"@stdlib/streams/node/from-strided-array","type":"Function","description":"Create a readable stream from a strided array-like object."},{"alias":"string2buffer","path":"@stdlib/buffer/from-string","type":"Function","description":"Allocate a buffer containing a provided string."},{"alias":"sub2ind","path":"@stdlib/ndarray/sub2ind","type":"Function","description":"Convert subscripts to a linear index."},{"alias":"SUTHAHARAN_MULTI_HOP_SENSOR_NETWORK","path":"@stdlib/datasets/suthaharan-multi-hop-sensor-network","type":"Function","description":"Labeled wireless sensor network data set collected from a multi-hop wireless sensor network deployment using TelosB motes."},{"alias":"SUTHAHARAN_SINGLE_HOP_SENSOR_NETWORK","path":"@stdlib/datasets/suthaharan-single-hop-sensor-network","type":"Function","description":"Labeled wireless sensor network data set collected from a simple single-hop wireless sensor network deployment using TelosB motes."},{"alias":"Symbol","path":"@stdlib/symbol/ctor","type":"Function","description":"Symbols."},{"alias":"tabulate","path":"@stdlib/utils/tabulate","type":"Function","description":"Generate a frequency table."},{"alias":"tabulateBy","path":"@stdlib/utils/tabulate-by","type":"Function","description":"Generate a frequency table according to an indicator function."},{"alias":"tabulateByAsync","path":"@stdlib/utils/async/tabulate-by","type":"Function","description":"Generate a frequency table according to an indicator function."},{"alias":"tic","path":"@stdlib/time/tic","type":"Function","description":"Return a high-resolution time."},{"alias":"timeit","path":"@stdlib/utils/timeit","type":"Function","description":"Time a snippet."},{"alias":"tmpdir","path":"@stdlib/os/tmpdir","type":"Function","description":"Return the directory for storing temporary files."},{"alias":"toc","path":"@stdlib/time/toc","type":"Function","description":"Return a high-resolution time difference."},{"alias":"tokenize","path":"@stdlib/nlp/tokenize","type":"Function","description":"Tokenize a string."},{"alias":"transformStream","path":"@stdlib/streams/node/transform","type":"Function","description":"Transform stream."},{"alias":"trim","path":"@stdlib/string/trim","type":"Function","description":"Trim whitespace characters from the beginning and end of a string."},{"alias":"trycatch","path":"@stdlib/utils/try-catch","type":"Function","description":"If a function does not throw, return the function return value; otherwise, return `y`."},{"alias":"trycatchAsync","path":"@stdlib/utils/async/try-catch","type":"Function","description":"If a function does not return an error, invoke a callback with the function result; otherwise, invoke a callback with a value `y`."},{"alias":"tryFunction","path":"@stdlib/utils/try-function","type":"Function","description":"Wrap a function in a try/catch block."},{"alias":"tryRequire","path":"@stdlib/utils/try-require","type":"Function","description":"Wrap `require` in a try/catch block."},{"alias":"trythen","path":"@stdlib/utils/try-then","type":"Function","description":"If a function does not throw, return the function return value; otherwise, return the return value of a second function."},{"alias":"trythenAsync","path":"@stdlib/utils/async/try-then","type":"Function","description":"If a function does not return an error, invoke a callback with the function result; otherwise, invoke a second function."},{"alias":"ttest","path":"@stdlib/stats/ttest","type":"Function","description":"One-sample and paired Student's t-Test."},{"alias":"ttest2","path":"@stdlib/stats/ttest2","type":"Function","description":"Two-sample Student's t-Test."},{"alias":"TWO_PI","path":"@stdlib/constants/float64/two-pi","type":"number","description":"2π."},{"alias":"typedarray","path":"@stdlib/array/typed","type":"Function","description":"Create a typed array."},{"alias":"typedarray2json","path":"@stdlib/array/to-json","type":"Function","description":"Return a JSON representation of a typed array."},{"alias":"typedarrayComplexCtors","path":"@stdlib/array/typed-complex-ctors","type":"Function","description":"Complex typed array constructors."},{"alias":"typedarrayComplexDataTypes","path":"@stdlib/array/typed-complex-dtypes","type":"Function","description":"List of complex typed array data types."},{"alias":"typedarrayCtors","path":"@stdlib/array/typed-ctors","type":"Function","description":"Typed array constructors."},{"alias":"typedarrayDataTypes","path":"@stdlib/array/typed-dtypes","type":"Function","description":"List of typed array data types."},{"alias":"typedarraypool","path":"@stdlib/array/pool","type":"Function","description":"Typed array pool."},{"alias":"typemax","path":"@stdlib/utils/type-max","type":"Function","description":"Return the maximum value of a specified numeric type."},{"alias":"typemin","path":"@stdlib/utils/type-min","type":"Function","description":"Return the minimum value of a specified numeric type."},{"alias":"typeOf","path":"@stdlib/utils/type-of","type":"Function","description":"Determine a value's type."},{"alias":"UINT8_MAX","path":"@stdlib/constants/uint8/max","type":"number","description":"Maximum unsigned 8-bit integer."},{"alias":"UINT8_NUM_BYTES","path":"@stdlib/constants/uint8/num-bytes","type":"number","description":"Size (in bytes) of an 8-bit unsigned integer."},{"alias":"Uint8Array","path":"@stdlib/array/uint8","type":"Function","description":"Uint8Array."},{"alias":"Uint8ClampedArray","path":"@stdlib/array/uint8c","type":"Function","description":"Uint8ClampedArray."},{"alias":"UINT16_MAX","path":"@stdlib/constants/uint16/max","type":"number","description":"Maximum unsigned 16-bit integer."},{"alias":"UINT16_NUM_BYTES","path":"@stdlib/constants/uint16/num-bytes","type":"number","description":"Size (in bytes) of a 16-bit unsigned integer."},{"alias":"Uint16Array","path":"@stdlib/array/uint16","type":"Function","description":"Uint16Array."},{"alias":"UINT32_MAX","path":"@stdlib/constants/uint32/max","type":"number","description":"Maximum unsigned 32-bit integer."},{"alias":"UINT32_NUM_BYTES","path":"@stdlib/constants/uint32/num-bytes","type":"number","description":"Size (in bytes) of a 32-bit unsigned integer."},{"alias":"Uint32Array","path":"@stdlib/array/uint32","type":"Function","description":"Uint32Array."},{"alias":"umask","path":"@stdlib/process/umask","type":"Function","description":"Get/set the process mask."},{"alias":"uncapitalize","path":"@stdlib/string/uncapitalize","type":"Function","description":"Uncapitalize the first character of a string."},{"alias":"uncapitalizeKeys","path":"@stdlib/utils/uncapitalize-keys","type":"Function","description":"Convert the first letter of each object key to lowercase."},{"alias":"uncurry","path":"@stdlib/utils/uncurry","type":"Function","description":"Transform a curried function into a function invoked with multiple arguments."},{"alias":"uncurryRight","path":"@stdlib/utils/uncurry-right","type":"Function","description":"Transform a curried function into a function invoked with multiple arguments."},{"alias":"UNICODE_MAX","path":"@stdlib/constants/string/unicode-max","type":"number","description":"Maximum Unicode code point."},{"alias":"UNICODE_MAX_BMP","path":"@stdlib/constants/string/unicode-max-bmp","type":"number","description":"Maximum Unicode code point in the Basic Multilingual Plane (BMP)."},{"alias":"UnicodeColumnChartSparkline","path":"@stdlib/plot/sparklines/unicode/column","type":"Function","description":"Create a Unicode sparkline column chart."},{"alias":"UnicodeLineChartSparkline","path":"@stdlib/plot/sparklines/unicode/line","type":"Function","description":"Create a Unicode sparkline line chart."},{"alias":"UnicodeSparkline","path":"@stdlib/plot/sparklines/unicode","type":"Function","description":"Create a Unicode sparkline."},{"alias":"UnicodeTristateChartSparkline","path":"@stdlib/plot/sparklines/unicode/tristate","type":"Function","description":"Create a Unicode sparkline tristate chart."},{"alias":"UnicodeUpDownChartSparkline","path":"@stdlib/plot/sparklines/unicode/up-down","type":"Function","description":"Create a Unicode sparkline up/down chart."},{"alias":"UnicodeWinLossChartSparkline","path":"@stdlib/plot/sparklines/unicode/win-loss","type":"Function","description":"Create a Unicode sparkline win/loss chart."},{"alias":"unlink","path":"@stdlib/fs/unlink","type":"Function","description":"Remove a directory entry."},{"alias":"unshift","path":"@stdlib/utils/unshift","type":"Function","description":"Add one or more elements to the beginning of a collection."},{"alias":"until","path":"@stdlib/utils/until","type":"Function","description":"Invoke a function until a test condition is true."},{"alias":"untilAsync","path":"@stdlib/utils/async/until","type":"Function","description":"Invoke a function until a test condition is true."},{"alias":"untilEach","path":"@stdlib/utils/until-each","type":"Function","description":"Until a test condition is true, invoke a function for each element in a collection."},{"alias":"untilEachRight","path":"@stdlib/utils/until-each-right","type":"Function","description":"Until a test condition is true, invoke a function for each element in a collection, iterating from right to left."},{"alias":"unzip","path":"@stdlib/utils/unzip","type":"Function","description":"Unzip a zipped array (i.e., a nested array of tuples)."},{"alias":"uppercase","path":"@stdlib/string/uppercase","type":"Function","description":"Convert a string to uppercase."},{"alias":"uppercaseKeys","path":"@stdlib/utils/uppercase-keys","type":"Function","description":"Convert each object key to uppercase."},{"alias":"US_STATES_ABBR","path":"@stdlib/datasets/us-states-abbr","type":"Function","description":"A list of US state two-letter abbreviations in alphabetical order according to state name."},{"alias":"US_STATES_CAPITALS","path":"@stdlib/datasets/us-states-capitals","type":"Function","description":"A list of US state capitals in alphabetical order according to state name."},{"alias":"US_STATES_CAPITALS_NAMES","path":"@stdlib/datasets/us-states-capitals-names","type":"Function","description":"US state capitals and names."},{"alias":"US_STATES_NAMES","path":"@stdlib/datasets/us-states-names","type":"Function","description":"A list of US state names in alphabetical order."},{"alias":"US_STATES_NAMES_CAPITALS","path":"@stdlib/datasets/us-states-names-capitals","type":"Function","description":"US state names and capitals."},{"alias":"utf16ToUTF8Array","path":"@stdlib/string/utf16-to-utf8-array","type":"Function","description":"Convert a UTF-16 encoded string to an array of integers using UTF-8 encoding."},{"alias":"vartest","path":"@stdlib/stats/vartest","type":"Function","description":"Two-sample F-test for equal variances"},{"alias":"waterfall","path":"@stdlib/utils/async/series-waterfall","type":"Function","description":"Execute functions in series, passing the results of one function as arguments to the next function."},{"alias":"whileAsync","path":"@stdlib/utils/async/while","type":"Function","description":"Invoke a function while a test condition is true."},{"alias":"whileEach","path":"@stdlib/utils/while-each","type":"Function","description":"While a test condition is true, invoke a function for each element in a collection."},{"alias":"whileEachRight","path":"@stdlib/utils/while-each-right","type":"Function","description":"While a test condition is true, invoke a function for each element in a collection, iterating from right to left."},{"alias":"whilst","path":"@stdlib/utils/while","type":"Function","description":"Invoke a function while a test condition is true."},{"alias":"writableProperties","path":"@stdlib/utils/writable-properties","type":"Function","description":"Return an array of an object's own writable property names and symbols."},{"alias":"writablePropertiesIn","path":"@stdlib/utils/writable-properties-in","type":"Function","description":"Return an array of an object's own and inherited writable property names and symbols."},{"alias":"writablePropertyNames","path":"@stdlib/utils/writable-property-names","type":"Function","description":"Return an array of an object's own writable property names."},{"alias":"writablePropertyNamesIn","path":"@stdlib/utils/writable-property-names-in","type":"Function","description":"Return an array of an object's own and inherited writable property names."},{"alias":"writablePropertySymbols","path":"@stdlib/utils/writable-property-symbols","type":"Function","description":"Return an array of an object's own writable symbol properties."},{"alias":"writablePropertySymbolsIn","path":"@stdlib/utils/writable-property-symbols-in","type":"Function","description":"Return an array of an object's own and inherited writable symbol properties."},{"alias":"writeFile","path":"@stdlib/fs/write-file","type":"Function","description":"Write data to a file."},{"alias":"zip","path":"@stdlib/utils/zip","type":"Function","description":"Generate array tuples from input arrays."},{"alias":"ztest","path":"@stdlib/stats/ztest","type":"Function","description":"One-sample and paired z-Test."},{"alias":"ztest2","path":"@stdlib/stats/ztest2","type":"Function","description":"Two-sample z-Test."}]
