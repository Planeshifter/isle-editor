(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{144:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return o})),n.d(t,"rightToc",(function(){return b})),n.d(t,"default",(function(){return p}));var a=n(2),r=n(6),i=(n(0),n(368)),l={id:"range-question",title:"Range Question",sidebar_label:"Range Question"},o={unversionedId:"range-question",id:"range-question",isDocsHomePage:!1,title:"Range Question",description:"A range question component that asks students to supply a lower and upper end point.",source:"@site/docs/range-question.md",slug:"/range-question",permalink:"/docs/range-question",editUrl:"https://github.com/isle-project/isle-editor/edit/master/docusaurus/website/docs/range-question.md",version:"current",lastUpdatedBy:"Planeshifter",lastUpdatedAt:1593744305,sidebar_label:"Range Question",sidebar:"docs",previous:{title:"Quiz",permalink:"/docs/quiz"},next:{title:"Select Question",permalink:"/docs/select-question"}},b=[{value:"Example",id:"example",children:[]},{value:"Options",id:"options",children:[]}],c={rightToc:b};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"A range question component that asks students to supply a lower and upper end point."),Object(i.b)("h2",{id:"example"},"Example"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx",metastring:"live",live:!0}),'<RangeQuestion\n    question="Approximately in which range lie 99% of observations drawn from a standard normal distribution?"\n    solution={[-3,3]}\n/>\n')),Object(i.b)("h2",{id:"options"},"Options"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"question")," | ",Object(i.b)("inlineCode",{parentName:"li"},"string"),": displayed question. Default: ",Object(i.b)("inlineCode",{parentName:"li"},"''"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"solution")," | ",Object(i.b)("inlineCode",{parentName:"li"},"array<number>"),": two-element array containing the endpoints of the correct range. Default: ",Object(i.b)("inlineCode",{parentName:"li"},"none"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"hintPlacement")," | ",Object(i.b)("inlineCode",{parentName:"li"},"string"),": placement of the hints (either ",Object(i.b)("inlineCode",{parentName:"li"},"top"),", ",Object(i.b)("inlineCode",{parentName:"li"},"left"),", ",Object(i.b)("inlineCode",{parentName:"li"},"right"),", or ",Object(i.b)("inlineCode",{parentName:"li"},"bottom"),"). Default: ",Object(i.b)("inlineCode",{parentName:"li"},"'top'"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"hints")," | ",Object(i.b)("inlineCode",{parentName:"li"},"array<(string|node)>"),": hints providing guidance on how to answer the question. Default: ",Object(i.b)("inlineCode",{parentName:"li"},"[]"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"feedback")," | ",Object(i.b)("inlineCode",{parentName:"li"},"boolean"),": controls whether to display feedback buttons. Default: ",Object(i.b)("inlineCode",{parentName:"li"},"true"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"chat")," | ",Object(i.b)("inlineCode",{parentName:"li"},"boolean"),": controls whether the element should have an integrated chat. Default: ",Object(i.b)("inlineCode",{parentName:"li"},"false"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"digits")," | ",Object(i.b)("inlineCode",{parentName:"li"},"number"),": number of digits that have to match between solution and user-supplied answer. If not given or set to null, the component checks for strict equality. If set to 0, checks for integer equality. Default: ",Object(i.b)("inlineCode",{parentName:"li"},"3"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"max")," | ",Object(i.b)("inlineCode",{parentName:"li"},"number"),": maximum input value. Default: ",Object(i.b)("inlineCode",{parentName:"li"},"null"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"min")," | ",Object(i.b)("inlineCode",{parentName:"li"},"number"),": minimum input value. Default: ",Object(i.b)("inlineCode",{parentName:"li"},"null"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"provideFeedback")," | ",Object(i.b)("inlineCode",{parentName:"li"},"boolean"),": indicates whether feedback including the correct answer should be displayed after learners submit their answers. Default: ",Object(i.b)("inlineCode",{parentName:"li"},"true"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"allowMultipleAnswers")," | ",Object(i.b)("inlineCode",{parentName:"li"},"boolean"),": controls whether one can submit multiple answers. Default: ",Object(i.b)("inlineCode",{parentName:"li"},"false"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"voiceID")," | ",Object(i.b)("inlineCode",{parentName:"li"},"string"),": voice control identifier. Default: ",Object(i.b)("inlineCode",{parentName:"li"},"none"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"style")," | ",Object(i.b)("inlineCode",{parentName:"li"},"object"),": CSS inline styles. Default: ",Object(i.b)("inlineCode",{parentName:"li"},"{}"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"onChangeLower")," | ",Object(i.b)("inlineCode",{parentName:"li"},"function"),": callback triggered after the lower bound is changed by the user. Default: ",Object(i.b)("inlineCode",{parentName:"li"},"onChangeLower() {}"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"onChangeUpper")," | ",Object(i.b)("inlineCode",{parentName:"li"},"function"),": callback triggered after the upper bound is changed by the user. Default: ",Object(i.b)("inlineCode",{parentName:"li"},"onChangeUpper() {}"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"onSubmit")," | ",Object(i.b)("inlineCode",{parentName:"li"},"function"),": callback invoked when answer is submitted; has as first parameter a ",Object(i.b)("inlineCode",{parentName:"li"},"boolean")," indicating whether the answer was correctly answered (if applicable, ",Object(i.b)("inlineCode",{parentName:"li"},"null")," otherwise) and the supplied answer as the second parameter. Default: ",Object(i.b)("inlineCode",{parentName:"li"},"onSubmit() {}"),".")))}p.isMDXComponent=!0},368:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return d}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function b(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=r.a.createContext({}),p=function(e){var t=r.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=p(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=b(e,["components","mdxType","originalType","parentName"]),s=p(n),m=a,d=s["".concat(l,".").concat(m)]||s[m]||u[m]||i;return n?r.a.createElement(d,o(o({ref:t},c),{},{components:n})):r.a.createElement(d,o({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=m;var o={};for(var b in t)hasOwnProperty.call(t,b)&&(o[b]=t[b]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var c=2;c<i;c++)l[c]=n[c];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);