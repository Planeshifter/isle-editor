/*! For license information please see LearnNetworks.88b118a9.js.LICENSE.txt */
(window.webpackJsonp=window.webpackJsonp||[]).push([[188],{1187:function(e,t,r){var n=r(452);n(n.P,"Array",{fill:r(1176)}),r(821)("fill")},439:function(e,t,r){"use strict";var n=r(344),a=r(345),i=r(347),s=r.n(i),o=r(0),u=r.n(o),l=r(356),d=["xl","lg","md","sm","xs"],c=u.a.forwardRef((function(e,t){var r=e.bsPrefix,i=e.className,o=e.noGutters,c=e.as,f=void 0===c?"div":c,h=Object(a.a)(e,["bsPrefix","className","noGutters","as"]),m=Object(l.a)(r,"row"),v=m+"-cols",p=[];return d.forEach((function(e){var t,r=h[e];delete h[e];var n="xs"!==e?"-"+e:"";null!=(t=null!=r&&"object"==typeof r?r.cols:r)&&p.push(""+v+n+"-"+t)})),u.a.createElement(f,Object(n.a)({ref:t},h,{className:s.a.apply(void 0,[i,m,o&&"no-gutters"].concat(p))}))}));c.displayName="Row",c.defaultProps={noGutters:!1},t.a=c},471:function(e,t,r){"use strict";var n=r(344),a=r(345),i=r(347),s=r.n(i),o=r(0),u=r.n(o),l=r(356),d=u.a.forwardRef((function(e,t){var r=e.bsPrefix,i=e.fluid,o=e.as,d=void 0===o?"div":o,c=e.className,f=Object(a.a)(e,["bsPrefix","fluid","as","className"]),h=Object(l.a)(r,"container"),m="string"==typeof i?"-"+i:"-fluid";return u.a.createElement(d,Object(n.a)({ref:t},f,{className:s()(c,i?""+h+m:h)}))}));d.displayName="Container",d.defaultProps={fluid:!1},t.a=d},481:function(e,t,r){"use strict";var n=r(510);e.exports=n},510:function(e,t,r){"use strict";var n=Math.ceil;e.exports=n},5799:function(e,t,r){"use strict";r.r(t);r(360),r(352),r(363);var n=r(362),a=r.n(n),i=(r(1187),r(353)),s=r.n(i),o=r(354),u=r.n(o),l=r(369),d=r.n(l),c=r(357),f=r.n(c),h=r(358),m=r.n(h),v=r(355),p=r.n(v),w=r(350),g=r.n(w),y=r(0),b=(r(341),r(471)),x=r(439),N=r(500),k=r(775),P=r.n(k),E=r(1504),R=r.n(E),T=r(862),G=r(784),j=r(508),C=r(631),O=r(1991),V=r(754),A=r(630);function I(e,t,r,n){for(var a=0,i=0;i<e.length;i++){var s=e[i];s.source===t&&s.target===r&&(a+=1),s.source===t&&s.target===n&&(a+=1),s.source===r&&s.target===n&&(a+=1)}return a}var S=function(e,t){for(var r=0,n=0,a=0;a<e.length;a++)for(var i=0;i<a;i++)for(var s=0;s<i;s++){var o=I(t,a,i,s);2===o&&(n+=1),3===o&&(n+=3,r+=1)}return 3*r/n};function B(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var r,n=p()(e);if(t){var a=p()(this).constructor;r=Reflect.construct(n,arguments,a)}else r=n.apply(this,arguments);return m()(this,r)}}var D=a()("p",{},void 0,"In a network, the nodes are assumed to be fixed but the edges are random, i.e. there is some random process which determines whether there is an edge connecting two nodes."),J=a()("p",{},void 0,"Let us consider one of the simplest available network models. In the Erd\u0151s\u2013R\xe9nyi model, there is a fixed probability ",a()(A.a,{raw:"p"})," that an edge exists between any two nodes. We also assume that whether or not an edge exists between two nodes is independent of whether or not other edges exist."),W=a()("p",{},void 0,"In this model, if we have ",a()(A.a,{raw:"m"})," nodes, each node can be connected to ",a()(A.a,{raw:"m-1"})," other nodes.  The number of edges attached to each node (the degree) is then ",a()(A.a,{raw:"\\text{Binomial}(m-1,p)"}),"."),L=a()(j.b,{legend:"p (probability of an edge between two nodes)",defaultValue:.5,step:.01,max:1,min:0}),M=a()(G.a,{id:"networks"}),q=function(e){f()(r,e);var t=B(r);function r(e){var n;s()(this,r),n=t.call(this,e),g()(d()(n),"handleGenerate",(function(e,t){for(var r=new Array(e),a=0;a<r.length;a++)r[a]={id:a};for(var i=[],s=0;s<r.length;s++)for(var o=0;o<s;o++)R()()<t&&i.push({source:s,target:o});var u,l,d={network:{links:i,nodes:r}},c=n.state.numNodes,f=n.state.edgeProb;e!==c||t!==f?(c=e,l=[],u=new Array(.5*e*(e-1)+1).fill(0)):(u=n.state.tally,l=n.state.transitivities.slice()),l.push(S(r,i)),u[i.length]+=1,d.numNodes=c,d.edgeProb=t,d.tally=u,d.transitivities=l,n.setState(d)}));return n.state={network:{links:[],nodes:[]},numNodes:10,edgeProb:.5,transitivities:[],tally:new Array(46).fill(0)},n}return u()(r,[{key:"renderTallyPlot",value:function(){return this.props.showEdgeChart?a()(V.a,{removeButtons:!0,layout:{title:"Number of edges per generated network",height:250},data:[{x:P()(0,this.state.tally.length,1),y:this.state.tally,type:"bar"}]}):null}},{key:"renderTransitivities",value:function(){if(!this.props.showTransitivities)return null;var e=[{x:this.state.transitivities,type:"histogram"}];return a()(V.a,{removeButtons:!0,layout:{title:"Global Clustering Coefficient",height:250},data:e})}},{key:"render",value:function(){return a()(b.a,{style:{maxWidth:1200,margin:"0 auto"}},void 0,a()(x.a,{},void 0,a()(N.a,{md:6},void 0,a()(T.a,{id:"networks-dashboard",onGenerate:this.handleGenerate},void 0,D,J,W,a()(j.b,{legend:"m (number of nodes)",defaultValue:10,step:1,min:0,max:this.props.maxNumNodes}),L)),a()(N.a,{md:6},void 0,a()(C.a,{},void 0,a()(O.a,{width:500,height:350,data:this.state.network}),this.renderTallyPlot(),this.renderTransitivities()),M)))}}]),r}(y.Component);q.defaultProps={maxNumNodes:30,showEdgeChart:!1,showTransitivities:!1};t.default=q},775:function(e,t,r){"use strict";var n=r(919);e.exports=n},919:function(e,t,r){"use strict";var n=r(481),a=r(393).isPrimitive,i=r(346),s=r(811);e.exports=function(e,t,r){var o,u,l,d;if(!a(e)||i(e))throw new TypeError("invalid argument. Start must be numeric. Value: `"+e+"`.");if(!a(t)||i(t))throw new TypeError("invalid argument. Stop must be numeric. Value: `"+t+"`.");if(arguments.length<3)l=1;else if(!a(l=r)||i(l))throw new TypeError("invalid argument. Increment must be numeric. Value: `"+l+"`.");if((u=n((t-e)/l))>s)throw new RangeError("invalid arguments. Generated array exceeds maximum array length.");if(u<=1)return[e];for((o=[]).push(e),d=1;d<u;d++)o.push(e+l*d);return o}}}]);