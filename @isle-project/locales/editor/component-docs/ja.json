{
	"Accordion-description": "垂直方向のスライダーを制御するアコーディオンコンポーネント。",
	"Accordion-prop-active": "先頭に開くスライダーのインデックス",
	"Accordion-prop-canCloseAll": "すべてのヘッダを折りたたむことができるかどうか",
	"Accordion-prop-className": "外字クラス名",
	"Accordion-prop-headerClassName": "これはヘッダの指定されたクラス名を上書きします。",
	"Accordion-prop-headers": "ヘッダー名の配列",
	"Accordion-prop-headerStyle": "ヘッダーバーにスタイルを割り当てることもできます。",
	"Accordion-prop-onChange": "コールバックは、新しいアクティブな垂直スライダーのインデックスで呼び出されます。",
	"Accordion-prop-style": "外側のdivのためのCSSインラインスタイル",
	"Animated-description": "コンポーネントや子要素にアニメーションを適用できるISLEコンポーネント。",
	"Animated-prop-in": "冒頭に適用されるスタイル",
	"Animated-prop-out": "マウスアウトスタイル",
	"Animated-prop-over": "マウスオーバースタイル",
	"Animated-prop-preset": "プリセット名",
	"Anova-description": "分散分析。",
	"Anova-prop-data": "値の配列のオブジェクト",
	"Anova-prop-group": "グループ化変数名",
	"Anova-prop-showDecision": "テスト決定を表示するかどうかを制御します。",
	"Anova-prop-variable": "表示対象変数名",
	"Background-description": "指定した間隔で背景画像を変化させる動的背景コンポーネント。",
	"Background-prop-images": "表示する画像URLのリスト",
	"Background-prop-in": "入口効果名 (フェードイン、スライドレフトイン、反転ホ-ルボトムインのいずれか)",
	"Background-prop-inTime": "エントリ効果の長さ",
	"Background-prop-out": "終了エフェクト名 (`フェードアウト`, `スライド右アウト`, `反転ホ-ル下アウト` のいずれか)",
	"Background-prop-outTime": "終了効果の長さ",
	"Background-prop-parent": "親要素の backgroundColor を透過、オーバーフローを非表示に設定します。",
	"Background-prop-time": "各背景画像の表示時間(秒)",
	"BarChart-description": "棒グラフ。",
	"BarChart-prop-data": "値の配列のオブジェクト",
	"BarChart-prop-direction": "x軸に沿って棒グラフを並べる方法 (`ascending` or `descending`)",
	"BarChart-prop-group": "グループ化変数",
	"BarChart-prop-horizontal": "バーを水平に表示するかどうか",
	"BarChart-prop-relative": "各グループ内の相対度数を計算するかどうか",
	"BarChart-prop-stackBars": "グループ化する際に、バーを重ねるかどうかを制御します。",
	"BarChart-prop-summary": "yvar` で計算し、各カテゴリのバーの高さとして表示される統計量の名前",
	"BarChart-prop-totalPercent": "全体のバーを相対的な度数で表示するかどうか",
	"BarChart-prop-variable": "表示用変数",
	"BarChart-prop-xOrder": "全体、`カテゴリ`、`最小値`、`最大値`、`平均値`、または`中央値`のいずれかを指定します。",
	"BeaconTooltip-description": "レッスン内にビーコンを配置するコンポーネントで、独立して、または `target` に添付して配置します。ビーコンの上にカーソルを置いたりクリックしたりすると、ツールチップが表示されます。",
	"BeaconTooltip-prop-content": "ツールチップコンテンツ",
	"BeaconTooltip-prop-event": "click`に設定されている場合は、ビーコンをクリックしたときにツールチップがトグルされ、`hover`に設定されている場合は、ホバーしたときにツールチップが有効になります。",
	"BeaconTooltip-prop-offset": "ツールチップと `target` の距離をピクセル単位で指定します。",
	"BeaconTooltip-prop-onChange": "コールバックはツールチップの状態が変化したときに呼び出されます。2つの引数を受け取ります: `action` (`open` または `close`) と渡された `props` です。",
	"BeaconTooltip-prop-placement": "ツールチップを `target` (`top`, `top-start`, `top-end`, `bottom`, `bottom-end`, `left`, `left-start`, `left-end`, `right`, `right-start`, `right-end`, `auto`, `center` のいずれか) に対して相対的に配置します。",
	"BeaconTooltip-prop-target": "ツールチップを添付する要素のクラスまたはIDセレクタ",
	"BeaconTooltip-prop-title": "ツールチップの上部に表示されるタイトル",
	"Bibliography-description": "レッスンで使用されているすべての参照を表示する書誌コンポーネントです(前文の `references` フィールドで指定します)。",
	"Bibliography-prop-className": "クラス名",
	"Bibliography-prop-style": "CSSインラインスタイル",
	"Bibliography-prop-title": "見出し",
	"blockquote-description": "拡張引用符を表示するコンポーネント。",
	"blockquote-prop-cite": "引用元",
	"blockquote-prop-className": "クラス名",
	"blockquote-prop-style": "CSSインラインスタイル",
	"BoxPlot-description": "箱のプロット。",
	"BoxPlot-prop-data": "値の配列のオブジェクト",
	"BoxPlot-prop-group": "グループ化変数",
	"BoxPlot-prop-orientation": "垂直または水平方向",
	"BoxPlot-prop-overlayPoints": "ポイントをオーバーレイするかどうかを制御します。",
	"BoxPlot-prop-variable": "表示用変数",
	"CheckboxInput-description": "チェックボックス入力コンポーネントです。ISLE ダッシュボードの一部として使うことも、スタンドアロンで使うこともできます。後者の場合、`onChange` 属性で変更を処理するか、`bind` 属性でグローバル変数に値をバインドします。",
	"CheckboxInput-prop-bind": "チェックボックスの値を割り当てるグローバル変数名",
	"CheckboxInput-prop-defaultValue": "チェックボックスのデフォルト値を示すブール値",
	"CheckboxInput-prop-disabled": "は入力が有効かどうかを示します。",
	"CheckboxInput-prop-inline": "はチェックボックスをインラインで表示するかどうかを示します。",
	"CheckboxInput-prop-legend": "チェックボックスの横に表示される文字",
	"CheckboxInput-prop-onChange": "チェックボックスがクリックされたときに呼び出されるコールバック関数です。この関数は、現在のチェックボックスの値で呼び出されます。",
	"CheckboxInput-prop-style": "CSSインラインスタイル",
	"CheckboxInput-prop-tooltip": "チェックボックス上に表示される文字",
	"CheckboxInput-prop-tooltipPlacement": "ボタンツールチップの位置",
	"CheckboxInput-prop-value": "チェックボックス値",
	"Chi2Test-description": "カイ2乗独立性検定。",
	"Chi2Test-prop-data": "値の配列のオブジェクト",
	"Chi2Test-prop-var1": "先頭変数名",
	"Chi2Test-prop-var2": "二番目の変数名",
	"Citation-description": "引用コンポーネント。",
	"Citation-prop-citeKey": "アイテム参照",
	"Citation-prop-label": "引用用ラベル",
	"Citation-prop-parens": "括弧内に引用を表示するかどうかを制御します。",
	"Clock-description": "現在の時刻を表示する時計コンポーネント。",
	"Clock-prop-className": "クラス名",
	"Clock-prop-duration": "設定されている場合、セッションの持続時間が表示されます (実際の時間ではありません)",
	"Clock-prop-format": "じかんけいしき",
	"Clock-prop-style": "CSSインラインスタイル",
	"Collapse-description": "スライドダウンとスライドアップを可能にするISLEコンポーネント - JQueryスタイル。",
	"Collapse-prop-defaultVisible": "設定されている場合は、最初からボディが表示されます。",
	"Collapse-prop-header": "見出し内容",
	"Collapse-prop-headerClassName": "これはヘッダの与えられたクラス名を上書きします。",
	"Collapse-prop-headerStyle": "ヘッダーバーにスタイルを割り当てることもできます。",
	"Collapse-prop-onClick": "ヘッダーがクリックされたときに呼び出されるイベントハンドラ",
	"Collapse-prop-style": "アウターコンテナ用インライン CSS スタイル",
	"Collapse-prop-visible": "スライダーが表示されているかどうかを制御します; 状態を外部で処理する必要がある制御されたコンポーネントに変えます。",
	"ColorPicker-description": "react-color](https://casesandberg.github.io/react-color/) カラーピッカーのラッパー。",
	"ColorPicker-prop-className": "クラス名",
	"ColorPicker-prop-color": "文字列`はHeXコードを、`オブジェクト`はRGBやHSLの値を保持します。または `{ h: 0, s: 0, l: .10 }` のようなRGBやHSLの値を保持する `オブジェクト` を保持します。どちらも、1つ以外のアルファ値に対しては `a` プロパティを受け付けます。",
	"ColorPicker-prop-disableAlpha": "アルファスライダーとオプションを削除するかどうかを制御します。",
	"ColorPicker-prop-onChange": "色が変わるたびに呼び出されるコールバック",
	"ColorPicker-prop-onChangeComplete": "色の変更が完了したときに呼び出されるコールバック",
	"ColorPicker-prop-presetColors": "カラーピッカーの下部にあるデフォルトの色を指定する HeX `strings`。",
	"ColorPicker-prop-style": "CSSインラインスタイル",
	"ColorPicker-prop-variant": "カラーピッカーバリアント (`Compact`, `Sketch`, `Material`, `Block` のいずれか)",
	"ColorPicker-prop-width": "カラーピッカーの幅",
	"Container-description": "コンテナのラッパー。",
	"Container-prop-fluid": "固定幅のコンテナレイアウトを全幅レイアウトにする",
	"ContingencyTable-description": "偶発的な表。",
	"ContingencyTable-prop-colVar": "列変数名",
	"ContingencyTable-prop-data": "値の配列のオブジェクト",
	"ContingencyTable-prop-display": "行のパーセント`および/または列のパーセント`を表示するかどうか",
	"ContingencyTable-prop-group": "グループ化変数名",
	"ContingencyTable-prop-nDecimalPlaces": "表中の相対周波数の小数点以下の桁数",
	"ContingencyTable-prop-relativeFreqs": "相対周波数を表示するかどうかを制御します。",
	"ContingencyTable-prop-rowVar": "行変数名",
	"ContourChart-description": "等高線図。",
	"ContourChart-prop-data": "各変数の値の配列のオブジェクト",
	"ContourChart-prop-onSelected": "点が x, y の値で選択され、選択された点が選択されたときに呼び出されるコールバック",
	"ContourChart-prop-overlayPoints": "各オブザベーションのポイントをオーバーレイするかどうかを制御します。",
	"ContourChart-prop-regressionMethod": "線形および/または平滑化された回帰直線をオーバーレイするための `linear` および/または `smooth` を含む配列．",
	"ContourChart-prop-smoothSpan": "スムージングスパン",
	"ContourChart-prop-x": "Ｘ軸変数",
	"ContourChart-prop-y": "Ｙ軸変数",
	"CorrTest-description": "相関検定。",
	"CorrTest-prop-alpha": "有意水準",
	"CorrTest-prop-data": "値の配列のオブジェクト",
	"CorrTest-prop-direction": "テスト方向",
	"CorrTest-prop-rho0": "帰無仮説の下での相関値",
	"CorrTest-prop-showDecision": "は，指定された有意水準で帰無仮説が棄却されたかどうかを表示するかどうかを制御します．",
	"CorrTest-prop-var1": "先頭変数名",
	"CorrTest-prop-var2": "二番目の変数名",
	"Dashboard-description": "複数の子入力フィールドの処理を組み合わせるためのダッシュボード。",
	"Dashboard-prop-autoStart": "true` にセットされている場合、`onGenerate` 関数は起動時にデフォルトの入力値で実行される。",
	"Dashboard-prop-autoUpdate": "は、子入力フィールドの1つが変化したときに `onGenerate` 関数を自動的に呼び出すかどうかを制御します。",
	"Dashboard-prop-className": "クラス名",
	"Dashboard-prop-description": "ダッシュボード記述",
	"Dashboard-prop-disabled": "ダッシュボードを無効にするかどうかを制御します。",
	"Dashboard-prop-label": "ボタンラベル",
	"Dashboard-prop-maxWidth": "ダッシュボードの最大幅",
	"Dashboard-prop-onGenerate": "関数は、ボタンがクリックされたときやダッシュボードの入力値が変更されたときに呼び出されます(`autoUpdate` が `true` に設定されている場合)。この関数は、入力フィールドの値がダッシュボードに配置された順に呼び出されます。",
	"Dashboard-prop-style": "CSSインラインスタイル",
	"Dashboard-prop-title": "カードタイトル",
	"DataExplorer-description": "このコンポーネントは、学生が提示されたデータを簡単に要約し、様々な統計的検定を行うために使用されます。",
	"DataExplorer-prop-categorical": "各カテゴリ変数の名前を示す文字列の配列",
	"DataExplorer-prop-data": "は、表示するデータオブジェクトまたは配列を指定します。オブジェクトの場合はキーが列の値に対応し、配列の場合は各列に対応する名前付きフィールドを持つオブジェクトの配列を期待します。学生に `.csv` ファイルをインポートできるようにしたい場合は、`data` オプションを `false` に設定してください。",
	"DataExplorer-prop-dataInfo": "",
	"DataExplorer-prop-dataTable": "データテーブルをビューから隠すかどうかを示すブール値",
	"DataExplorer-prop-dataTableProps": "プロパティはデータテーブルコンポーネントに渡されます (<DataTable /> のドキュメントを参照してください)。",
	"DataExplorer-prop-editor": "エディタをユーザに表示するかどうかを示すブール値",
	"DataExplorer-prop-editorProps": "に渡されるプロパティのオブジェクトです ( <TextEditor /> のドキュメントを参照してください)。",
	"DataExplorer-prop-editorTitle": "表示されるエクスプローラのタイトルを示す文字列",
	"DataExplorer-prop-histogramDensities": "ヒストグラムの密度を表示するかどうかを示すブール値",
	"DataExplorer-prop-history": "実行されたアクションの履歴ログを表示するかどうかを制御します。",
	"DataExplorer-prop-models": "データに適合するモデルを示す文字列の配列",
	"DataExplorer-prop-onTutorialCompletion": "データエクスプローラのチュートリアルが完了したときに呼び出される関数",
	"DataExplorer-prop-onTutorialStart": "データエクスプローラチュートリアルの起動時に呼び出される関数",
	"DataExplorer-prop-opened": "起動時に開いたページ",
	"DataExplorer-prop-plots": "ユーザに表示するプロットを示す文字列の配列",
	"DataExplorer-prop-quantitative": "各量的変数の名前を示す文字列の配列",
	"DataExplorer-prop-questions": "タブ付きウィンドウに表示される周囲のテキストと質問の要素を示すノードの配列",
	"DataExplorer-prop-reportMode": "エディタの変更を全員に同期させるか (`collaborative`)、グループ内のユーザに同期させるか (`group`)、同期させないか (`individual`) を制御します。",
	"DataExplorer-prop-showTestDecisions": "計算されたp値に基づいて各テストの決定を表示するかどうかを示すブール値",
	"DataExplorer-prop-statistics": "サマリー統計量が計算される可能性があることを示す文字列の配列",
	"DataExplorer-prop-style": "メインコンテナのCSSインラインスタイル",
	"DataExplorer-prop-tables": "データからどのテーブルが作成されるかを示す文字列の配列",
	"DataExplorer-prop-tabs": "追加するカスタムタブを示すオブジェクトとキーの配列",
	"DataExplorer-prop-tests": "どの仮説検定を含めるかを示す文字列の配列",
	"DataExplorer-prop-transformer": "変数変換ツールを表示するかどうかを示すブール値",
	"DataSampler-description": "データセットからオブザベーションをサンプリングし、子コンポーネントに渡すためのコンポーネント。",
	"DataTable-description": "データを表形式で表示するコンポーネント。react-table](https://react-table.js.org/) の上に構築されています。",
	"DataTable-prop-className": "クラス名",
	"DataTable-prop-data": "表示されるデータオブジェクトまたは配列。オブジェクトの場合はキーがカラムの値に対応し、配列の場合は各カラムに対応する名前付きフィールドを持つオブジェクトの配列となります。",
	"DataTable-prop-dataInfo": "オブジェクトには、データセットを記述する文字列配列 `info`、データセットの `name`、変数名に対応するキーと変数の説明に対応する値を持つ `変数` の `object`、起動時に情報モーダルを表示するかどうかを制御するブール値 `showOnStartup` が含まれます。",
	"DataTable-prop-deletable": "info` が存在しないカラムにボタンがあるかどうかを制御します。",
	"DataTable-prop-disableDownload": "データをCSVまたはJSONファイルとしてダウンロードするボタンを非表示にするかどうか",
	"DataTable-prop-editable": "編集可能なカラム名の配列",
	"DataTable-prop-filterable": "カラムがフィルタリング可能かどうかを制御します。",
	"DataTable-prop-getTrProps": "コールバック関数は各行に対して実行され、スタイルをカスタマイズします (テーブルの状態、行情報が渡されます)。\nカラム、およびテーブルのインスタンス)",
	"DataTable-prop-onClickRemove": "データから削除された行に対するアクションを指定する関数 (デフォルトは空の関数)",
	"DataTable-prop-onColumnDelete": "カラムのそれぞれの削除ボタンがクリックされたときに、そのカラムの名前で呼び出される関数",
	"DataTable-prop-onColumnDrag": "カラムが別の位置にドラッグされたときに呼び出される関数",
	"DataTable-prop-onColumnNameChange": "カラムの名前が変更されたときに呼び出される関数 (古い名前を第一引数、新しい名前を第二引数として呼び出されます)",
	"DataTable-prop-onEdit": "関数は、ユーザによってセルの値が変更された後、更新されたデータセットで呼び出されます (テーブルが `編集可能` の場合にのみ適用されます)。",
	"DataTable-prop-onFilteredChange": "関数",
	"DataTable-prop-onTutorialCompletion": "データテーブルのチュートリアルが完了したときに呼び出される関数",
	"DataTable-prop-showIdColumn": "IDカラムを表示するかどうかを制御します。",
	"DataTable-prop-showRemove": "は、削除する行のチェックボックスを表示するかどうかを示します。",
	"DataTable-prop-style": "カスタム css スタイリングを可能にするオブジェクト。デフォルトは空のオブジェクト",
	"DataTable-prop-undeletableVars": "削除されないカラムの変数名の配列",
	"DateDisplay-description": "説明文は欠落しています。",
	"DecisionTree-description": "回帰と分類木。",
	"DecisionTree-prop-data": "値の配列のオブジェクト",
	"DecisionTree-prop-impurityMeasure": "不純物量",
	"DecisionTree-prop-maxTreeDepth": "最大木深",
	"DecisionTree-prop-minItemsCount": "リーフノードでのオブザベーションの最小数",
	"DecisionTree-prop-onPredict": "予測ボタンをクリックしたときにモデルオブジェクトで呼び出されるコールバック",
	"DecisionTree-prop-quantitative": "定量的`data`の変数の配列",
	"DecisionTree-prop-scoreThreshold": "スプリットしきい値",
	"DecisionTree-prop-type": "カテゴリー的な結果であれば「分類」、定量的な結果であれば「回帰」。",
	"DecisionTree-prop-x": "一つ以上の予測変数",
	"DecisionTree-prop-y": "アウトカム変数",
	"Deck-description": "説明文は欠落しています。",
	"DensityPlot-description": "d3ベースの密度プロットコンポーネント。",
	"DensityPlot-prop-bandwidth": "カーネル密度推定器の平滑化パラメータ",
	"DensityPlot-prop-data": "密度プロットを作成するためのデータを保持する `配列` または `配列の配列`．",
	"DensityPlot-prop-height": "作成されたプロットの高さ",
	"DensityPlot-prop-histogram": "密度プロットの横にヒストグラムを表示します",
	"DensityPlot-prop-nBins": "オーバーレイされたヒストグラムのビン数.",
	"DensityPlot-prop-vline": "が指定された場合、指定された `value` の位置に垂直線を表示し、指定された `label` と一緒に表示します。",
	"DensityPlot-prop-width": "作成されたプロットの幅 (px)",
	"DensityPlot-prop-xlab": "Ｘ軸ラベル",
	"DensityPlot-prop-xmax": "Ｘ軸表示の最大値",
	"DensityPlot-prop-xmin": "Ｘ軸最小値",
	"DensityPlot-prop-ymax": "Ｙ軸の最大値",
	"div-description": "汎用コンテナ要素。",
	"div-prop-className": "クラス名",
	"div-prop-style": "CSSインラインスタイル",
	"DraggableGrid-description": "レスポンシブなドラッグ可能なグリッドレイアウト。",
	"DraggableGrid-prop-isDraggable": "グリッド要素をドラッグ可能にするかどうかを制御します。",
	"DraggableGrid-prop-isResizable": "グリッド要素のサイズを変更するかどうかを制御します。",
	"DraggableGrid-prop-rowHeight": "一行の高さ",
	"DraggableList-description": "学生が再注文できるドラッグ可能な要素のリスト。",
	"DraggableList-prop-className": "クラス名",
	"DraggableList-prop-data": "id` と `text` キーを持つオブジェクトの配列",
	"DraggableList-prop-disabled": "要素をドラッグするかどうかを制御します。",
	"DraggableList-prop-onChange": "コールバックは、変更のたびに新しい順序のデータ配列で呼び出されます。",
	"DraggableList-prop-onInit": "コンポーネント実装後に呼び出されるコールバック関数",
	"DraggableList-prop-shuffle": "初期表示時にデータ要素をシャッフルするかどうかを制御します。",
	"DraggableList-prop-style": "CSSインラインスタイル",
	"EnlargeableGrid-description": "拡大可能なグリッド。",
	"EnlargeableGrid-prop-enlargeable": "アイテムを拡大するかどうかを制御します。",
	"EnlargeableGrid-prop-enlargedHeight": "拡大後の高さ",
	"EnlargeableGrid-prop-isDraggable": "グリッド要素をドラッグ可能にするかどうかを制御します。",
	"EnlargeableGrid-prop-isResizable": "グリッド要素のサイズを変更するかどうかを制御します。",
	"EnlargeableGrid-prop-itemHeight": "項目の高さ",
	"Expire-description": "expire コンポーネントは、指定された時間が経過すると、そのすべての子要素が非表示になります。",
	"Expire-prop-active": "カウンタをアクティブにするかどうかを制御します。",
	"Expire-prop-delay": "コンポーネントが消えるまでのミリ秒数",
	"FeedbackButtons-description": "ユーザーのフィードバックを収集するためのボタン。",
	"FeedbackButtons-prop-className": "クラス名",
	"FeedbackButtons-prop-confusedMsg": "混乱したボタンのツールチップに表示されるメッセージ",
	"FeedbackButtons-prop-customFeedback": "コンポーネントがカスタムフィードバックを受け入れるかどうかを制御します。",
	"FeedbackButtons-prop-feedbackMsg": "詳細フィードバックボタンのツールチップに表示されるメッセージ",
	"FeedbackButtons-prop-style": "CSSインラインスタイル",
	"FeedbackButtons-prop-understoodMsg": "理解されたボタンのツールチップに表示されるメッセージ",
	"FeedbackButtons-prop-vertical": "ボタンは、`true` に設定されている場合は垂直に表示されます。",
	"FlippableCard-description": "2つのレンダリングを可能にするISLEコンポーネント。",
	"FlippableCard-prop-button": "ボタンラベル",
	"FlippableCard-prop-cardStyles": "で指定されたスタイルを上書きすることができます。",
	"FlippableCard-prop-defaultValue": "初期フリップ状態",
	"FlippableCard-prop-draggable": "は、カードをドラッグするかどうかを制御します。",
	"FlippableCard-prop-flipSpeedBackToFront": "秒単位のカードの回転速度",
	"FlippableCard-prop-flipSpeedFrontToBack": "数値} カードが前景から背景に切り替わる速度を秒単位で指定します。",
	"FlippableCard-prop-onChange": "カードが反転されるとコールバックが起動され、現在の反転状態を唯一の引数として受け取ります。",
	"FlippableCard-prop-oneTime": "は、フリップ処理を一度だけ実行するかどうかを示します。",
	"FlippableCard-prop-perspective": "3D配置された要素にパースペクティブを与えるためのCSSプロパティ値",
	"FlippableCard-prop-value": "カードのフリップ状態",
	"FreeTextQuestion-description": "学生による回答がフリーテキストの形で提供されるべき問題のためのISLEコンポーネント。",
	"FreeTextQuestion-prop-chat": "質問に対してグループチャットを有効にするかどうかを制御します。"
}
