(window.webpackJsonp=window.webpackJsonp||[]).push([[384],{2935:function(t,e,n){"use strict";e.a=function(t,e){var n=new String(t);return n.categories=e,n}},5724:function(t,e,n){"use strict";n.r(e);n(359),n(351),n(363);var r=n(352),i=n.n(r),o=n(354),s=n.n(o),a=n(368),c=n.n(a),u=n(357),l=n.n(u),h=n(358),f=n.n(h),d=n(355),m=n.n(d),p=n(349),g=n.n(p),v=n(362),w=n.n(v),b=n(0);n(340);function y(t,e){let n=0;for(let r=0;r<t.length;r++)n+=(t[r]-e[r])*(t[r]-e[r]);return n}const A={distanceFunction:y};function z(t,e,n=A){const r=n.distanceFunction||A.distanceFunction,i=n.similarityFunction||A.similarityFunction;let o=-1;if("function"==typeof i){let n=Number.MIN_VALUE;for(let r=0;r<t.length;r++){const s=i(e,t[r]);s>n&&(n=s,o=r)}}else{if("function"!=typeof r)throw new Error("A similarity or distance function it's required");{let n=Number.MAX_VALUE;for(let i=0;i<t.length;i++){const s=r(e,t[i]);s<n&&(n=s,o=i)}}}return o}function k(t,e,n,r){for(var i=0;i<t.length;i++)n[i]=z(e,t[i],{distanceFunction:r});return n}function x(t,e){const n=65535&(t>>>=0);return((t-n)*(e>>>=0)>>>0)+n*e>>>0}class I{constructor(t=Date.now()){this.state=new Uint32Array(4),this.init(t),this.random=this.getFloat.bind(this)}getUint32(){return this.nextState(),this.state[3]+this.state[2]>>>0}getFloat(){return(this.getUint32()>>>8)*(1/16777216)}init(t){if(!Number.isInteger(t))throw new TypeError("seed must be an integer");this.state[0]=t,this.state[1]=0,this.state[2]=0,this.state[3]=0;for(let e=1;e<8;e++)this.state[3&e]^=e+x(1812433253,this.state[e-1&3]^this.state[e-1&3]>>>30>>>0)>>>0;this.periodCertification();for(let e=0;e<8;e++)this.nextState()}periodCertification(){0===this.state[0]&&0===this.state[1]&&0===this.state[2]&&0===this.state[3]&&(this.state[0]=88,this.state[1]=83,this.state[2]=65,this.state[3]=68)}nextState(){let t=this.state[0];t^=t<<15,t^=t>>>18,t^=this.state[3]<<11,this.state[0]=this.state[1],this.state[1]=this.state[2],this.state[2]=this.state[3],this.state[3]=t}}function E(t,e,n){const r=e();if(n){let t=0;for(;r>n[t];)t++;return t}return Math.floor(r*t)}var F=function(t,e={},n=Math.random){const{size:r=1,replace:i=!1,probabilities:o}=e;let s,a;if(s="number"==typeof t?function(t){const e=[];for(let n=0;n<t;n++)e.push(n);return e}(t):t.slice(),o){if(!i)throw new Error("choice with probabilities and no replacement is not implemented");if(o.length!==s.length)throw new Error("the length of probabilities option should be equal to the number of choices");a=[o[0]];for(let t=1;t<o.length;t++)a[t]=a[t-1]+o[t];if(Math.abs(1-a[a.length-1])>1e-8)throw new Error("probabilities should sum to 1, but instead sums to "+a[a.length-1])}if(!1===i&&r>s.length)throw new Error("size option is too large");const c=[];for(let u=0;u<r;u++){const t=E(s.length,n,a);c.push(s[t]),i||s.splice(t,1)}return c};class M{constructor(t=Math.random){if("number"==typeof t){const e=new I(t);this.randomGenerator=e.random}else this.randomGenerator=t}choice(t,e){return F(t,e,this.randomGenerator)}random(){return this.randomGenerator()}randInt(t,e){return void 0===e&&(e=t,t=0),t+Math.floor(this.randomGenerator()*(e-t))}randomSample(t){const e=[];for(let n=0;n<t;n++)e.push(this.random());return e}}var R=n(1337);function S(t,e){const n=new R.b(t.rows,e.rows);for(let r=0;r<t.rows;r++)for(let i=0;i<e.rows;i++)n.set(r,i,y(t.getRow(r),e.getRow(i)));return n}function N(t){let e=[];for(let n=0;n<t;n++)e.push(n);return e}function V(t){let e=[t[0]];for(let n=1;n<t.length;n++)e[n]=e[n-1]+t[n];return e}const C=Symbol("distance");class U{constructor(t,e,n,r,i){this.clusters=t,this.centroids=e,this.converged=n,this.iterations=r,this[C]=i}nearest(t){const e=new Array(t.length);return k(t,this.centroids.map((function(t){return t.centroid})),e,this[C])}computeInformation(t){for(var e=this.centroids.map((function(t){return{centroid:t,error:0,size:0}})),n=0;n<t.length;n++)e[this.clusters[n]].error+=this[C](t[n],this.centroids[this.clusters[n]]),e[this.clusters[n]].size++;for(var r=0;r<this.centroids.length;r++)e[r].size?e[r].error/=e[r].size:e[r].error=null;return new U(this.clusters,e,this.converged,this.iterations,this[C])}}const G={maxIterations:100,tolerance:1e-6,withIterations:!1,initialization:"kmeans++",distanceFunction:y};function _(t,e,n,r,i,o){var s=function(t,e,n,r){const i=e[0].length;for(var o=new Array(r),s=new Array(r),a=0;a<r;a++){o[a]=new Array(i),s[a]=0;for(var c=0;c<i;c++)o[a][c]=0}for(var u=0;u<e.length;u++){s[n[u]]++;for(var l=0;l<i;l++)o[n[u]][l]+=e[u][l]}for(var h=0;h<r;h++)for(var f=0;f<i;f++)s[h]?o[h][f]/=s[h]:o[h][f]=t[h][f];return o}(t,e,n=k(e,t,n,i.distanceFunction),r),a=function(t,e,n,r){for(var i=0;i<t.length;i++)if(n(t[i],e[i])>r)return!1;return!0}(s,t,i.distanceFunction,i.tolerance);return new U(n,s,a,o,i.distanceFunction)}function D(t,e,n){if(n=Object.assign({},G,n),e<=0||e>t.length||!Number.isInteger(e))throw new Error("K should be a positive integer smaller than the number of points");var r;if(Array.isArray(n.initialization)){if(n.initialization.length!==e)throw new Error("The initial centers should have the same length as K");r=n.initialization}else switch(n.initialization){case"kmeans++":r=function(t,e,n={}){const r=(t=new R.b(t)).rows,i=new M(n.seed),o=[],s=n.localTrials||2+Math.floor(Math.log(e)),a=i.randInt(r);o.push(t.getRow(a));let c=new R.b(1,t.rows);for(let f=0;f<t.rows;f++)c.set(0,f,y(t.getRow(f),o[0]));let u=[V(c.getRow(0))];const l=1/u[0][r-1];let h=R.b.mul(c,l);for(let f=1;f<e;f++){const e=i.choice(r,{replace:!0,size:s,probabilities:h[0]}),n=S(t.selection(e,N(t.columns)),t);let a,l,d;for(let t=0;t<s;t++){const r=R.b.min(c,[n.getRow(t)]),i=r.sum();(void 0===a||i<l)&&(a=e[t],l=i,d=r)}o[f]=t.getRow(a),c=d,u=[V(c.getRow(0))],h=R.b.mul(c,1/u[0][r-1])}return o}(t,e,n);break;case"random":r=function(t,e,n){return new M(n).choice(t,{size:e})}(t,e,n.seed);break;case"mostDistant":r=function(t,e,n,r){const i=new M(r);var o=new Array(e);if(o[0]=Math.floor(i.random()*t.length),e>1){for(var s={dist:-1,index:-1},a=0;a<t.length;++a)n[o[0]][a]>s.dist&&(s.dist=n[o[0]][a],s.index=a);if(o[1]=s.index,e>2)for(var c=2;c<e;++c){for(var u={dist:-1,index:-1},l=0;l<t.length;++l){for(var h={dist:Number.MAX_VALUE,index:-1},f=0;f<c;++f)n[f][l]<h.dist&&-1===o.indexOf(l)&&(h={dist:n[f][l],index:l});h.dist!==Number.MAX_VALUE&&h.dist>u.dist&&(u=Object.assign({},h))}o[c]=u.index}}return o.map(e=>t[e])}(t,e,function(t,e){for(var n=new Array(t.length),r=0;r<t.length;++r)for(var i=r;i<t.length;++i){n[r]||(n[r]=new Array(t.length)),n[i]||(n[i]=new Array(t.length));const o=e(t[r],t[i]);n[r][i]=o,n[i][r]=o}return n}(t,n.distanceFunction),n.seed);break;default:throw new Error(`Unknown initialization method: "${n.initialization}"`)}0===n.maxIterations&&(n.maxIterations=Number.MAX_VALUE);var i=new Array(t.length);if(n.withIterations)return function*(t,e,n,r,i){for(var o,s=!1,a=0;!s&&a<i.maxIterations;)o=_(t,e,n,r,i,++a),yield o.computeInformation(e),s=o.converged,t=o.centroids}(r,t,i,e,n);for(var o,s=!1,a=0;!s&&a<n.maxIterations;)s=(o=_(r,t,i,e,n,++a)).converged,r=o.centroids;return o.computeInformation(t)}var L=n(551),O=n.n(L),X=n(557),j=n.n(X),q=n(788),T=n.n(q),K=n(1008),J=n(558),P=n(684),Q=n(519),$=n(887),B=n(2935),H=n(448),W=n(762);function Y(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=m()(t);if(e){var i=m()(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return f()(this,n)}}var Z=w()("th",{},void 0,"Cluster"),tt=w()("th",{},void 0,"Size"),et=function(t,e){return w()(K.a,{bordered:!0,size:"sm"},void 0,w()("thead",{},void 0,w()("tr",{},void 0,Z,e.map((function(t,e){return w()("th",{},e,e+1)})))),w()("tbody",{},void 0,t.map((function(t,n){return w()("tr",{},n,w()("th",{},void 0,t),e.map((function(t,e){return w()("td",{},e,t.centroid[n].toFixed(4))})))}))),w()("tbody",{},void 0,w()("tr",{},void 0,tt,e.map((function(t,e){return w()("th",{},e,t.size)})))))},nt=w()("span",{className:"title"},void 0,"kmeans Summary"),rt=w()("span",{},void 0,"kmeans Clustering",w()(W.a,{title:"kmeans Clustering",content:"Algorithm to partition observations into k clusters by iteratively assigning them to the cluster with the nearest mean."})),it=w()(Q.b,{legend:"Number of clusters",min:1,defaultValue:3}),ot=w()(P.a,{legend:"Attach clusters to table?",defaultValue:!1}),st=function(t){l()(n,t);var e=Y(n);function n(t){var r;return i()(this,n),r=e.call(this,t),g()(c()(r),"compute",(function(t,e,n,i){for(var o=[],s=r.props.data[t[0]].length,a=0;a<s;a++){for(var c=[],u=0;u<t.length;u++)c[u]=r.props.data[t[u]][a];o.push(c)}var l=D(o,e,{initialization:i});if(n){var h=j()(r.props.data,1),f=r.props.categorical.slice(),d=t.map((function(t){return t[0]})).join(""),m=Object(B.a)("kmeans_cluster_"+d,T()(0,e,1).map((function(t){return"Cluster ".concat(t+1)})));h[m]=l.clusters.map((function(t){return"Cluster ".concat(t+1)})),O()(f,m)||f.push(m),r.props.onGenerate(f,h)}r.props.logAction(H.q,{variables:t,K:e,attach:n,initialization:i});var p={variable:"kmeans Summary",type:"kmeans",value:w()("div",{style:{overflowX:"auto",width:"100%"}},void 0,nt,w()("p",{},void 0,"The algorithm ",l.converged?"converged":"did not converge"," after ",l.iterations," iterations"),et(t,l.centroids))};r.props.onCreated(p)})),r}return s()(n,[{key:"render",value:function(){var t=this.props,e=t.quantitative,n=t.originalQuantitative;return w()($.a,{title:rt,autoStart:!1,onGenerate:this.compute},void 0,w()(J.a,{legend:"Variables:",multi:!0,defaultValue:n,options:e,closeMenuOnSelect:!1}),it,ot,w()(J.a,{legend:"Initialization method",options:["kmeans++","random","mostDistant"],defaultValue:"kmeans++"}))}}]),n}(b.Component);st.defaultProps={logAction:function(){}};e.default=st}}]);