(self.webpackChunk=self.webpackChunk||[]).push([[5738],{257427:function(e,t,n){"use strict";n.r(t);n(382139);var r=n(858255),o=n(264659),a=n(904730),i=n(673989),s=n(175663),u=n(750591),c=n(575630),l=n(151119),p=(n(850110),n(319371),n(202784)),f=(n(213980),n(770561)),d=n(260952),h=n(320231),m=n.n(h),Z=n(636150),y=n.n(Z),g=n(801420),v=n.n(g),C=n(800562),T=n.n(C),x=n(737535),S=n.n(x),k=n(989202),V=n.n(k),b=n(927447),q=n(741709),R=n(661599),I=n(65034),P=n(5140),D=n(580067);function M(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,r=(0,c.Z)(e);if(t){var o=(0,c.Z)(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return(0,u.Z)(this,n)}}function w(e,t){return e?"Classificiation"===t?S()(V()(e.length)):e.length<3?1:S()(e.length/3):1}var z=function(e){(0,s.Z)(n,e);var t=M(n);function n(e){var a;return(0,o.Z)(this,n),a=t.call(this,e),(0,l.Z)((0,i.Z)(a),"compute",(function(){var e=a.state,t=e.y,n=e.x,o=e.type,i=e.nTrees,s=e.nTry,u=e.impurityMeasure,c=e.scoreThreshold,l=e.maxTreeDepth,p=e.minItemsCount,f=(0,r.Z)(I.Z,{x:n,y:t,type:o,nTrees:i,nTry:s,impurityMeasure:u,scoreThreshold:c,maxTreeDepth:l,minItemsCount:p,quantitative:a.props.quantitative,data:a.props.data,onPredict:function(e,n){var r=T()(a.props.data,1);if("Classification"===o){var i=a.props.categorical.slice(),s=e.predict(r).map((function(e){return String(e)})),u="pred_forest"+n;r[u]=s,y()(i,u)||i.push(u),u="correct_forest"+n;var c=a.props.data[t];r[u]=s.map((function(e,t){return e===String(c[t])?"Yes":"No"})),y()(i,u)||i.push(u),a.props.onGenerate(a.props.quantitative,i,r)}}});a.props.logAction(P.P$,{y:t,x:n,type:o,nTrees:i,nTry:s}),a.props.onCreated(f)})),a.state={y:e.categorical[0],x:e.quantitative[0],type:"Classification",nTrees:50,nTry:1,impurityMeasure:"gini",scoreThreshold:.01,maxTreeDepth:20,minItemsCount:50},a}return(0,a.Z)(n,[{key:"render",value:function(){var e=this,t=this.props,n=t.categorical,o=t.quantitative,a=t.t,i=this.state,s=i.x,u=i.y,c=i.type,l=i.nTrees,p=i.nTry;return(0,r.Z)(d.Z,{style:{fontSize:"14px",maxWidth:600}},void 0,(0,r.Z)(d.Z.Header,{as:"h4"},void 0,a("Random Forest"),(0,r.Z)(D.Z,{title:a("Random Forest"),content:"Instead of growing a single decision tree, a random forest as an ensemble method constructs many decision trees at once and returns the average of the predictions (regression case) or the majority vote (classification case) of the individual trees"})),(0,r.Z)(d.Z.Body,{},void 0,(0,r.Z)(b.Z,{legend:a("type"),options:["Classification"],defaultValue:c,onChange:function(t){t!==e.state.type&&e.setState({type:t,y:"Classification"===t?n[0]:o[0],nTry:w(e.state.x,t)})}}),(0,r.Z)(b.Z,{legend:a("outcome-y"),options:"Classification"===c?n:o,defaultValue:u,onChange:function(t){return e.setState({y:t})}}),(0,r.Z)(b.Z,{legend:a("predictors-x"),multi:!0,options:m()(o.concat(n)),defaultValue:s||"",onChange:function(t){e.setState({x:t,nTry:w(t,c)})}}),(0,r.Z)(q.Z,{legend:a("number-of-trees"),defaultValue:l,inputStyle:{float:"right"},onChange:function(t){return e.setState({nTrees:t})},tooltipPlacement:"top",min:1}),(0,r.Z)(q.Z,{legend:a("predictors-to-check"),defaultValue:p,inputStyle:{float:"right"},onChange:function(t){return e.setState({nTry:t})},tooltipPlacement:"top",min:1,max:v()(s)?s.length:1}),(0,r.Z)(R.Z,{header:a("change-tree-features"),headerStyle:{fontSize:"1rem"}},void 0,(0,r.Z)(q.Z,{legend:a("score-threshold-for-split"),min:0,max:1,step:.001,defaultValue:this.state.scoreThreshold,onChange:function(t){return e.setState({scoreThreshold:t})}}),(0,r.Z)(q.Z,{legend:a("maximum-tre-depth"),min:1,max:50,defaultValue:this.state.maxTreeDepth,onChange:function(t){return e.setState({maxTreeDepth:t})}}),(0,r.Z)(q.Z,{legend:a("min-obs-leafs"),min:1,defaultValue:this.state.minItemsCount,onChange:function(t){return e.setState({minItemsCount:t})}})),"Classification"===c?(0,r.Z)(b.Z,{legend:a("impurity-measure"),defaultValue:this.state.impurityMeasure,options:["gini","entropy"],onChange:function(t){return e.setState({impurityMeasure:t})}}):null,(0,r.Z)(f.Z,{disabled:!s||0===s.length,variant:"primary",block:!0,onClick:this.compute},void 0,a("calculate"))))}}]),n}(p.Component);z.defaultProps={logAction:function(){}},t.default=z},580067:function(e,t,n){"use strict";var r,o=n(858255),a=(n(202784),n(213980),n(770561)),i=n(435376),s=n(203858),u=n(175891),c=n(109361);t.Z=function(e){var t=(0,o.Z)(i.Z,{id:"popover-positioned-right"},void 0,(0,o.Z)(s.Z,{},void 0,e.title),(0,o.Z)(u.Z,{},void 0,e.content));return(0,o.Z)(c.Z,{trigger:["click","hover","focus"],placement:"left",rootClose:!0,overlay:t},void 0,r||(r=(0,o.Z)(a.Z,{size:"sm",variant:"outline-secondary",className:"question-button"},void 0,(0,o.Z)("div",{className:"fa fa-question"}))))}}}]);