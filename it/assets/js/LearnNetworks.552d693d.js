(window.webpackJsonp=window.webpackJsonp||[]).push([[202],{461:function(e,t,r){"use strict";var a=r(403),n=r(406),i=r(407),o=r.n(i),s=r(0),l=r.n(s),u=r(412),c=["xl","lg","md","sm","xs"],d=l.a.forwardRef((function(e,t){var r=e.bsPrefix,i=e.className,s=e.noGutters,d=e.as,f=void 0===d?"div":d,h=Object(n.a)(e,["bsPrefix","className","noGutters","as"]),v=Object(u.a)(r,"row"),p=v+"-cols",m=[];return c.forEach((function(e){var t,r=h[e];delete h[e];var a="xs"!==e?"-"+e:"";null!=(t=null!=r&&"object"==typeof r?r.cols:r)&&m.push(""+p+a+"-"+t)})),l.a.createElement(f,Object(a.a)({ref:t},h,{className:o.a.apply(void 0,[i,v,s&&"no-gutters"].concat(m))}))}));d.displayName="Row",d.defaultProps={noGutters:!1},t.a=d},481:function(e,t,r){"use strict";var a=r(403),n=r(406),i=r(407),o=r.n(i),s=r(0),l=r.n(s),u=r(412),c=l.a.forwardRef((function(e,t){var r=e.bsPrefix,i=e.fluid,s=e.as,c=void 0===s?"div":s,d=e.className,f=Object(n.a)(e,["bsPrefix","fluid","as","className"]),h=Object(u.a)(r,"container"),v="string"==typeof i?"-"+i:"-fluid";return l.a.createElement(c,Object(a.a)({ref:t},f,{className:o()(d,i?""+h+v:h)}))}));c.displayName="Container",c.defaultProps={fluid:!1},t.a=c},4938:function(e,t,r){"use strict";var a=r(495),n=r(1208),i=r(738),o=r(948),s=r(584),l=[].slice;a(a.P+a.F*r(523)((function(){n&&l.call(n)})),"Array",{slice:function(e,t){var r=s(this.length),a=i(this);if(t=void 0===t?r:t,"Array"==a)return l.call(this,e,t);for(var n=o(e,r),u=o(t,r),c=s(u-n),d=new Array(c),f=0;f<c;f++)d[f]="String"==a?this.charAt(n+f):this[n+f];return d}})},6511:function(e,t,r){"use strict";r.r(t);r(421);var a=r(404),n=r.n(a),i=r(413),o=r.n(i),s=r(415),l=r.n(s),u=r(425),c=r.n(u),d=r(417),f=r.n(d),h=r(418),v=r.n(h),p=r(416),m=r.n(p),w=r(410),y=r.n(w),g=(r(881),r(4938),r(0)),b=(r(401),r(4082)),x=r(4081),N=r(481),k=r(461),P=r(506),j=r(745),O=r.n(j),R=r(1189),A=r.n(R),T=r(713),E=r(674),G=r(511),B=r(565),L=r(1608),C=r(524),I=r(510),J=r(423);function K(e,t,r,a){for(var n=0,i=0;i<e.length;i++){var o=e[i];o.source===t&&o.target===r&&(n+=1),o.source===t&&o.target===a&&(n+=1),o.source===r&&o.target===a&&(n+=1)}return n}var S=function(e,t){for(var r=0,a=0,n=0;n<e.length;n++)for(var i=0;i<n;i++)for(var o=0;o<i;o++){var s=K(t,n,i,o);2===s&&(a+=1),3===s&&(a+=3,r+=1)}return 3*r/a};function V(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var r,a=m()(e);if(t){var n=m()(this).constructor;r=Reflect.construct(a,arguments,n)}else r=a.apply(this,arguments);return v()(this,r)}}Object(J.a)("LearnNetworks");var W=n()("p",{},void 0,n()(b.a,{i18nKey:"intro-2",ns:"LearnNetworks"},void 0,"Let us consider one of the simplest available network models. In the Erd\u0151s\u2013R\xe9nyi model, there is a fixed probability ",n()(I.a,{raw:"p"})," that an edge exists between any two nodes. We also assume that whether or not an edge exists between two nodes is independent of whether or not other edges exist.")),F=n()("p",{},void 0,n()(b.a,{i18nKey:"intro-3",ns:"LearnNetworks"},void 0,"In this model, if we have ",n()(I.a,{raw:"m"})," nodes, each node can be connected to ",n()(I.a,{raw:"m-1"})," other nodes.  The number of edges attached to each node (the degree) is then ",n()(I.a,{raw:"\\text{Binomial}(m-1,p)"}),".")),q=n()(E.a,{id:"networks"}),z=function(e){f()(r,e);var t=V(r);function r(e){var a;o()(this,r),a=t.call(this,e),y()(c()(a),"handleGenerate",(function(e,t){for(var r=new Array(e),n=0;n<r.length;n++)r[n]={id:n};for(var i=[],o=0;o<r.length;o++)for(var s=0;s<o;s++)A()()<t&&i.push({source:o,target:s});var l,u,c={network:{links:i,nodes:r}},d=a.state.numNodes,f=a.state.edgeProb;e!==d||t!==f?(d=e,u=[],l=new Array(.5*e*(e-1)+1).fill(0)):(l=a.state.tally,u=a.state.transitivities.slice()),u.push(S(r,i)),l[i.length]+=1,c.numNodes=d,c.edgeProb=t,c.tally=l,c.transitivities=u,a.setState(c)}));return a.state={network:{links:[],nodes:[]},numNodes:10,edgeProb:.5,transitivities:[],tally:new Array(46).fill(0)},a}return l()(r,[{key:"renderTallyPlot",value:function(){return this.props.showEdgeChart?n()(C.a,{removeButtons:!0,layout:{title:this.props.t("number-of-edges-per-generated-network"),height:250},data:[{x:O()(0,this.state.tally.length,1),y:this.state.tally,type:"bar"}]}):null}},{key:"renderTransitivities",value:function(){if(!this.props.showTransitivities)return null;var e=[{x:this.state.transitivities,type:"histogram"}];return n()(C.a,{removeButtons:!0,layout:{title:this.props.t("global-clustering-coefficient"),height:250},data:e})}},{key:"render",value:function(){var e=this.props.t;return n()(N.a,{style:{maxWidth:1200,margin:"0 auto"}},void 0,n()(k.a,{},void 0,n()(P.a,{md:6},void 0,n()(T.a,{id:"networks-dashboard",onGenerate:this.handleGenerate},void 0,n()("p",{},void 0,e("intro-1")),W,F,n()(G.b,{legend:"m (".concat(e("number-of-nodes"),")"),defaultValue:10,step:1,min:0,max:this.props.maxNumNodes}),n()(G.b,{legend:"p (".concat(e("edge-probability"),")"),defaultValue:.5,step:.01,max:1,min:0}))),n()(P.a,{md:6},void 0,n()(B.a,{},void 0,n()(L.a,{width:500,height:350,data:this.state.network}),this.renderTallyPlot(),this.renderTransitivities()),q)))}}]),r}(g.Component);z.defaultProps={maxNumNodes:30,showEdgeChart:!1,showTransitivities:!1};t.default=Object(x.a)("LearnNetworks")(z)},881:function(e,t,r){var a=r(495);a(a.P,"Array",{fill:r(895)}),r(828)("fill")}}]);