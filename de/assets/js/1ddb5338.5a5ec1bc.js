(self.webpackChunk=self.webpackChunk||[]).push([[108],{603905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return c},kt:function(){return m}});var i=t(202784);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var u=i.createContext({}),s=function(e){var n=i.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=s(e.components);return i.createElement(u.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},p=i.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,u=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=s(t),m=r,f=p["".concat(u,".").concat(m)]||p[m]||d[m]||a;return t?i.createElement(f,o(o({ref:n},c),{},{components:t})):i.createElement(f,o({ref:n},c))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,o=new Array(a);o[0]=p;var l={};for(var u in n)hasOwnProperty.call(n,u)&&(l[u]=n[u]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var s=2;s<a;s++)o[s]=t[s];return i.createElement.apply(null,o)}return i.createElement.apply(null,t)}p.displayName="MDXCreateElement"},358215:function(e,n,t){"use strict";var i=t(202784);n.Z=function(e){var n=e.children,t=e.hidden,r=e.className;return i.createElement("div",{role:"tabpanel",hidden:t,className:r},n)}},855064:function(e,n,t){"use strict";t.d(n,{Z:function(){return d}});var i=t(202784),r=t(79443);var a=function(){var e=(0,i.useContext)(r.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},o=t(386010),l="tabItem_1uMI",u="tabItemActive_2DSg";var s=37,c=39;var d=function(e){var n=e.lazy,t=e.block,r=e.defaultValue,d=e.values,p=e.groupId,m=e.className,f=a(),g=f.tabGroupChoices,k=f.setTabGroupChoices,b=(0,i.useState)(r),h=b[0],v=b[1],N=i.Children.toArray(e.children),w=[];if(null!=p){var y=g[p];null!=y&&y!==h&&d.some((function(e){return e.value===y}))&&v(y)}var C=function(e){var n=e.currentTarget,t=w.indexOf(n),i=d[t].value;v(i),null!=p&&(k(p,i),setTimeout((function(){var e,t,i,r,a,o,l,s;(e=n.getBoundingClientRect(),t=e.top,i=e.left,r=e.bottom,a=e.right,o=window,l=o.innerHeight,s=o.innerWidth,t>=0&&a<=s&&r<=l&&i>=0)||(n.scrollIntoView({block:"center",behavior:"smooth"}),n.classList.add(u),setTimeout((function(){return n.classList.remove(u)}),2e3))}),150))},z=function(e){var n,t;switch(e.keyCode){case c:var i=w.indexOf(e.target)+1;t=w[i]||w[0];break;case s:var r=w.indexOf(e.target)-1;t=w[r]||w[w.length-1]}null==(n=t)||n.focus()};return i.createElement("div",{className:"tabs-container"},i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":t},m)},d.map((function(e){var n=e.value,t=e.label;return i.createElement("li",{role:"tab",tabIndex:h===n?0:-1,"aria-selected":h===n,className:(0,o.Z)("tabs__item",l,{"tabs__item--active":h===n}),key:n,ref:function(e){return w.push(e)},onKeyDown:z,onFocus:C,onClick:C},t)}))),n?(0,i.cloneElement)(N.filter((function(e){return e.props.value===h}))[0],{className:"margin-vert--md"}):i.createElement("div",{className:"margin-vert--md"},N.map((function(e,n){return(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==h})}))))}},79443:function(e,n,t){"use strict";var i=(0,t(202784).createContext)(void 0);n.Z=i},675474:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return d},toc:function(){return p},default:function(){return f}});var i=t(722122),r=t(419756),a=(t(202784),t(603905)),o=t(855064),l=t(358215),u=["components"],s={id:"quiz",title:"Quiz",sidebar_label:"Quiz"},c=void 0,d={unversionedId:"questions/quiz",id:"questions/quiz",isDocsHomePage:!1,title:"Quiz",description:"Eine Quizkomponente, die eine Folge von Fragekomponenten anzeigt.",source:"@site/i18n/de/docusaurus-plugin-content-docs/current/questions/quiz.md",sourceDirName:"questions",slug:"/questions/quiz",permalink:"/de/docs/questions/quiz",editUrl:"https://github.com/isle-project/isle-editor/edit/master/docusaurus/website/docs/questions/quiz.md",version:"current",lastUpdatedBy:"Planeshifter",lastUpdatedAt:1614117474,formattedLastUpdatedAt:"23.2.2021",frontMatter:{id:"quiz",title:"Quiz",sidebar_label:"Quiz"},sidebar:"docs",previous:{title:"Question Form",permalink:"/de/docs/questions/question-form"},next:{title:"Range Question",permalink:"/de/docs/questions/range-question"}},p=[{value:"Optionen",id:"optionen",children:[]},{value:"Beispiele",id:"beispiele",children:[]}],m={toc:p};function f(e){var n=e.components,t=(0,r.Z)(e,u);return(0,a.kt)("wrapper",(0,i.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Eine Quizkomponente, die eine Folge von Fragekomponenten anzeigt."),(0,a.kt)("h2",{id:"optionen"},"Optionen"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"confidence")," | ",(0,a.kt)("inlineCode",{parentName:"li"},"boolean"),": ob eine Likert-Skala angezeigt werden soll, die nach dem Vertrauen in die Antwort des Benutzers fragt. Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"false"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"forceConfidence")," | ",(0,a.kt)("inlineCode",{parentName:"li"},"boolean"),": steuert, ob ein Benutzer eine Vertrauensstufe angeben muss, bevor er zur n\xe4chsten Frage \xfcbergehen kann. Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"false"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"count")," | ",(0,a.kt)("inlineCode",{parentName:"li"},"number"),": Anzahl der Fragen, die in das Quiz aufgenommen werden sollen. Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"none"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"questions")," | ",(0,a.kt)("inlineCode",{parentName:"li"},"array (required)"),": Array von Fragen, aus dem die Fragen zuf\xe4llig ausgew\xe4hlt werden. Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"none"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"active")," | ",(0,a.kt)("inlineCode",{parentName:"li"},"boolean"),": steuert, ob der Timer f\xfcr das Quiz aktiv ist. Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"true"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"duration")," | ",(0,a.kt)("inlineCode",{parentName:"li"},"number"),": Dauer des Quiz (in Minuten); wenn die Zeit abgelaufen ist, wird die Zusammenfassungsseite angezeigt. Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"none"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"skippable")," | ",(0,a.kt)("inlineCode",{parentName:"li"},"boolean"),": steuert, ob Fragen im Quiz \xfcbersprungen werden k\xf6nnen. Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"true"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"footerNodes")," | ",(0,a.kt)("inlineCode",{parentName:"li"},"array"),": Array von Knoten, die in der Fu\xdfzeile jeder Frage angezeigt werden sollen. Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"[]"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"nextLabel")," | ",(0,a.kt)("inlineCode",{parentName:"li"},"string"),": Beschriftung der Schaltfl\xe4che zum Weiterschalten zur n\xe4chsten Frage. Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"none"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"provideFeedback")," | ",(0,a.kt)("inlineCode",{parentName:"li"},"boolean"),": steuert, ob den Sch\xfclern nach Abschluss des Quiz eine R\xfcckmeldung \xfcber die Korrektheit ihrer Antworten angezeigt werden soll. Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"true"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"showFinishButton")," | ",(0,a.kt)("inlineCode",{parentName:"li"},"boolean"),": steuert, ob die Schaltfl\xe4che zum Beenden des Quiz und zum direkten Springen zur Ergebnisseite angezeigt werden soll. Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"false"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"finishLabel")," | ",(0,a.kt)("inlineCode",{parentName:"li"},"string"),": Beschriftung der Schaltfl\xe4che zum Beenden des Quiz. Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"none"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"downloadButton")," | ",(0,a.kt)("inlineCode",{parentName:"li"},"boolean"),": steuert, ob eine Schaltfl\xe4che zum Herunterladen der Antworten angezeigt werden soll. Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"true"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"onFinished")," | ",(0,a.kt)("inlineCode",{parentName:"li"},"function"),": Callback, der aufgerufen wird, wenn das Quiz beendet ist und die Ergebnisseite angezeigt wird. Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"onFinished() {}"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"onSubmit")," | ",(0,a.kt)("inlineCode",{parentName:"li"},"function"),": Callback, der aufgerufen wird, wenn der Benutzer eine Antwort sendet. Default: ",(0,a.kt)("inlineCode",{parentName:"li"},"onSubmit() {}"),".")),(0,a.kt)("h2",{id:"beispiele"},"Beispiele"),(0,a.kt)(o.Z,{defaultValue:"minimal",values:[{label:"Minimal",value:"minimal"},{label:"Subset of Questions",value:"subset"},{label:"Not Skippable",value:"notSkippable"},{label:"Confidence Check",value:"confidenceCheck"},,],lazy:!0,mdxType:"Tabs"},(0,a.kt)(l.Z,{value:"minimal",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'<Quiz\n    questions={[\n        <FreeTextQuestion \n            question="What is the capital of France?" \n            rows={1} \n            solution="Paris" \n        />,\n        <FreeTextQuestion \n            question="What is the capital of Poland?" \n            rows={1} \n            solution="Warsaw" \n        />\n    ]}\n/>\n'))),(0,a.kt)(l.Z,{value:"subset",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'<Quiz\n    count={3}\n    questions={[\n        <FreeTextQuestion \n            question="What is the capital of France?" \n            rows={1} \n            solution="Paris" \n        />,\n        <FreeTextQuestion \n            question="What is the capital of Poland?" \n            rows={1} \n            solution="Warsaw" \n        />,\n        <FreeTextQuestion \n            question="What is the capital of Portugal?" \n            rows={1} \n            solution="Lisbon" \n        />,     \n        <FreeTextQuestion \n            question="What is the capital of Egypt?" \n            rows={1} \n            solution="Cairo" \n        />\n    ]}\n/>\n'))),(0,a.kt)(l.Z,{value:"notSkippable",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'<Quiz\n    skippable={false}\n    questions={[\n        <FreeTextQuestion \n            question="What is the capital of France?" \n            rows={1} \n            solution="Paris" \n        />,\n        <FreeTextQuestion \n            question="What is the capital of Poland?" \n            rows={1} \n            solution="Warsaw" \n        />,\n        <FreeTextQuestion \n            question="What is the capital of Portugal?" \n            rows={1} \n            solution="Lisbon" \n        />,     \n        <FreeTextQuestion \n            question="What is the capital of Egypt?" \n            rows={1} \n            solution="Cairo" \n        />\n    ]}\n/>\n'))),(0,a.kt)(l.Z,{value:"confidenceCheck",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'<Quiz\n    confidence\n    forceConfidence\n    count={4}\n    questions={[\n        <FreeTextQuestion \n            question="What is the capital of France?" \n            rows={1} \n            solution="Paris" \n        />,\n        <FreeTextQuestion \n            question="What is the capital of Poland?" \n            rows={1} \n            solution="Warsaw" \n        />,\n        <FreeTextQuestion \n            question="What is the capital of Portugal?" \n            rows={1} \n            solution="Lisbon" \n        />,     \n        <FreeTextQuestion \n            question="What is the capital of Egypt?" \n            rows={1} \n            solution="Cairo" \n        />\n    ]}\n/>\n')))))}f.isMDXComponent=!0},386010:function(e,n,t){"use strict";function i(e){var n,t,r="";if("string"==typeof e||"number"==typeof e)r+=e;else if("object"==typeof e)if(Array.isArray(e))for(n=0;n<e.length;n++)e[n]&&(t=i(e[n]))&&(r&&(r+=" "),r+=t);else for(n in e)e[n]&&(r&&(r+=" "),r+=n);return r}function r(){for(var e,n,t=0,r="";t<arguments.length;)(e=arguments[t++])&&(n=i(e))&&(r&&(r+=" "),r+=n);return r}t.d(n,{Z:function(){return r}})}}]);