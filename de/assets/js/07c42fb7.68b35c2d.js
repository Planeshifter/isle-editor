(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{119:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return r})),n.d(t,"metadata",(function(){return o})),n.d(t,"toc",(function(){return b})),n.d(t,"default",(function(){return u}));var i=n(3),l=n(7),a=(n(0),n(410)),r={id:"plotly",title:"Plotly",sidebar_label:"Plotly"},o={unversionedId:"plotly",id:"plotly",isDocsHomePage:!1,title:"Plotly",description:"Plotly-Visualisierung.",source:"@site/i18n/de/docusaurus-plugin-content-docs/current/plotly.md",slug:"/plotly",permalink:"/de/docs/plotly",editUrl:"https://github.com/isle-project/isle-editor/edit/master/docusaurus/website/docs/plotly.md",version:"current",lastUpdatedBy:"Planeshifter",lastUpdatedAt:1614613459,formattedLastUpdatedAt:"1.3.2021",sidebar_label:"Plotly",sidebar:"docs",previous:{title:"Typewriter",permalink:"/de/docs/typewriter"},next:{title:"Bar Chart",permalink:"/de/docs/plots/barchart"}},b=[{value:"Optionen",id:"optionen",children:[]},{value:"Beispiele",id:"beispiele",children:[]}],c={toc:b};function u(e){var t=e.components,n=Object(l.a)(e,["components"]);return Object(a.b)("wrapper",Object(i.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Plotly-Visualisierung."),Object(a.b)("h2",{id:"optionen"},"Optionen"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"data")," | ",Object(a.b)("inlineCode",{parentName:"li"},"array (required)"),": Daten-Array. Default: ",Object(a.b)("inlineCode",{parentName:"li"},"none"),"."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"draggable")," | ",Object(a.b)("inlineCode",{parentName:"li"},"boolean"),": steuert, ob der Plot verschiebbar sein soll. Default: ",Object(a.b)("inlineCode",{parentName:"li"},"false"),"."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"editable")," | ",Object(a.b)("inlineCode",{parentName:"li"},"boolean"),": steuert, ob Beschriftungen des erstellten Plots editierbar sind. Default: ",Object(a.b)("inlineCode",{parentName:"li"},"false"),"."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"id")," | ",Object(a.b)("inlineCode",{parentName:"li"},"string"),": Bauteilkennzeichen. Default: ",Object(a.b)("inlineCode",{parentName:"li"},"none"),"."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"layout")," | ",Object(a.b)("inlineCode",{parentName:"li"},"object"),": Plotly-Layoutobjekt. Default: ",Object(a.b)("inlineCode",{parentName:"li"},"{}"),"."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"config")," | ",Object(a.b)("inlineCode",{parentName:"li"},"object"),": Konfigurationsm\xf6glichkeiten von Plotly (siehe: ",Object(a.b)("a",{parentName:"li",href:"https://plotly.com/javascript/configuration-options/"},"https://plotly.com/javascript/configuration-options/"),"). Default: ",Object(a.b)("inlineCode",{parentName:"li"},"{}"),"."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"legendButtons")," | ",Object(a.b)("inlineCode",{parentName:"li"},"boolean"),": steuert, ob Schaltfl\xe4chen zum \xc4ndern der Legende angezeigt werden sollen. Default: ",Object(a.b)("inlineCode",{parentName:"li"},"true"),"."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"meta")," | ",Object(a.b)("inlineCode",{parentName:"li"},"object"),": Plot-Meta-Informationen. Default: ",Object(a.b)("inlineCode",{parentName:"li"},"none"),"."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"revision")," | ",Object(a.b)("inlineCode",{parentName:"li"},"number"),": wenn angegeben, bewirkt, dass die Darstellung aktualisiert wird, wenn der Revisionswert inkrementiert wird. Default: ",Object(a.b)("inlineCode",{parentName:"li"},"none"),"."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"style")," | ",Object(a.b)("inlineCode",{parentName:"li"},"object"),": CSS-Inline-Stile. Default: ",Object(a.b)("inlineCode",{parentName:"li"},"{}"),"."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"onAfterPlot")," | ",Object(a.b)("inlineCode",{parentName:"li"},"function"),": Callback-Funktion, die jedes Mal aufgerufen wird, wenn ein Diagramm gezeichnet wird. Default: ",Object(a.b)("inlineCode",{parentName:"li"},"onAfterPlot() {}"),"."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"onClick")," | ",Object(a.b)("inlineCode",{parentName:"li"},"function"),": Callback-Funktion, die aufgerufen wird, wenn ein beliebiges Element angeklickt wird. Default: ",Object(a.b)("inlineCode",{parentName:"li"},"onClick() {}"),"."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"onInitialized")," | ",Object(a.b)("inlineCode",{parentName:"li"},"function"),": Callback wird aufgerufen, sobald der Plot initialisiert ist; wird mit figure (Objekt mit drei Schl\xfcsseln, die den Eingabe-Requisiten entsprechen: ",Object(a.b)("inlineCode",{parentName:"li"},"data"),", ",Object(a.b)("inlineCode",{parentName:"li"},"layout")," und ",Object(a.b)("inlineCode",{parentName:"li"},"frames"),") und dem DOM-Knoten ",Object(a.b)("inlineCode",{parentName:"li"},"graphDiv")," aufgerufen. Default: ",Object(a.b)("inlineCode",{parentName:"li"},"onInitialized() {}"),"."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"onLegendClick")," | ",Object(a.b)("inlineCode",{parentName:"li"},"function"),": Callback-Funktion, die aufgerufen wird, wenn der Legendeneintrag angeklickt wird. Default: ",Object(a.b)("inlineCode",{parentName:"li"},"onLegendClick() {}"),"."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"onLegendDoubleClick")," | ",Object(a.b)("inlineCode",{parentName:"li"},"function"),": Callback-Funktion, die aufgerufen wird, wenn ein Legendenelement doppelt angeklickt wird. Default: ",Object(a.b)("inlineCode",{parentName:"li"},"onLegendDoubleClick() {}"),"."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"onRelayout")," | ",Object(a.b)("inlineCode",{parentName:"li"},"function"),": Callback-Funktion, die aufgerufen wird, wenn Relayout ausgel\xf6st wird. Default: ",Object(a.b)("inlineCode",{parentName:"li"},"onRelayout() {}"),"."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"onSelected")," | ",Object(a.b)("inlineCode",{parentName:"li"},"function"),": Callback-Funktion, die aufgerufen wird, wenn Elemente ausgew\xe4hlt werden. Default: ",Object(a.b)("inlineCode",{parentName:"li"},"onSelected() {}"),"."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"onShare")," | ",Object(a.b)("inlineCode",{parentName:"li"},"function"),': Callback-Funktion, die beim Klicken auf die Schaltfl\xe4che "Teilen" aufgerufen wird. Default: ',Object(a.b)("inlineCode",{parentName:"li"},"none"),"."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"removeButtons")," | ",Object(a.b)("inlineCode",{parentName:"li"},"boolean"),": steuert, ob alle Schaltfl\xe4chen entfernt werden sollen (abgesehen von der Vollbild-Schaltfl\xe4che, falls aktiviert). Default: ",Object(a.b)("inlineCode",{parentName:"li"},"false"),"."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"toggleFullscreen")," | ",Object(a.b)("inlineCode",{parentName:"li"},"boolean"),": steuert, ob die Darstellung des Plots im Vollbildmodus m\xf6glich sein soll. Default: ",Object(a.b)("inlineCode",{parentName:"li"},"true"),".")),Object(a.b)("h2",{id:"beispiele"},"Beispiele"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"<Plotly\n    data={[{\n        values: [ 24, 7, 0.5 ],\n        labels: [ 'English', 'Spanish', 'Other' ],\n        type: 'pie'\n            }]}\n    layout={{ width: 300 }}\n/>\n")))}u.isMDXComponent=!0},410:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var i=n(0),l=n.n(i);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function b(e,t){if(null==e)return{};var n,i,l=function(e,t){if(null==e)return{};var n,i,l={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var c=l.a.createContext({}),u=function(e){var t=l.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=u(e.components);return l.a.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return l.a.createElement(l.a.Fragment,{},t)}},s=l.a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,r=e.parentName,c=b(e,["components","mdxType","originalType","parentName"]),p=u(n),s=i,m=p["".concat(r,".").concat(s)]||p[s]||d[s]||a;return n?l.a.createElement(m,o(o({ref:t},c),{},{components:n})):l.a.createElement(m,o({ref:t},c))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,r=new Array(a);r[0]=s;var o={};for(var b in t)hasOwnProperty.call(t,b)&&(o[b]=t[b]);o.originalType=e,o.mdxType="string"==typeof e?e:i,r[1]=o;for(var c=2;c<a;c++)r[c]=n[c];return l.a.createElement.apply(null,r)}return l.a.createElement.apply(null,n)}s.displayName="MDXCreateElement"}}]);