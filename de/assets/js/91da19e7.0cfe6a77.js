(window.webpackJsonp=window.webpackJsonp||[]).push([[146],{240:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return l})),t.d(n,"metadata",(function(){return o})),t.d(n,"toc",(function(){return b})),t.d(n,"default",(function(){return s}));var r=t(3),a=t(7),i=(t(0),t(411)),l={id:"gate",title:"Gate",sidebar_label:"Gate"},o={unversionedId:"gate",id:"gate",isDocsHomePage:!1,title:"Gate",description:"Eine ISLE-Komponente, die es erlaubt, ihre Kinder nur f\xfcr reservierte Zielgruppen anzuzeigen.",source:"@site/i18n/de/docusaurus-plugin-content-docs/current/gate.md",slug:"/gate",permalink:"/de/docs/gate",editUrl:"https://github.com/isle-project/isle-editor/edit/master/docusaurus/website/docs/gate.md",version:"current",lastUpdatedBy:"Planeshifter",lastUpdatedAt:1613960760,sidebar_label:"Gate",sidebar:"docs",previous:{title:"Feedback Buttons",permalink:"/de/docs/feedback"},next:{title:"Text Editor",permalink:"/de/docs/text-editor"}},b=[{value:"Optionen",id:"optionen",children:[]},{value:"Beispiele",id:"beispiele",children:[]}],c={toc:b};function s(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},c,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Eine ISLE-Komponente, die es erlaubt, ihre Kinder nur f\xfcr reservierte Zielgruppen anzuzeigen."),Object(i.b)("h2",{id:"optionen"},"Optionen"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"user")," | ",Object(i.b)("inlineCode",{parentName:"li"},"boolean"),": wenn gesetzt, wird der Gated Content den Benutzern angezeigt. Default: ",Object(i.b)("inlineCode",{parentName:"li"},"false"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"notUser")," | ",Object(i.b)("inlineCode",{parentName:"li"},"boolean"),": wenn gesetzt, wird der gesperrte Inhalt ",Object(i.b)("strong",{parentName:"li"},"nicht")," f\xfcr Benutzer angezeigt. Default: ",Object(i.b)("inlineCode",{parentName:"li"},"false"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"enrolled")," | ",Object(i.b)("inlineCode",{parentName:"li"},"boolean"),": wenn eingestellt, wird der gesch\xfctzte Inhalt den im Kurs eingeschriebenen Teilnehmern angezeigt. Default: ",Object(i.b)("inlineCode",{parentName:"li"},"false"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"notEnrolled")," | ",Object(i.b)("inlineCode",{parentName:"li"},"boolean"),": wenn gesetzt, wird der gesperrte Inhalt den im Kurs eingeschriebenen Teilnehmern ",Object(i.b)("strong",{parentName:"li"},"nicht")," angezeigt. Default: ",Object(i.b)("inlineCode",{parentName:"li"},"false"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"owner")," | ",Object(i.b)("inlineCode",{parentName:"li"},"boolean"),": wenn eingestellt, wird der gesch\xfctzte Inhalt dem Besitzer des Kurses (normalerweise dem Kursleiter) angezeigt. Default: ",Object(i.b)("inlineCode",{parentName:"li"},"false"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"notOwner")," | ",Object(i.b)("inlineCode",{parentName:"li"},"boolean"),": wenn gesetzt, wird der gesch\xfctzte Inhalt dem Besitzer des Kurses (normalerweise dem Kursleiter) ",Object(i.b)("strong",{parentName:"li"},"nicht")," angezeigt. Default: ",Object(i.b)("inlineCode",{parentName:"li"},"false"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"after")," | ",Object(i.b)("inlineCode",{parentName:"li"},"Date"),": Zeit, nach der der Inhalt des Gates sichtbar werden soll. Default: ",Object(i.b)("inlineCode",{parentName:"li"},"none"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"until")," | ",Object(i.b)("inlineCode",{parentName:"li"},"Date"),": Zeit, bis der Inhalt des Gates sichtbar bleiben soll. Default: ",Object(i.b)("inlineCode",{parentName:"li"},"none"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"banner")," | ",Object(i.b)("inlineCode",{parentName:"li"},"node"),": eine Meldung, die den Besuchern angezeigt wird, f\xfcr die die Kinder des Gates aufgrund fehlender Berechtigungen nicht sichtbar sind. Default: ",Object(i.b)("inlineCode",{parentName:"li"},"none"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"disabled")," | ",Object(i.b)("inlineCode",{parentName:"li"},"boolean"),": wenn ein Tor deaktiviert ist, wird das Banner angezeigt, egal was. Default: ",Object(i.b)("inlineCode",{parentName:"li"},"false"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"showOwnerInPresentationMode")," | ",Object(i.b)("inlineCode",{parentName:"li"},"boolean"),": steuert, ob der Gate-Inhalt im Pr\xe4sentationsmodus angezeigt werden soll, wenn das Gate f\xfcr den ",Object(i.b)("inlineCode",{parentName:"li"},"Eigent\xfcmer")," sichtbar ist. Default: ",Object(i.b)("inlineCode",{parentName:"li"},"false"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"check")," | ",Object(i.b)("inlineCode",{parentName:"li"},"function"),': Callback-Funktion, die ein "Boolean" zur\xfcckgibt, das angibt, ob Gate untergeordnete Komponenten anzeigen soll; die Funktion wird immer dann aufgerufen, wenn Sitzungsaktionen eintreffen. Default: ',Object(i.b)("inlineCode",{parentName:"li"},"none"),".")),Object(i.b)("h2",{id:"beispiele"},"Beispiele"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"<Gate \n    banner={<h2>You have to be logged in to see the content</h2>}\n    user \n>\n    <h1>For users only</h1>\n</Gate>\n")))}s.isMDXComponent=!0},411:function(e,n,t){"use strict";t.d(n,"a",(function(){return d})),t.d(n,"b",(function(){return m}));var r=t(0),a=t.n(r);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function b(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=a.a.createContext({}),s=function(e){var n=a.a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},d=function(e){var n=s(e.components);return a.a.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},p=a.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,c=b(e,["components","mdxType","originalType","parentName"]),d=s(t),p=r,m=d["".concat(l,".").concat(p)]||d[p]||u[p]||i;return t?a.a.createElement(m,o(o({ref:n},c),{},{components:t})):a.a.createElement(m,o({ref:n},c))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,l=new Array(i);l[0]=p;var o={};for(var b in n)hasOwnProperty.call(n,b)&&(o[b]=n[b]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var c=2;c<i;c++)l[c]=t[c];return a.a.createElement.apply(null,l)}return a.a.createElement.apply(null,t)}p.displayName="MDXCreateElement"}}]);