(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{124:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return r})),t.d(n,"metadata",(function(){return o})),t.d(n,"toc",(function(){return b})),t.d(n,"default",(function(){return u}));var i=t(3),l=t(7),a=(t(0),t(409)),r={id:"plotly",title:"Plotly",sidebar_label:"Plotly"},o={unversionedId:"plotly",id:"plotly",isDocsHomePage:!1,title:"Plotly",description:"Plotly-Visualisierung.",source:"@site/i18n/de/docusaurus-plugin-content-docs/current/plotly.md",slug:"/plotly",permalink:"/de/docs/plotly",editUrl:"https://github.com/isle-project/isle-editor/edit/master/docusaurus/website/docs/plotly.md",version:"current",lastUpdatedBy:"Planeshifter",lastUpdatedAt:1613960760,sidebar_label:"Plotly",sidebar:"docs",previous:{title:"Typewriter",permalink:"/de/docs/typewriter"},next:{title:"Bar Chart",permalink:"/de/docs/plots/barchart"}},b=[{value:"Optionen",id:"optionen",children:[]},{value:"Beispiele",id:"beispiele",children:[]}],c={toc:b};function u(e){var n=e.components,t=Object(l.a)(e,["components"]);return Object(a.b)("wrapper",Object(i.a)({},c,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Plotly-Visualisierung."),Object(a.b)("h2",{id:"optionen"},"Optionen"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"data")," | ",Object(a.b)("inlineCode",{parentName:"li"},"array (required)"),": Daten-Array. Default: ",Object(a.b)("inlineCode",{parentName:"li"},"none"),"."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"draggable")," | ",Object(a.b)("inlineCode",{parentName:"li"},"boolean"),": steuert, ob der Plot verschiebbar sein soll. Default: ",Object(a.b)("inlineCode",{parentName:"li"},"false"),"."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"editable")," | ",Object(a.b)("inlineCode",{parentName:"li"},"boolean"),": steuert, ob Beschriftungen des erstellten Plots editierbar sind. Default: ",Object(a.b)("inlineCode",{parentName:"li"},"false"),"."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"id")," | ",Object(a.b)("inlineCode",{parentName:"li"},"string"),": Bauteilkennzeichen. Default: ",Object(a.b)("inlineCode",{parentName:"li"},"none"),"."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"layout")," | ",Object(a.b)("inlineCode",{parentName:"li"},"object"),": Plotly-Layoutobjekt. Default: ",Object(a.b)("inlineCode",{parentName:"li"},"{}"),"."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"config")," | ",Object(a.b)("inlineCode",{parentName:"li"},"object"),": undefined. Default: ",Object(a.b)("inlineCode",{parentName:"li"},"{}"),"."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"legendButtons")," | ",Object(a.b)("inlineCode",{parentName:"li"},"boolean"),": steuert, ob Schaltfl\xe4chen zum \xc4ndern der Legende angezeigt werden sollen. Default: ",Object(a.b)("inlineCode",{parentName:"li"},"true"),"."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"meta")," | ",Object(a.b)("inlineCode",{parentName:"li"},"object"),": Plot-Meta-Informationen. Default: ",Object(a.b)("inlineCode",{parentName:"li"},"none"),"."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"revision")," | ",Object(a.b)("inlineCode",{parentName:"li"},"number"),": wenn angegeben, bewirkt, dass die Darstellung aktualisiert wird, wenn der Revisionswert inkrementiert wird. Default: ",Object(a.b)("inlineCode",{parentName:"li"},"none"),"."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"style")," | ",Object(a.b)("inlineCode",{parentName:"li"},"object"),": CSS-Inline-Stile. Default: ",Object(a.b)("inlineCode",{parentName:"li"},"{}"),"."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"onAfterPlot")," | ",Object(a.b)("inlineCode",{parentName:"li"},"function"),": Callback-Funktion, die jedes Mal aufgerufen wird, wenn ein Diagramm gezeichnet wird. Default: ",Object(a.b)("inlineCode",{parentName:"li"},"onAfterPlot() {}"),"."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"onClick")," | ",Object(a.b)("inlineCode",{parentName:"li"},"function"),": Callback-Funktion, die aufgerufen wird, wenn ein beliebiges Element angeklickt wird. Default: ",Object(a.b)("inlineCode",{parentName:"li"},"onClick() {}"),"."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"onInitialized")," | ",Object(a.b)("inlineCode",{parentName:"li"},"function"),": Callback wird aufgerufen, sobald der Plot initialisiert ist; wird mit figure (Objekt mit drei Schl\xfcsseln, die den Eingabe-Requisiten entsprechen: ",Object(a.b)("inlineCode",{parentName:"li"},"data"),", ",Object(a.b)("inlineCode",{parentName:"li"},"layout")," und ",Object(a.b)("inlineCode",{parentName:"li"},"frames"),") und dem DOM-Knoten ",Object(a.b)("inlineCode",{parentName:"li"},"graphDiv")," aufgerufen. Default: ",Object(a.b)("inlineCode",{parentName:"li"},"onInitialized() {}"),"."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"onLegendClick")," | ",Object(a.b)("inlineCode",{parentName:"li"},"function"),": Callback-Funktion, die aufgerufen wird, wenn der Legendeneintrag angeklickt wird. Default: ",Object(a.b)("inlineCode",{parentName:"li"},"onLegendClick() {}"),"."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"onLegendDoubleClick")," | ",Object(a.b)("inlineCode",{parentName:"li"},"function"),": Callback-Funktion, die aufgerufen wird, wenn ein Legendenelement doppelt angeklickt wird. Default: ",Object(a.b)("inlineCode",{parentName:"li"},"onLegendDoubleClick() {}"),"."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"onRelayout")," | ",Object(a.b)("inlineCode",{parentName:"li"},"function"),": Callback-Funktion, die aufgerufen wird, wenn Relayout ausgel\xf6st wird. Default: ",Object(a.b)("inlineCode",{parentName:"li"},"onRelayout() {}"),"."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"onSelected")," | ",Object(a.b)("inlineCode",{parentName:"li"},"function"),": Callback-Funktion, die aufgerufen wird, wenn Elemente ausgew\xe4hlt werden. Default: ",Object(a.b)("inlineCode",{parentName:"li"},"onSelected() {}"),"."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"onShare")," | ",Object(a.b)("inlineCode",{parentName:"li"},"function"),': Callback-Funktion, die beim Klicken auf die Schaltfl\xe4che "Teilen" aufgerufen wird. Default: ',Object(a.b)("inlineCode",{parentName:"li"},"none"),"."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"removeButtons")," | ",Object(a.b)("inlineCode",{parentName:"li"},"boolean"),": steuert, ob alle Schaltfl\xe4chen entfernt werden sollen (abgesehen von der Vollbild-Schaltfl\xe4che, falls aktiviert). Default: ",Object(a.b)("inlineCode",{parentName:"li"},"false"),"."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"toggleFullscreen")," | ",Object(a.b)("inlineCode",{parentName:"li"},"boolean"),": steuert, ob die Darstellung des Plots im Vollbildmodus m\xf6glich sein soll. Default: ",Object(a.b)("inlineCode",{parentName:"li"},"true"),".")),Object(a.b)("h2",{id:"beispiele"},"Beispiele"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"<Plotly\n    data={[{\n        values: [ 24, 7, 0.5 ],\n        labels: [ 'English', 'Spanish', 'Other' ],\n        type: 'pie'\n            }]}\n    layout={{ width: 300 }}\n/>\n")))}u.isMDXComponent=!0},409:function(e,n,t){"use strict";t.d(n,"a",(function(){return d})),t.d(n,"b",(function(){return m}));var i=t(0),l=t.n(i);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function b(e,n){if(null==e)return{};var t,i,l=function(e,n){if(null==e)return{};var t,i,l={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var c=l.a.createContext({}),u=function(e){var n=l.a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},d=function(e){var n=u(e.components);return l.a.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return l.a.createElement(l.a.Fragment,{},n)}},s=l.a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,r=e.parentName,c=b(e,["components","mdxType","originalType","parentName"]),d=u(t),s=i,m=d["".concat(r,".").concat(s)]||d[s]||p[s]||a;return t?l.a.createElement(m,o(o({ref:n},c),{},{components:t})):l.a.createElement(m,o({ref:n},c))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,r=new Array(a);r[0]=s;var o={};for(var b in n)hasOwnProperty.call(n,b)&&(o[b]=n[b]);o.originalType=e,o.mdxType="string"==typeof e?e:i,r[1]=o;for(var c=2;c<a;c++)r[c]=t[c];return l.a.createElement.apply(null,r)}return l.a.createElement.apply(null,t)}s.displayName="MDXCreateElement"}}]);