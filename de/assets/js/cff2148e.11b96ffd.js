(window.webpackJsonp=window.webpackJsonp||[]).push([[321],{253:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return l})),t.d(n,"metadata",(function(){return o})),t.d(n,"toc",(function(){return c})),t.d(n,"default",(function(){return d}));var r=t(3),a=t(7),i=(t(0),t(388)),l={id:"multi-cards",title:"Multi Cards",sidebar_label:"Multi Cards"},o={unversionedId:"multi-cards",id:"multi-cards",isDocsHomePage:!1,title:"Multi Cards",description:"Eine ISLE-Komponente, mit der Sie mehrere umdrehbare Karten erstellen und steuern k\xf6nnen (z. B. bei einem Memory-Spiel).",source:"@site/i18n/de/docusaurus-plugin-content-docs/current/multi-cards.md",slug:"/multi-cards",permalink:"/de/docs/multi-cards",editUrl:"https://github.com/isle-project/isle-editor/edit/master/docusaurus/website/docs/multi-cards.md",version:"current",lastUpdatedBy:"Planeshifter",lastUpdatedAt:1613336124,sidebar_label:"Multi Cards",sidebar:"docs",previous:{title:"Likert Scale",permalink:"/de/docs/likert-scale"},next:{title:"QR Code",permalink:"/de/docs/qrcode"}},c=[{value:"Options",id:"options",children:[]},{value:"Examples",id:"examples",children:[]}],b={toc:c};function d(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},b,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Eine ISLE-Komponente, mit der Sie mehrere umdrehbare Karten erstellen und steuern k\xf6nnen (z. B. bei einem Memory-Spiel)."),Object(i.b)("h2",{id:"options"},"Options"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"animation")," | ",Object(i.b)("inlineCode",{parentName:"li"},"object"),": wenn gesetzt, verwendet die Komponente eine Eingangsanimation; das Objekt enth\xe4lt einen Namen (z. B. ",Object(i.b)("inlineCode",{parentName:"li"},"anim-scale-up"),") und eine Dauer (z. B. ",Object(i.b)("inlineCode",{parentName:"li"},"1.7s")," = 1,7 Sekunden). Default: ",Object(i.b)("inlineCode",{parentName:"li"},"{}"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"memory")," | ",Object(i.b)("inlineCode",{parentName:"li"},"boolean"),": ob der Memory-Spielmodus aktiviert werden soll, bei dem man Paare der gelieferten Werte zuordnen muss. Default: ",Object(i.b)("inlineCode",{parentName:"li"},"none"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"onChange")," | ",Object(i.b)("inlineCode",{parentName:"li"},"function"),": eine Funktion, die die Matrix der umdrehbaren Karten erh\xe4lt. Default: ",Object(i.b)("inlineCode",{parentName:"li"},"onChange() {}"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"onMemoryComplete")," | ",Object(i.b)("inlineCode",{parentName:"li"},"function"),": Callback, der aufgerufen wird, wenn das Speicherspiel beendet ist. Default: ",Object(i.b)("inlineCode",{parentName:"li"},"onMemoryComplete() {}"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"oneTime")," | ",Object(i.b)("inlineCode",{parentName:"li"},"boolean"),": gibt an, ob der Flip-Prozess nur einmal ausgef\xfchrt werden darf. Default: ",Object(i.b)("inlineCode",{parentName:"li"},"false"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"values")," | ",Object(i.b)("inlineCode",{parentName:"li"},"array<object>"),': die Werte f\xfcr die jeweiligen Karten, die in ein Array eingegeben werden, das Eingabefelder f\xfcr einen "Front"- und "Back"-Wert hat. Ein solcher Wert kann ein String sein, aber auch eine vollwertige ISLE-Komponente. Default: ',Object(i.b)("inlineCode",{parentName:"li"},"[]"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"style")," | ",Object(i.b)("inlineCode",{parentName:"li"},"object"),": CSS-Inline-Stile. Default: ",Object(i.b)("inlineCode",{parentName:"li"},"{}"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"containerStyle")," | ",Object(i.b)("inlineCode",{parentName:"li"},"object"),": CSS-Stil der Kartencontainer. Default: ",Object(i.b)("inlineCode",{parentName:"li"},"{}"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"frontStyle")," | ",Object(i.b)("inlineCode",{parentName:"li"},"object"),": CSS-Stil der Vorderseite der Karten. Default: ",Object(i.b)("inlineCode",{parentName:"li"},"{}"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"backStyle")," | ",Object(i.b)("inlineCode",{parentName:"li"},"object"),": CSS-Stil f\xfcr die R\xfcckseite der Karten. Default: ",Object(i.b)("inlineCode",{parentName:"li"},"{}"),".")),Object(i.b)("h2",{id:"examples"},"Examples"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"<MultiCards\n    onChange={(data) => {\n        console.log(data);\n    }}\n    containerStyle={{\n        width: 250,\n        height: 250,\n        marginBottom: 10\n    }}\n    frontStyle={{\n        color:'gainsboro',\n        cursor: 'pointer',\n        textAlign: 'center',\n        boxShadow: '1px 1px 10px black',\n        backgroundImage: 'url(https://isle.heinz.cmu.edu/seamless_1543575455035.png)',\n        backgroundSize: '100% auto'\n    }}\n    backStyle={{\n        color: 'blue',\n        fontSize: 20,\n        fontWeight: 800,\n        fontFamily: 'Oswald',\n        textAlign: 'left',\n        paddingLeft: '10px',\n        background: 'ghostwhite',\n        boxShadow: '1px 1px 10px black',\n    }}\n    values={[\n        { front: \"number 1\", back: 'back side of #1'},\n        { front: \"number 2\", back: 'back side of #2'},\n        { front: \"number 3\", back: 'back side of #3'},\n        { front: \"number 4\", back: 'back side of #4'}\n    ]}\n/>\n")))}d.isMDXComponent=!0},388:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return m}));var r=t(0),a=t.n(r);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var b=a.a.createContext({}),d=function(e){var n=a.a.useContext(b),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=d(e.components);return a.a.createElement(b.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},s=a.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,b=c(e,["components","mdxType","originalType","parentName"]),u=d(t),s=r,m=u["".concat(l,".").concat(s)]||u[s]||p[s]||i;return t?a.a.createElement(m,o(o({ref:n},b),{},{components:t})):a.a.createElement(m,o({ref:n},b))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,l=new Array(i);l[0]=s;var o={};for(var c in n)hasOwnProperty.call(n,c)&&(o[c]=n[c]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var b=2;b<i;b++)l[b]=t[b];return a.a.createElement.apply(null,l)}return a.a.createElement.apply(null,t)}s.displayName="MDXCreateElement"}}]);